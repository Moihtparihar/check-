import type { BaseContract, BigNumber, BigNumberish, BytesLike, CallOverrides, ContractTransaction, Overrides, PayableOverrides, PopulatedTransaction, Signer, utils } from "ethers";
import type { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "../../common.js";
export declare namespace CallLib {
    type CallStruct = {
        to: BytesLike;
        value: BigNumberish;
        data: BytesLike;
    };
    type CallStructOutput = [string, BigNumber, string] & {
        to: string;
        value: BigNumber;
        data: string;
    };
}
export interface InterchainAccountRouterInterface extends utils.Interface {
    functions: {
        "CCIP_READ_ISM()": FunctionFragment;
        "COMMIT_TX_GAS_USAGE()": FunctionFragment;
        "PACKAGE_VERSION()": FunctionFragment;
        "bytecodeHash()": FunctionFragment;
        "callRemote(uint32,(bytes32,uint256,bytes)[],bytes)": FunctionFragment;
        "callRemote(uint32,(bytes32,uint256,bytes)[])": FunctionFragment;
        "callRemoteCommitReveal(uint32,bytes32,bytes32,bytes32,bytes,address,bytes32,bytes32)": FunctionFragment;
        "callRemoteCommitReveal(uint32,bytes32,uint256)": FunctionFragment;
        "callRemoteCommitReveal(uint32,bytes32,bytes32,bytes,address,bytes32,bytes32)": FunctionFragment;
        "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes,bytes32)": FunctionFragment;
        "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[])": FunctionFragment;
        "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes32)": FunctionFragment;
        "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes,bytes32,address)": FunctionFragment;
        "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes)": FunctionFragment;
        "domains()": FunctionFragment;
        "enrollRemoteRouter(uint32,bytes32)": FunctionFragment;
        "enrollRemoteRouterAndIsm(uint32,bytes32,bytes32)": FunctionFragment;
        "enrollRemoteRouterAndIsms(uint32[],bytes32[],bytes32[])": FunctionFragment;
        "enrollRemoteRouters(uint32[],bytes32[])": FunctionFragment;
        "getDeployedInterchainAccount(uint32,bytes32,bytes32,address,bytes32)": FunctionFragment;
        "getDeployedInterchainAccount(uint32,address,address,address)": FunctionFragment;
        "getDeployedInterchainAccount(uint32,bytes32,bytes32,address)": FunctionFragment;
        "getLocalInterchainAccount(uint32,bytes32,bytes32,address,bytes32)": FunctionFragment;
        "getLocalInterchainAccount(uint32,address,address,address)": FunctionFragment;
        "getLocalInterchainAccount(uint32,bytes32,bytes32,address)": FunctionFragment;
        "getRemoteInterchainAccount(address,address,address,bytes32)": FunctionFragment;
        "getRemoteInterchainAccount(uint32,address)": FunctionFragment;
        "getRemoteInterchainAccount(uint32,address,bytes32)": FunctionFragment;
        "getRemoteInterchainAccount(address,address,address)": FunctionFragment;
        "handle(uint32,bytes32,bytes)": FunctionFragment;
        "hook()": FunctionFragment;
        "implementation()": FunctionFragment;
        "interchainSecurityModule()": FunctionFragment;
        "isms(uint32)": FunctionFragment;
        "localDomain()": FunctionFragment;
        "mailbox()": FunctionFragment;
        "moduleType()": FunctionFragment;
        "owner()": FunctionFragment;
        "quoteGasForCommitReveal(uint32,uint256)": FunctionFragment;
        "quoteGasPayment(uint32,uint256)": FunctionFragment;
        "quoteGasPayment(uint32)": FunctionFragment;
        "renounceOwnership()": FunctionFragment;
        "route(bytes)": FunctionFragment;
        "routers(uint32)": FunctionFragment;
        "setHook(address)": FunctionFragment;
        "setInterchainSecurityModule(address)": FunctionFragment;
        "transferOwnership(address)": FunctionFragment;
        "unenrollRemoteRouter(uint32)": FunctionFragment;
        "unenrollRemoteRouters(uint32[])": FunctionFragment;
        "verify(bytes,bytes)": FunctionFragment;
    };
    getFunction(nameOrSignatureOrTopic: "CCIP_READ_ISM" | "CCIP_READ_ISM()" | "COMMIT_TX_GAS_USAGE" | "COMMIT_TX_GAS_USAGE()" | "PACKAGE_VERSION" | "PACKAGE_VERSION()" | "bytecodeHash" | "bytecodeHash()" | "callRemote(uint32,(bytes32,uint256,bytes)[],bytes)" | "callRemote(uint32,(bytes32,uint256,bytes)[])" | "callRemoteCommitReveal(uint32,bytes32,bytes32,bytes32,bytes,address,bytes32,bytes32)" | "callRemoteCommitReveal(uint32,bytes32,uint256)" | "callRemoteCommitReveal(uint32,bytes32,bytes32,bytes,address,bytes32,bytes32)" | "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes,bytes32)" | "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[])" | "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes32)" | "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes,bytes32,address)" | "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes)" | "domains" | "domains()" | "enrollRemoteRouter" | "enrollRemoteRouter(uint32,bytes32)" | "enrollRemoteRouterAndIsm" | "enrollRemoteRouterAndIsm(uint32,bytes32,bytes32)" | "enrollRemoteRouterAndIsms" | "enrollRemoteRouterAndIsms(uint32[],bytes32[],bytes32[])" | "enrollRemoteRouters" | "enrollRemoteRouters(uint32[],bytes32[])" | "getDeployedInterchainAccount(uint32,bytes32,bytes32,address,bytes32)" | "getDeployedInterchainAccount(uint32,address,address,address)" | "getDeployedInterchainAccount(uint32,bytes32,bytes32,address)" | "getLocalInterchainAccount(uint32,bytes32,bytes32,address,bytes32)" | "getLocalInterchainAccount(uint32,address,address,address)" | "getLocalInterchainAccount(uint32,bytes32,bytes32,address)" | "getRemoteInterchainAccount(address,address,address,bytes32)" | "getRemoteInterchainAccount(uint32,address)" | "getRemoteInterchainAccount(uint32,address,bytes32)" | "getRemoteInterchainAccount(address,address,address)" | "handle" | "handle(uint32,bytes32,bytes)" | "hook" | "hook()" | "implementation" | "implementation()" | "interchainSecurityModule" | "interchainSecurityModule()" | "isms" | "isms(uint32)" | "localDomain" | "localDomain()" | "mailbox" | "mailbox()" | "moduleType" | "moduleType()" | "owner" | "owner()" | "quoteGasForCommitReveal" | "quoteGasForCommitReveal(uint32,uint256)" | "quoteGasPayment(uint32,uint256)" | "quoteGasPayment(uint32)" | "renounceOwnership" | "renounceOwnership()" | "route" | "route(bytes)" | "routers" | "routers(uint32)" | "setHook" | "setHook(address)" | "setInterchainSecurityModule" | "setInterchainSecurityModule(address)" | "transferOwnership" | "transferOwnership(address)" | "unenrollRemoteRouter" | "unenrollRemoteRouter(uint32)" | "unenrollRemoteRouters" | "unenrollRemoteRouters(uint32[])" | "verify" | "verify(bytes,bytes)"): FunctionFragment;
    encodeFunctionData(functionFragment: "CCIP_READ_ISM", values?: undefined): string;
    encodeFunctionData(functionFragment: "CCIP_READ_ISM()", values?: undefined): string;
    encodeFunctionData(functionFragment: "COMMIT_TX_GAS_USAGE", values?: undefined): string;
    encodeFunctionData(functionFragment: "COMMIT_TX_GAS_USAGE()", values?: undefined): string;
    encodeFunctionData(functionFragment: "PACKAGE_VERSION", values?: undefined): string;
    encodeFunctionData(functionFragment: "PACKAGE_VERSION()", values?: undefined): string;
    encodeFunctionData(functionFragment: "bytecodeHash", values?: undefined): string;
    encodeFunctionData(functionFragment: "bytecodeHash()", values?: undefined): string;
    encodeFunctionData(functionFragment: "callRemote(uint32,(bytes32,uint256,bytes)[],bytes)", values: [BigNumberish, CallLib.CallStruct[], BytesLike]): string;
    encodeFunctionData(functionFragment: "callRemote(uint32,(bytes32,uint256,bytes)[])", values: [BigNumberish, CallLib.CallStruct[]]): string;
    encodeFunctionData(functionFragment: "callRemoteCommitReveal(uint32,bytes32,bytes32,bytes32,bytes,address,bytes32,bytes32)", values: [
        BigNumberish,
        BytesLike,
        BytesLike,
        BytesLike,
        BytesLike,
        string,
        BytesLike,
        BytesLike
    ]): string;
    encodeFunctionData(functionFragment: "callRemoteCommitReveal(uint32,bytes32,uint256)", values: [BigNumberish, BytesLike, BigNumberish]): string;
    encodeFunctionData(functionFragment: "callRemoteCommitReveal(uint32,bytes32,bytes32,bytes,address,bytes32,bytes32)", values: [
        BigNumberish,
        BytesLike,
        BytesLike,
        BytesLike,
        string,
        BytesLike,
        BytesLike
    ]): string;
    encodeFunctionData(functionFragment: "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes,bytes32)", values: [
        BigNumberish,
        BytesLike,
        BytesLike,
        CallLib.CallStruct[],
        BytesLike,
        BytesLike
    ]): string;
    encodeFunctionData(functionFragment: "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[])", values: [BigNumberish, BytesLike, BytesLike, CallLib.CallStruct[]]): string;
    encodeFunctionData(functionFragment: "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes32)", values: [
        BigNumberish,
        BytesLike,
        BytesLike,
        CallLib.CallStruct[],
        BytesLike
    ]): string;
    encodeFunctionData(functionFragment: "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes,bytes32,address)", values: [
        BigNumberish,
        BytesLike,
        BytesLike,
        CallLib.CallStruct[],
        BytesLike,
        BytesLike,
        string
    ]): string;
    encodeFunctionData(functionFragment: "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes)", values: [
        BigNumberish,
        BytesLike,
        BytesLike,
        CallLib.CallStruct[],
        BytesLike
    ]): string;
    encodeFunctionData(functionFragment: "domains", values?: undefined): string;
    encodeFunctionData(functionFragment: "domains()", values?: undefined): string;
    encodeFunctionData(functionFragment: "enrollRemoteRouter", values: [BigNumberish, BytesLike]): string;
    encodeFunctionData(functionFragment: "enrollRemoteRouter(uint32,bytes32)", values: [BigNumberish, BytesLike]): string;
    encodeFunctionData(functionFragment: "enrollRemoteRouterAndIsm", values: [BigNumberish, BytesLike, BytesLike]): string;
    encodeFunctionData(functionFragment: "enrollRemoteRouterAndIsm(uint32,bytes32,bytes32)", values: [BigNumberish, BytesLike, BytesLike]): string;
    encodeFunctionData(functionFragment: "enrollRemoteRouterAndIsms", values: [BigNumberish[], BytesLike[], BytesLike[]]): string;
    encodeFunctionData(functionFragment: "enrollRemoteRouterAndIsms(uint32[],bytes32[],bytes32[])", values: [BigNumberish[], BytesLike[], BytesLike[]]): string;
    encodeFunctionData(functionFragment: "enrollRemoteRouters", values: [BigNumberish[], BytesLike[]]): string;
    encodeFunctionData(functionFragment: "enrollRemoteRouters(uint32[],bytes32[])", values: [BigNumberish[], BytesLike[]]): string;
    encodeFunctionData(functionFragment: "getDeployedInterchainAccount(uint32,bytes32,bytes32,address,bytes32)", values: [BigNumberish, BytesLike, BytesLike, string, BytesLike]): string;
    encodeFunctionData(functionFragment: "getDeployedInterchainAccount(uint32,address,address,address)", values: [BigNumberish, string, string, string]): string;
    encodeFunctionData(functionFragment: "getDeployedInterchainAccount(uint32,bytes32,bytes32,address)", values: [BigNumberish, BytesLike, BytesLike, string]): string;
    encodeFunctionData(functionFragment: "getLocalInterchainAccount(uint32,bytes32,bytes32,address,bytes32)", values: [BigNumberish, BytesLike, BytesLike, string, BytesLike]): string;
    encodeFunctionData(functionFragment: "getLocalInterchainAccount(uint32,address,address,address)", values: [BigNumberish, string, string, string]): string;
    encodeFunctionData(functionFragment: "getLocalInterchainAccount(uint32,bytes32,bytes32,address)", values: [BigNumberish, BytesLike, BytesLike, string]): string;
    encodeFunctionData(functionFragment: "getRemoteInterchainAccount(address,address,address,bytes32)", values: [string, string, string, BytesLike]): string;
    encodeFunctionData(functionFragment: "getRemoteInterchainAccount(uint32,address)", values: [BigNumberish, string]): string;
    encodeFunctionData(functionFragment: "getRemoteInterchainAccount(uint32,address,bytes32)", values: [BigNumberish, string, BytesLike]): string;
    encodeFunctionData(functionFragment: "getRemoteInterchainAccount(address,address,address)", values: [string, string, string]): string;
    encodeFunctionData(functionFragment: "handle", values: [BigNumberish, BytesLike, BytesLike]): string;
    encodeFunctionData(functionFragment: "handle(uint32,bytes32,bytes)", values: [BigNumberish, BytesLike, BytesLike]): string;
    encodeFunctionData(functionFragment: "hook", values?: undefined): string;
    encodeFunctionData(functionFragment: "hook()", values?: undefined): string;
    encodeFunctionData(functionFragment: "implementation", values?: undefined): string;
    encodeFunctionData(functionFragment: "implementation()", values?: undefined): string;
    encodeFunctionData(functionFragment: "interchainSecurityModule", values?: undefined): string;
    encodeFunctionData(functionFragment: "interchainSecurityModule()", values?: undefined): string;
    encodeFunctionData(functionFragment: "isms", values: [BigNumberish]): string;
    encodeFunctionData(functionFragment: "isms(uint32)", values: [BigNumberish]): string;
    encodeFunctionData(functionFragment: "localDomain", values?: undefined): string;
    encodeFunctionData(functionFragment: "localDomain()", values?: undefined): string;
    encodeFunctionData(functionFragment: "mailbox", values?: undefined): string;
    encodeFunctionData(functionFragment: "mailbox()", values?: undefined): string;
    encodeFunctionData(functionFragment: "moduleType", values?: undefined): string;
    encodeFunctionData(functionFragment: "moduleType()", values?: undefined): string;
    encodeFunctionData(functionFragment: "owner", values?: undefined): string;
    encodeFunctionData(functionFragment: "owner()", values?: undefined): string;
    encodeFunctionData(functionFragment: "quoteGasForCommitReveal", values: [BigNumberish, BigNumberish]): string;
    encodeFunctionData(functionFragment: "quoteGasForCommitReveal(uint32,uint256)", values: [BigNumberish, BigNumberish]): string;
    encodeFunctionData(functionFragment: "quoteGasPayment(uint32,uint256)", values: [BigNumberish, BigNumberish]): string;
    encodeFunctionData(functionFragment: "quoteGasPayment(uint32)", values: [BigNumberish]): string;
    encodeFunctionData(functionFragment: "renounceOwnership", values?: undefined): string;
    encodeFunctionData(functionFragment: "renounceOwnership()", values?: undefined): string;
    encodeFunctionData(functionFragment: "route", values: [BytesLike]): string;
    encodeFunctionData(functionFragment: "route(bytes)", values: [BytesLike]): string;
    encodeFunctionData(functionFragment: "routers", values: [BigNumberish]): string;
    encodeFunctionData(functionFragment: "routers(uint32)", values: [BigNumberish]): string;
    encodeFunctionData(functionFragment: "setHook", values: [string]): string;
    encodeFunctionData(functionFragment: "setHook(address)", values: [string]): string;
    encodeFunctionData(functionFragment: "setInterchainSecurityModule", values: [string]): string;
    encodeFunctionData(functionFragment: "setInterchainSecurityModule(address)", values: [string]): string;
    encodeFunctionData(functionFragment: "transferOwnership", values: [string]): string;
    encodeFunctionData(functionFragment: "transferOwnership(address)", values: [string]): string;
    encodeFunctionData(functionFragment: "unenrollRemoteRouter", values: [BigNumberish]): string;
    encodeFunctionData(functionFragment: "unenrollRemoteRouter(uint32)", values: [BigNumberish]): string;
    encodeFunctionData(functionFragment: "unenrollRemoteRouters", values: [BigNumberish[]]): string;
    encodeFunctionData(functionFragment: "unenrollRemoteRouters(uint32[])", values: [BigNumberish[]]): string;
    encodeFunctionData(functionFragment: "verify", values: [BytesLike, BytesLike]): string;
    encodeFunctionData(functionFragment: "verify(bytes,bytes)", values: [BytesLike, BytesLike]): string;
    decodeFunctionResult(functionFragment: "CCIP_READ_ISM", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "CCIP_READ_ISM()", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "COMMIT_TX_GAS_USAGE", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "COMMIT_TX_GAS_USAGE()", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "PACKAGE_VERSION", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "PACKAGE_VERSION()", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "bytecodeHash", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "bytecodeHash()", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "callRemote(uint32,(bytes32,uint256,bytes)[],bytes)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "callRemote(uint32,(bytes32,uint256,bytes)[])", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "callRemoteCommitReveal(uint32,bytes32,bytes32,bytes32,bytes,address,bytes32,bytes32)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "callRemoteCommitReveal(uint32,bytes32,uint256)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "callRemoteCommitReveal(uint32,bytes32,bytes32,bytes,address,bytes32,bytes32)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes,bytes32)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[])", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes32)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes,bytes32,address)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "domains", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "domains()", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "enrollRemoteRouter", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "enrollRemoteRouter(uint32,bytes32)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "enrollRemoteRouterAndIsm", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "enrollRemoteRouterAndIsm(uint32,bytes32,bytes32)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "enrollRemoteRouterAndIsms", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "enrollRemoteRouterAndIsms(uint32[],bytes32[],bytes32[])", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "enrollRemoteRouters", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "enrollRemoteRouters(uint32[],bytes32[])", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "getDeployedInterchainAccount(uint32,bytes32,bytes32,address,bytes32)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "getDeployedInterchainAccount(uint32,address,address,address)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "getDeployedInterchainAccount(uint32,bytes32,bytes32,address)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "getLocalInterchainAccount(uint32,bytes32,bytes32,address,bytes32)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "getLocalInterchainAccount(uint32,address,address,address)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "getLocalInterchainAccount(uint32,bytes32,bytes32,address)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "getRemoteInterchainAccount(address,address,address,bytes32)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "getRemoteInterchainAccount(uint32,address)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "getRemoteInterchainAccount(uint32,address,bytes32)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "getRemoteInterchainAccount(address,address,address)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "handle", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "handle(uint32,bytes32,bytes)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "hook", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "hook()", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "implementation", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "implementation()", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "interchainSecurityModule", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "interchainSecurityModule()", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "isms", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "isms(uint32)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "localDomain", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "localDomain()", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "mailbox", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "mailbox()", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "moduleType", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "moduleType()", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "owner()", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "quoteGasForCommitReveal", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "quoteGasForCommitReveal(uint32,uint256)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "quoteGasPayment(uint32,uint256)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "quoteGasPayment(uint32)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "renounceOwnership", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "renounceOwnership()", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "route", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "route(bytes)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "routers", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "routers(uint32)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "setHook", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "setHook(address)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "setInterchainSecurityModule", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "setInterchainSecurityModule(address)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "transferOwnership", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "transferOwnership(address)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "unenrollRemoteRouter", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "unenrollRemoteRouter(uint32)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "unenrollRemoteRouters", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "unenrollRemoteRouters(uint32[])", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "verify", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "verify(bytes,bytes)", data: BytesLike): Result;
    events: {
        "CommitRevealDispatched(bytes32)": EventFragment;
        "HookSet(address)": EventFragment;
        "Initialized(uint8)": EventFragment;
        "InterchainAccountCreated(address,uint32,bytes32,bytes32,address,bytes32)": EventFragment;
        "IsmSet(address)": EventFragment;
        "OwnershipTransferred(address,address)": EventFragment;
        "RemoteCallDispatched(uint32,address,bytes32,bytes32,bytes32)": EventFragment;
        "RemoteIsmEnrolled(uint32,bytes32)": EventFragment;
    };
    getEvent(nameOrSignatureOrTopic: "CommitRevealDispatched"): EventFragment;
    getEvent(nameOrSignatureOrTopic: "CommitRevealDispatched(bytes32)"): EventFragment;
    getEvent(nameOrSignatureOrTopic: "HookSet"): EventFragment;
    getEvent(nameOrSignatureOrTopic: "HookSet(address)"): EventFragment;
    getEvent(nameOrSignatureOrTopic: "Initialized"): EventFragment;
    getEvent(nameOrSignatureOrTopic: "Initialized(uint8)"): EventFragment;
    getEvent(nameOrSignatureOrTopic: "InterchainAccountCreated"): EventFragment;
    getEvent(nameOrSignatureOrTopic: "InterchainAccountCreated(address,uint32,bytes32,bytes32,address,bytes32)"): EventFragment;
    getEvent(nameOrSignatureOrTopic: "IsmSet"): EventFragment;
    getEvent(nameOrSignatureOrTopic: "IsmSet(address)"): EventFragment;
    getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
    getEvent(nameOrSignatureOrTopic: "OwnershipTransferred(address,address)"): EventFragment;
    getEvent(nameOrSignatureOrTopic: "RemoteCallDispatched"): EventFragment;
    getEvent(nameOrSignatureOrTopic: "RemoteCallDispatched(uint32,address,bytes32,bytes32,bytes32)"): EventFragment;
    getEvent(nameOrSignatureOrTopic: "RemoteIsmEnrolled"): EventFragment;
    getEvent(nameOrSignatureOrTopic: "RemoteIsmEnrolled(uint32,bytes32)"): EventFragment;
}
export interface CommitRevealDispatchedEventObject {
    commitment: string;
}
export type CommitRevealDispatchedEvent = TypedEvent<[
    string
], CommitRevealDispatchedEventObject>;
export type CommitRevealDispatchedEventFilter = TypedEventFilter<CommitRevealDispatchedEvent>;
export interface HookSetEventObject {
    _hook: string;
}
export type HookSetEvent = TypedEvent<[string], HookSetEventObject>;
export type HookSetEventFilter = TypedEventFilter<HookSetEvent>;
export interface InitializedEventObject {
    version: number;
}
export type InitializedEvent = TypedEvent<[number], InitializedEventObject>;
export type InitializedEventFilter = TypedEventFilter<InitializedEvent>;
export interface InterchainAccountCreatedEventObject {
    account: string;
    origin: number;
    router: string;
    owner: string;
    ism: string;
    salt: string;
}
export type InterchainAccountCreatedEvent = TypedEvent<[
    string,
    number,
    string,
    string,
    string,
    string
], InterchainAccountCreatedEventObject>;
export type InterchainAccountCreatedEventFilter = TypedEventFilter<InterchainAccountCreatedEvent>;
export interface IsmSetEventObject {
    _ism: string;
}
export type IsmSetEvent = TypedEvent<[string], IsmSetEventObject>;
export type IsmSetEventFilter = TypedEventFilter<IsmSetEvent>;
export interface OwnershipTransferredEventObject {
    previousOwner: string;
    newOwner: string;
}
export type OwnershipTransferredEvent = TypedEvent<[
    string,
    string
], OwnershipTransferredEventObject>;
export type OwnershipTransferredEventFilter = TypedEventFilter<OwnershipTransferredEvent>;
export interface RemoteCallDispatchedEventObject {
    destination: number;
    owner: string;
    router: string;
    ism: string;
    salt: string;
}
export type RemoteCallDispatchedEvent = TypedEvent<[
    number,
    string,
    string,
    string,
    string
], RemoteCallDispatchedEventObject>;
export type RemoteCallDispatchedEventFilter = TypedEventFilter<RemoteCallDispatchedEvent>;
export interface RemoteIsmEnrolledEventObject {
    domain: number;
    ism: string;
}
export type RemoteIsmEnrolledEvent = TypedEvent<[
    number,
    string
], RemoteIsmEnrolledEventObject>;
export type RemoteIsmEnrolledEventFilter = TypedEventFilter<RemoteIsmEnrolledEvent>;
export interface InterchainAccountRouter extends BaseContract {
    connect(signerOrProvider: Signer | Provider | string): this;
    attach(addressOrName: string): this;
    deployed(): Promise<this>;
    interface: InterchainAccountRouterInterface;
    queryFilter<TEvent extends TypedEvent>(event: TypedEventFilter<TEvent>, fromBlockOrBlockhash?: string | number | undefined, toBlock?: string | number | undefined): Promise<Array<TEvent>>;
    listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>;
    listeners(eventName?: string): Array<Listener>;
    removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this;
    removeAllListeners(eventName?: string): this;
    off: OnEvent<this>;
    on: OnEvent<this>;
    once: OnEvent<this>;
    removeListener: OnEvent<this>;
    functions: {
        CCIP_READ_ISM(overrides?: CallOverrides): Promise<[string]>;
        "CCIP_READ_ISM()"(overrides?: CallOverrides): Promise<[string]>;
        COMMIT_TX_GAS_USAGE(overrides?: CallOverrides): Promise<[BigNumber]>;
        "COMMIT_TX_GAS_USAGE()"(overrides?: CallOverrides): Promise<[BigNumber]>;
        PACKAGE_VERSION(overrides?: CallOverrides): Promise<[string]>;
        "PACKAGE_VERSION()"(overrides?: CallOverrides): Promise<[string]>;
        bytecodeHash(overrides?: CallOverrides): Promise<[string]>;
        "bytecodeHash()"(overrides?: CallOverrides): Promise<[string]>;
        "callRemote(uint32,(bytes32,uint256,bytes)[],bytes)"(_destination: BigNumberish, _calls: CallLib.CallStruct[], _hookMetadata: BytesLike, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        "callRemote(uint32,(bytes32,uint256,bytes)[])"(_destination: BigNumberish, _calls: CallLib.CallStruct[], overrides?: PayableOverrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        "callRemoteCommitReveal(uint32,bytes32,bytes32,bytes32,bytes,address,bytes32,bytes32)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _ccipReadIsm: BytesLike, _hookMetadata: BytesLike, _hook: string, _salt: BytesLike, _commitment: BytesLike, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        "callRemoteCommitReveal(uint32,bytes32,uint256)"(_destination: BigNumberish, _commitment: BytesLike, _gasLimit: BigNumberish, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        "callRemoteCommitReveal(uint32,bytes32,bytes32,bytes,address,bytes32,bytes32)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _hookMetadata: BytesLike, _hook: string, _salt: BytesLike, _commitment: BytesLike, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes,bytes32)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _calls: CallLib.CallStruct[], _hookMetadata: BytesLike, _userSalt: BytesLike, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[])"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _calls: CallLib.CallStruct[], overrides?: PayableOverrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes32)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _calls: CallLib.CallStruct[], _userSalt: BytesLike, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes,bytes32,address)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _calls: CallLib.CallStruct[], _hookMetadata: BytesLike, _salt: BytesLike, _hook: string, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _calls: CallLib.CallStruct[], _hookMetadata: BytesLike, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        domains(overrides?: CallOverrides): Promise<[number[]]>;
        "domains()"(overrides?: CallOverrides): Promise<[number[]]>;
        enrollRemoteRouter(_domain: BigNumberish, _router: BytesLike, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        "enrollRemoteRouter(uint32,bytes32)"(_domain: BigNumberish, _router: BytesLike, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        enrollRemoteRouterAndIsm(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        "enrollRemoteRouterAndIsm(uint32,bytes32,bytes32)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        enrollRemoteRouterAndIsms(_destinations: BigNumberish[], _routers: BytesLike[], _isms: BytesLike[], overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        "enrollRemoteRouterAndIsms(uint32[],bytes32[],bytes32[])"(_destinations: BigNumberish[], _routers: BytesLike[], _isms: BytesLike[], overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        enrollRemoteRouters(_domains: BigNumberish[], _addresses: BytesLike[], overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        "enrollRemoteRouters(uint32[],bytes32[])"(_domains: BigNumberish[], _addresses: BytesLike[], overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        "getDeployedInterchainAccount(uint32,bytes32,bytes32,address,bytes32)"(_origin: BigNumberish, _owner: BytesLike, _router: BytesLike, _ism: string, _userSalt: BytesLike, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        "getDeployedInterchainAccount(uint32,address,address,address)"(_origin: BigNumberish, _owner: string, _router: string, _ism: string, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        "getDeployedInterchainAccount(uint32,bytes32,bytes32,address)"(_origin: BigNumberish, _owner: BytesLike, _router: BytesLike, _ism: string, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        "getLocalInterchainAccount(uint32,bytes32,bytes32,address,bytes32)"(_origin: BigNumberish, _owner: BytesLike, _router: BytesLike, _ism: string, _userSalt: BytesLike, overrides?: CallOverrides): Promise<[string]>;
        "getLocalInterchainAccount(uint32,address,address,address)"(_origin: BigNumberish, _owner: string, _router: string, _ism: string, overrides?: CallOverrides): Promise<[string]>;
        "getLocalInterchainAccount(uint32,bytes32,bytes32,address)"(_origin: BigNumberish, _owner: BytesLike, _router: BytesLike, _ism: string, overrides?: CallOverrides): Promise<[string]>;
        "getRemoteInterchainAccount(address,address,address,bytes32)"(_owner: string, _router: string, _ism: string, _userSalt: BytesLike, overrides?: CallOverrides): Promise<[string]>;
        "getRemoteInterchainAccount(uint32,address)"(_destination: BigNumberish, _owner: string, overrides?: CallOverrides): Promise<[string]>;
        "getRemoteInterchainAccount(uint32,address,bytes32)"(_destination: BigNumberish, _owner: string, _userSalt: BytesLike, overrides?: CallOverrides): Promise<[string]>;
        "getRemoteInterchainAccount(address,address,address)"(_owner: string, _router: string, _ism: string, overrides?: CallOverrides): Promise<[string]>;
        handle(_origin: BigNumberish, _sender: BytesLike, _message: BytesLike, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        "handle(uint32,bytes32,bytes)"(_origin: BigNumberish, _sender: BytesLike, _message: BytesLike, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        hook(overrides?: CallOverrides): Promise<[string]>;
        "hook()"(overrides?: CallOverrides): Promise<[string]>;
        implementation(overrides?: CallOverrides): Promise<[string]>;
        "implementation()"(overrides?: CallOverrides): Promise<[string]>;
        interchainSecurityModule(overrides?: CallOverrides): Promise<[string]>;
        "interchainSecurityModule()"(overrides?: CallOverrides): Promise<[string]>;
        isms(destinationDomain: BigNumberish, overrides?: CallOverrides): Promise<[string] & {
            ism: string;
        }>;
        "isms(uint32)"(destinationDomain: BigNumberish, overrides?: CallOverrides): Promise<[string] & {
            ism: string;
        }>;
        localDomain(overrides?: CallOverrides): Promise<[number]>;
        "localDomain()"(overrides?: CallOverrides): Promise<[number]>;
        mailbox(overrides?: CallOverrides): Promise<[string]>;
        "mailbox()"(overrides?: CallOverrides): Promise<[string]>;
        moduleType(overrides?: CallOverrides): Promise<[number]>;
        "moduleType()"(overrides?: CallOverrides): Promise<[number]>;
        owner(overrides?: CallOverrides): Promise<[string]>;
        "owner()"(overrides?: CallOverrides): Promise<[string]>;
        quoteGasForCommitReveal(_destination: BigNumberish, gasLimit: BigNumberish, overrides?: CallOverrides): Promise<[BigNumber] & {
            _gasPayment: BigNumber;
        }>;
        "quoteGasForCommitReveal(uint32,uint256)"(_destination: BigNumberish, gasLimit: BigNumberish, overrides?: CallOverrides): Promise<[BigNumber] & {
            _gasPayment: BigNumber;
        }>;
        "quoteGasPayment(uint32,uint256)"(_destination: BigNumberish, _gasLimit: BigNumberish, overrides?: CallOverrides): Promise<[BigNumber] & {
            _gasPayment: BigNumber;
        }>;
        "quoteGasPayment(uint32)"(_destination: BigNumberish, overrides?: CallOverrides): Promise<[BigNumber] & {
            _gasPayment: BigNumber;
        }>;
        renounceOwnership(overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        "renounceOwnership()"(overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        route(_message: BytesLike, overrides?: CallOverrides): Promise<[string]>;
        "route(bytes)"(_message: BytesLike, overrides?: CallOverrides): Promise<[string]>;
        routers(_domain: BigNumberish, overrides?: CallOverrides): Promise<[string]>;
        "routers(uint32)"(_domain: BigNumberish, overrides?: CallOverrides): Promise<[string]>;
        setHook(_hook: string, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        "setHook(address)"(_hook: string, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        setInterchainSecurityModule(_module: string, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        "setInterchainSecurityModule(address)"(_module: string, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        transferOwnership(newOwner: string, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        "transferOwnership(address)"(newOwner: string, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        unenrollRemoteRouter(_domain: BigNumberish, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        "unenrollRemoteRouter(uint32)"(_domain: BigNumberish, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        unenrollRemoteRouters(_domains: BigNumberish[], overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        "unenrollRemoteRouters(uint32[])"(_domains: BigNumberish[], overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        verify(_metadata: BytesLike, _message: BytesLike, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        "verify(bytes,bytes)"(_metadata: BytesLike, _message: BytesLike, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
    };
    CCIP_READ_ISM(overrides?: CallOverrides): Promise<string>;
    "CCIP_READ_ISM()"(overrides?: CallOverrides): Promise<string>;
    COMMIT_TX_GAS_USAGE(overrides?: CallOverrides): Promise<BigNumber>;
    "COMMIT_TX_GAS_USAGE()"(overrides?: CallOverrides): Promise<BigNumber>;
    PACKAGE_VERSION(overrides?: CallOverrides): Promise<string>;
    "PACKAGE_VERSION()"(overrides?: CallOverrides): Promise<string>;
    bytecodeHash(overrides?: CallOverrides): Promise<string>;
    "bytecodeHash()"(overrides?: CallOverrides): Promise<string>;
    "callRemote(uint32,(bytes32,uint256,bytes)[],bytes)"(_destination: BigNumberish, _calls: CallLib.CallStruct[], _hookMetadata: BytesLike, overrides?: PayableOverrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    "callRemote(uint32,(bytes32,uint256,bytes)[])"(_destination: BigNumberish, _calls: CallLib.CallStruct[], overrides?: PayableOverrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    "callRemoteCommitReveal(uint32,bytes32,bytes32,bytes32,bytes,address,bytes32,bytes32)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _ccipReadIsm: BytesLike, _hookMetadata: BytesLike, _hook: string, _salt: BytesLike, _commitment: BytesLike, overrides?: PayableOverrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    "callRemoteCommitReveal(uint32,bytes32,uint256)"(_destination: BigNumberish, _commitment: BytesLike, _gasLimit: BigNumberish, overrides?: PayableOverrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    "callRemoteCommitReveal(uint32,bytes32,bytes32,bytes,address,bytes32,bytes32)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _hookMetadata: BytesLike, _hook: string, _salt: BytesLike, _commitment: BytesLike, overrides?: PayableOverrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes,bytes32)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _calls: CallLib.CallStruct[], _hookMetadata: BytesLike, _userSalt: BytesLike, overrides?: PayableOverrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[])"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _calls: CallLib.CallStruct[], overrides?: PayableOverrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes32)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _calls: CallLib.CallStruct[], _userSalt: BytesLike, overrides?: PayableOverrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes,bytes32,address)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _calls: CallLib.CallStruct[], _hookMetadata: BytesLike, _salt: BytesLike, _hook: string, overrides?: PayableOverrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _calls: CallLib.CallStruct[], _hookMetadata: BytesLike, overrides?: PayableOverrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    domains(overrides?: CallOverrides): Promise<number[]>;
    "domains()"(overrides?: CallOverrides): Promise<number[]>;
    enrollRemoteRouter(_domain: BigNumberish, _router: BytesLike, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    "enrollRemoteRouter(uint32,bytes32)"(_domain: BigNumberish, _router: BytesLike, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    enrollRemoteRouterAndIsm(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    "enrollRemoteRouterAndIsm(uint32,bytes32,bytes32)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    enrollRemoteRouterAndIsms(_destinations: BigNumberish[], _routers: BytesLike[], _isms: BytesLike[], overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    "enrollRemoteRouterAndIsms(uint32[],bytes32[],bytes32[])"(_destinations: BigNumberish[], _routers: BytesLike[], _isms: BytesLike[], overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    enrollRemoteRouters(_domains: BigNumberish[], _addresses: BytesLike[], overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    "enrollRemoteRouters(uint32[],bytes32[])"(_domains: BigNumberish[], _addresses: BytesLike[], overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    "getDeployedInterchainAccount(uint32,bytes32,bytes32,address,bytes32)"(_origin: BigNumberish, _owner: BytesLike, _router: BytesLike, _ism: string, _userSalt: BytesLike, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    "getDeployedInterchainAccount(uint32,address,address,address)"(_origin: BigNumberish, _owner: string, _router: string, _ism: string, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    "getDeployedInterchainAccount(uint32,bytes32,bytes32,address)"(_origin: BigNumberish, _owner: BytesLike, _router: BytesLike, _ism: string, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    "getLocalInterchainAccount(uint32,bytes32,bytes32,address,bytes32)"(_origin: BigNumberish, _owner: BytesLike, _router: BytesLike, _ism: string, _userSalt: BytesLike, overrides?: CallOverrides): Promise<string>;
    "getLocalInterchainAccount(uint32,address,address,address)"(_origin: BigNumberish, _owner: string, _router: string, _ism: string, overrides?: CallOverrides): Promise<string>;
    "getLocalInterchainAccount(uint32,bytes32,bytes32,address)"(_origin: BigNumberish, _owner: BytesLike, _router: BytesLike, _ism: string, overrides?: CallOverrides): Promise<string>;
    "getRemoteInterchainAccount(address,address,address,bytes32)"(_owner: string, _router: string, _ism: string, _userSalt: BytesLike, overrides?: CallOverrides): Promise<string>;
    "getRemoteInterchainAccount(uint32,address)"(_destination: BigNumberish, _owner: string, overrides?: CallOverrides): Promise<string>;
    "getRemoteInterchainAccount(uint32,address,bytes32)"(_destination: BigNumberish, _owner: string, _userSalt: BytesLike, overrides?: CallOverrides): Promise<string>;
    "getRemoteInterchainAccount(address,address,address)"(_owner: string, _router: string, _ism: string, overrides?: CallOverrides): Promise<string>;
    handle(_origin: BigNumberish, _sender: BytesLike, _message: BytesLike, overrides?: PayableOverrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    "handle(uint32,bytes32,bytes)"(_origin: BigNumberish, _sender: BytesLike, _message: BytesLike, overrides?: PayableOverrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    hook(overrides?: CallOverrides): Promise<string>;
    "hook()"(overrides?: CallOverrides): Promise<string>;
    implementation(overrides?: CallOverrides): Promise<string>;
    "implementation()"(overrides?: CallOverrides): Promise<string>;
    interchainSecurityModule(overrides?: CallOverrides): Promise<string>;
    "interchainSecurityModule()"(overrides?: CallOverrides): Promise<string>;
    isms(destinationDomain: BigNumberish, overrides?: CallOverrides): Promise<string>;
    "isms(uint32)"(destinationDomain: BigNumberish, overrides?: CallOverrides): Promise<string>;
    localDomain(overrides?: CallOverrides): Promise<number>;
    "localDomain()"(overrides?: CallOverrides): Promise<number>;
    mailbox(overrides?: CallOverrides): Promise<string>;
    "mailbox()"(overrides?: CallOverrides): Promise<string>;
    moduleType(overrides?: CallOverrides): Promise<number>;
    "moduleType()"(overrides?: CallOverrides): Promise<number>;
    owner(overrides?: CallOverrides): Promise<string>;
    "owner()"(overrides?: CallOverrides): Promise<string>;
    quoteGasForCommitReveal(_destination: BigNumberish, gasLimit: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;
    "quoteGasForCommitReveal(uint32,uint256)"(_destination: BigNumberish, gasLimit: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;
    "quoteGasPayment(uint32,uint256)"(_destination: BigNumberish, _gasLimit: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;
    "quoteGasPayment(uint32)"(_destination: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;
    renounceOwnership(overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    "renounceOwnership()"(overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    route(_message: BytesLike, overrides?: CallOverrides): Promise<string>;
    "route(bytes)"(_message: BytesLike, overrides?: CallOverrides): Promise<string>;
    routers(_domain: BigNumberish, overrides?: CallOverrides): Promise<string>;
    "routers(uint32)"(_domain: BigNumberish, overrides?: CallOverrides): Promise<string>;
    setHook(_hook: string, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    "setHook(address)"(_hook: string, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    setInterchainSecurityModule(_module: string, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    "setInterchainSecurityModule(address)"(_module: string, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    transferOwnership(newOwner: string, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    "transferOwnership(address)"(newOwner: string, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    unenrollRemoteRouter(_domain: BigNumberish, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    "unenrollRemoteRouter(uint32)"(_domain: BigNumberish, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    unenrollRemoteRouters(_domains: BigNumberish[], overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    "unenrollRemoteRouters(uint32[])"(_domains: BigNumberish[], overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    verify(_metadata: BytesLike, _message: BytesLike, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    "verify(bytes,bytes)"(_metadata: BytesLike, _message: BytesLike, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    callStatic: {
        CCIP_READ_ISM(overrides?: CallOverrides): Promise<string>;
        "CCIP_READ_ISM()"(overrides?: CallOverrides): Promise<string>;
        COMMIT_TX_GAS_USAGE(overrides?: CallOverrides): Promise<BigNumber>;
        "COMMIT_TX_GAS_USAGE()"(overrides?: CallOverrides): Promise<BigNumber>;
        PACKAGE_VERSION(overrides?: CallOverrides): Promise<string>;
        "PACKAGE_VERSION()"(overrides?: CallOverrides): Promise<string>;
        bytecodeHash(overrides?: CallOverrides): Promise<string>;
        "bytecodeHash()"(overrides?: CallOverrides): Promise<string>;
        "callRemote(uint32,(bytes32,uint256,bytes)[],bytes)"(_destination: BigNumberish, _calls: CallLib.CallStruct[], _hookMetadata: BytesLike, overrides?: CallOverrides): Promise<string>;
        "callRemote(uint32,(bytes32,uint256,bytes)[])"(_destination: BigNumberish, _calls: CallLib.CallStruct[], overrides?: CallOverrides): Promise<string>;
        "callRemoteCommitReveal(uint32,bytes32,bytes32,bytes32,bytes,address,bytes32,bytes32)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _ccipReadIsm: BytesLike, _hookMetadata: BytesLike, _hook: string, _salt: BytesLike, _commitment: BytesLike, overrides?: CallOverrides): Promise<[
            string,
            string
        ] & {
            _commitmentMsgId: string;
            _revealMsgId: string;
        }>;
        "callRemoteCommitReveal(uint32,bytes32,uint256)"(_destination: BigNumberish, _commitment: BytesLike, _gasLimit: BigNumberish, overrides?: CallOverrides): Promise<[
            string,
            string
        ] & {
            _commitmentMsgId: string;
            _revealMsgId: string;
        }>;
        "callRemoteCommitReveal(uint32,bytes32,bytes32,bytes,address,bytes32,bytes32)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _hookMetadata: BytesLike, _hook: string, _salt: BytesLike, _commitment: BytesLike, overrides?: CallOverrides): Promise<[
            string,
            string
        ] & {
            _commitmentMsgId: string;
            _revealMsgId: string;
        }>;
        "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes,bytes32)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _calls: CallLib.CallStruct[], _hookMetadata: BytesLike, _userSalt: BytesLike, overrides?: CallOverrides): Promise<string>;
        "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[])"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _calls: CallLib.CallStruct[], overrides?: CallOverrides): Promise<string>;
        "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes32)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _calls: CallLib.CallStruct[], _userSalt: BytesLike, overrides?: CallOverrides): Promise<string>;
        "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes,bytes32,address)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _calls: CallLib.CallStruct[], _hookMetadata: BytesLike, _salt: BytesLike, _hook: string, overrides?: CallOverrides): Promise<string>;
        "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _calls: CallLib.CallStruct[], _hookMetadata: BytesLike, overrides?: CallOverrides): Promise<string>;
        domains(overrides?: CallOverrides): Promise<number[]>;
        "domains()"(overrides?: CallOverrides): Promise<number[]>;
        enrollRemoteRouter(_domain: BigNumberish, _router: BytesLike, overrides?: CallOverrides): Promise<void>;
        "enrollRemoteRouter(uint32,bytes32)"(_domain: BigNumberish, _router: BytesLike, overrides?: CallOverrides): Promise<void>;
        enrollRemoteRouterAndIsm(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, overrides?: CallOverrides): Promise<void>;
        "enrollRemoteRouterAndIsm(uint32,bytes32,bytes32)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, overrides?: CallOverrides): Promise<void>;
        enrollRemoteRouterAndIsms(_destinations: BigNumberish[], _routers: BytesLike[], _isms: BytesLike[], overrides?: CallOverrides): Promise<void>;
        "enrollRemoteRouterAndIsms(uint32[],bytes32[],bytes32[])"(_destinations: BigNumberish[], _routers: BytesLike[], _isms: BytesLike[], overrides?: CallOverrides): Promise<void>;
        enrollRemoteRouters(_domains: BigNumberish[], _addresses: BytesLike[], overrides?: CallOverrides): Promise<void>;
        "enrollRemoteRouters(uint32[],bytes32[])"(_domains: BigNumberish[], _addresses: BytesLike[], overrides?: CallOverrides): Promise<void>;
        "getDeployedInterchainAccount(uint32,bytes32,bytes32,address,bytes32)"(_origin: BigNumberish, _owner: BytesLike, _router: BytesLike, _ism: string, _userSalt: BytesLike, overrides?: CallOverrides): Promise<string>;
        "getDeployedInterchainAccount(uint32,address,address,address)"(_origin: BigNumberish, _owner: string, _router: string, _ism: string, overrides?: CallOverrides): Promise<string>;
        "getDeployedInterchainAccount(uint32,bytes32,bytes32,address)"(_origin: BigNumberish, _owner: BytesLike, _router: BytesLike, _ism: string, overrides?: CallOverrides): Promise<string>;
        "getLocalInterchainAccount(uint32,bytes32,bytes32,address,bytes32)"(_origin: BigNumberish, _owner: BytesLike, _router: BytesLike, _ism: string, _userSalt: BytesLike, overrides?: CallOverrides): Promise<string>;
        "getLocalInterchainAccount(uint32,address,address,address)"(_origin: BigNumberish, _owner: string, _router: string, _ism: string, overrides?: CallOverrides): Promise<string>;
        "getLocalInterchainAccount(uint32,bytes32,bytes32,address)"(_origin: BigNumberish, _owner: BytesLike, _router: BytesLike, _ism: string, overrides?: CallOverrides): Promise<string>;
        "getRemoteInterchainAccount(address,address,address,bytes32)"(_owner: string, _router: string, _ism: string, _userSalt: BytesLike, overrides?: CallOverrides): Promise<string>;
        "getRemoteInterchainAccount(uint32,address)"(_destination: BigNumberish, _owner: string, overrides?: CallOverrides): Promise<string>;
        "getRemoteInterchainAccount(uint32,address,bytes32)"(_destination: BigNumberish, _owner: string, _userSalt: BytesLike, overrides?: CallOverrides): Promise<string>;
        "getRemoteInterchainAccount(address,address,address)"(_owner: string, _router: string, _ism: string, overrides?: CallOverrides): Promise<string>;
        handle(_origin: BigNumberish, _sender: BytesLike, _message: BytesLike, overrides?: CallOverrides): Promise<void>;
        "handle(uint32,bytes32,bytes)"(_origin: BigNumberish, _sender: BytesLike, _message: BytesLike, overrides?: CallOverrides): Promise<void>;
        hook(overrides?: CallOverrides): Promise<string>;
        "hook()"(overrides?: CallOverrides): Promise<string>;
        implementation(overrides?: CallOverrides): Promise<string>;
        "implementation()"(overrides?: CallOverrides): Promise<string>;
        interchainSecurityModule(overrides?: CallOverrides): Promise<string>;
        "interchainSecurityModule()"(overrides?: CallOverrides): Promise<string>;
        isms(destinationDomain: BigNumberish, overrides?: CallOverrides): Promise<string>;
        "isms(uint32)"(destinationDomain: BigNumberish, overrides?: CallOverrides): Promise<string>;
        localDomain(overrides?: CallOverrides): Promise<number>;
        "localDomain()"(overrides?: CallOverrides): Promise<number>;
        mailbox(overrides?: CallOverrides): Promise<string>;
        "mailbox()"(overrides?: CallOverrides): Promise<string>;
        moduleType(overrides?: CallOverrides): Promise<number>;
        "moduleType()"(overrides?: CallOverrides): Promise<number>;
        owner(overrides?: CallOverrides): Promise<string>;
        "owner()"(overrides?: CallOverrides): Promise<string>;
        quoteGasForCommitReveal(_destination: BigNumberish, gasLimit: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;
        "quoteGasForCommitReveal(uint32,uint256)"(_destination: BigNumberish, gasLimit: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;
        "quoteGasPayment(uint32,uint256)"(_destination: BigNumberish, _gasLimit: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;
        "quoteGasPayment(uint32)"(_destination: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;
        renounceOwnership(overrides?: CallOverrides): Promise<void>;
        "renounceOwnership()"(overrides?: CallOverrides): Promise<void>;
        route(_message: BytesLike, overrides?: CallOverrides): Promise<string>;
        "route(bytes)"(_message: BytesLike, overrides?: CallOverrides): Promise<string>;
        routers(_domain: BigNumberish, overrides?: CallOverrides): Promise<string>;
        "routers(uint32)"(_domain: BigNumberish, overrides?: CallOverrides): Promise<string>;
        setHook(_hook: string, overrides?: CallOverrides): Promise<void>;
        "setHook(address)"(_hook: string, overrides?: CallOverrides): Promise<void>;
        setInterchainSecurityModule(_module: string, overrides?: CallOverrides): Promise<void>;
        "setInterchainSecurityModule(address)"(_module: string, overrides?: CallOverrides): Promise<void>;
        transferOwnership(newOwner: string, overrides?: CallOverrides): Promise<void>;
        "transferOwnership(address)"(newOwner: string, overrides?: CallOverrides): Promise<void>;
        unenrollRemoteRouter(_domain: BigNumberish, overrides?: CallOverrides): Promise<void>;
        "unenrollRemoteRouter(uint32)"(_domain: BigNumberish, overrides?: CallOverrides): Promise<void>;
        unenrollRemoteRouters(_domains: BigNumberish[], overrides?: CallOverrides): Promise<void>;
        "unenrollRemoteRouters(uint32[])"(_domains: BigNumberish[], overrides?: CallOverrides): Promise<void>;
        verify(_metadata: BytesLike, _message: BytesLike, overrides?: CallOverrides): Promise<boolean>;
        "verify(bytes,bytes)"(_metadata: BytesLike, _message: BytesLike, overrides?: CallOverrides): Promise<boolean>;
    };
    filters: {
        "CommitRevealDispatched(bytes32)"(commitment?: BytesLike | null): CommitRevealDispatchedEventFilter;
        CommitRevealDispatched(commitment?: BytesLike | null): CommitRevealDispatchedEventFilter;
        "HookSet(address)"(_hook?: null): HookSetEventFilter;
        HookSet(_hook?: null): HookSetEventFilter;
        "Initialized(uint8)"(version?: null): InitializedEventFilter;
        Initialized(version?: null): InitializedEventFilter;
        "InterchainAccountCreated(address,uint32,bytes32,bytes32,address,bytes32)"(account?: string | null, origin?: null, router?: null, owner?: null, ism?: null, salt?: null): InterchainAccountCreatedEventFilter;
        InterchainAccountCreated(account?: string | null, origin?: null, router?: null, owner?: null, ism?: null, salt?: null): InterchainAccountCreatedEventFilter;
        "IsmSet(address)"(_ism?: null): IsmSetEventFilter;
        IsmSet(_ism?: null): IsmSetEventFilter;
        "OwnershipTransferred(address,address)"(previousOwner?: string | null, newOwner?: string | null): OwnershipTransferredEventFilter;
        OwnershipTransferred(previousOwner?: string | null, newOwner?: string | null): OwnershipTransferredEventFilter;
        "RemoteCallDispatched(uint32,address,bytes32,bytes32,bytes32)"(destination?: BigNumberish | null, owner?: string | null, router?: null, ism?: null, salt?: null): RemoteCallDispatchedEventFilter;
        RemoteCallDispatched(destination?: BigNumberish | null, owner?: string | null, router?: null, ism?: null, salt?: null): RemoteCallDispatchedEventFilter;
        "RemoteIsmEnrolled(uint32,bytes32)"(domain?: BigNumberish | null, ism?: null): RemoteIsmEnrolledEventFilter;
        RemoteIsmEnrolled(domain?: BigNumberish | null, ism?: null): RemoteIsmEnrolledEventFilter;
    };
    estimateGas: {
        CCIP_READ_ISM(overrides?: CallOverrides): Promise<BigNumber>;
        "CCIP_READ_ISM()"(overrides?: CallOverrides): Promise<BigNumber>;
        COMMIT_TX_GAS_USAGE(overrides?: CallOverrides): Promise<BigNumber>;
        "COMMIT_TX_GAS_USAGE()"(overrides?: CallOverrides): Promise<BigNumber>;
        PACKAGE_VERSION(overrides?: CallOverrides): Promise<BigNumber>;
        "PACKAGE_VERSION()"(overrides?: CallOverrides): Promise<BigNumber>;
        bytecodeHash(overrides?: CallOverrides): Promise<BigNumber>;
        "bytecodeHash()"(overrides?: CallOverrides): Promise<BigNumber>;
        "callRemote(uint32,(bytes32,uint256,bytes)[],bytes)"(_destination: BigNumberish, _calls: CallLib.CallStruct[], _hookMetadata: BytesLike, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<BigNumber>;
        "callRemote(uint32,(bytes32,uint256,bytes)[])"(_destination: BigNumberish, _calls: CallLib.CallStruct[], overrides?: PayableOverrides & {
            from?: string;
        }): Promise<BigNumber>;
        "callRemoteCommitReveal(uint32,bytes32,bytes32,bytes32,bytes,address,bytes32,bytes32)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _ccipReadIsm: BytesLike, _hookMetadata: BytesLike, _hook: string, _salt: BytesLike, _commitment: BytesLike, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<BigNumber>;
        "callRemoteCommitReveal(uint32,bytes32,uint256)"(_destination: BigNumberish, _commitment: BytesLike, _gasLimit: BigNumberish, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<BigNumber>;
        "callRemoteCommitReveal(uint32,bytes32,bytes32,bytes,address,bytes32,bytes32)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _hookMetadata: BytesLike, _hook: string, _salt: BytesLike, _commitment: BytesLike, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<BigNumber>;
        "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes,bytes32)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _calls: CallLib.CallStruct[], _hookMetadata: BytesLike, _userSalt: BytesLike, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<BigNumber>;
        "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[])"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _calls: CallLib.CallStruct[], overrides?: PayableOverrides & {
            from?: string;
        }): Promise<BigNumber>;
        "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes32)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _calls: CallLib.CallStruct[], _userSalt: BytesLike, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<BigNumber>;
        "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes,bytes32,address)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _calls: CallLib.CallStruct[], _hookMetadata: BytesLike, _salt: BytesLike, _hook: string, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<BigNumber>;
        "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _calls: CallLib.CallStruct[], _hookMetadata: BytesLike, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<BigNumber>;
        domains(overrides?: CallOverrides): Promise<BigNumber>;
        "domains()"(overrides?: CallOverrides): Promise<BigNumber>;
        enrollRemoteRouter(_domain: BigNumberish, _router: BytesLike, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        "enrollRemoteRouter(uint32,bytes32)"(_domain: BigNumberish, _router: BytesLike, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        enrollRemoteRouterAndIsm(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        "enrollRemoteRouterAndIsm(uint32,bytes32,bytes32)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        enrollRemoteRouterAndIsms(_destinations: BigNumberish[], _routers: BytesLike[], _isms: BytesLike[], overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        "enrollRemoteRouterAndIsms(uint32[],bytes32[],bytes32[])"(_destinations: BigNumberish[], _routers: BytesLike[], _isms: BytesLike[], overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        enrollRemoteRouters(_domains: BigNumberish[], _addresses: BytesLike[], overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        "enrollRemoteRouters(uint32[],bytes32[])"(_domains: BigNumberish[], _addresses: BytesLike[], overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        "getDeployedInterchainAccount(uint32,bytes32,bytes32,address,bytes32)"(_origin: BigNumberish, _owner: BytesLike, _router: BytesLike, _ism: string, _userSalt: BytesLike, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        "getDeployedInterchainAccount(uint32,address,address,address)"(_origin: BigNumberish, _owner: string, _router: string, _ism: string, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        "getDeployedInterchainAccount(uint32,bytes32,bytes32,address)"(_origin: BigNumberish, _owner: BytesLike, _router: BytesLike, _ism: string, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        "getLocalInterchainAccount(uint32,bytes32,bytes32,address,bytes32)"(_origin: BigNumberish, _owner: BytesLike, _router: BytesLike, _ism: string, _userSalt: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;
        "getLocalInterchainAccount(uint32,address,address,address)"(_origin: BigNumberish, _owner: string, _router: string, _ism: string, overrides?: CallOverrides): Promise<BigNumber>;
        "getLocalInterchainAccount(uint32,bytes32,bytes32,address)"(_origin: BigNumberish, _owner: BytesLike, _router: BytesLike, _ism: string, overrides?: CallOverrides): Promise<BigNumber>;
        "getRemoteInterchainAccount(address,address,address,bytes32)"(_owner: string, _router: string, _ism: string, _userSalt: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;
        "getRemoteInterchainAccount(uint32,address)"(_destination: BigNumberish, _owner: string, overrides?: CallOverrides): Promise<BigNumber>;
        "getRemoteInterchainAccount(uint32,address,bytes32)"(_destination: BigNumberish, _owner: string, _userSalt: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;
        "getRemoteInterchainAccount(address,address,address)"(_owner: string, _router: string, _ism: string, overrides?: CallOverrides): Promise<BigNumber>;
        handle(_origin: BigNumberish, _sender: BytesLike, _message: BytesLike, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<BigNumber>;
        "handle(uint32,bytes32,bytes)"(_origin: BigNumberish, _sender: BytesLike, _message: BytesLike, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<BigNumber>;
        hook(overrides?: CallOverrides): Promise<BigNumber>;
        "hook()"(overrides?: CallOverrides): Promise<BigNumber>;
        implementation(overrides?: CallOverrides): Promise<BigNumber>;
        "implementation()"(overrides?: CallOverrides): Promise<BigNumber>;
        interchainSecurityModule(overrides?: CallOverrides): Promise<BigNumber>;
        "interchainSecurityModule()"(overrides?: CallOverrides): Promise<BigNumber>;
        isms(destinationDomain: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;
        "isms(uint32)"(destinationDomain: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;
        localDomain(overrides?: CallOverrides): Promise<BigNumber>;
        "localDomain()"(overrides?: CallOverrides): Promise<BigNumber>;
        mailbox(overrides?: CallOverrides): Promise<BigNumber>;
        "mailbox()"(overrides?: CallOverrides): Promise<BigNumber>;
        moduleType(overrides?: CallOverrides): Promise<BigNumber>;
        "moduleType()"(overrides?: CallOverrides): Promise<BigNumber>;
        owner(overrides?: CallOverrides): Promise<BigNumber>;
        "owner()"(overrides?: CallOverrides): Promise<BigNumber>;
        quoteGasForCommitReveal(_destination: BigNumberish, gasLimit: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;
        "quoteGasForCommitReveal(uint32,uint256)"(_destination: BigNumberish, gasLimit: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;
        "quoteGasPayment(uint32,uint256)"(_destination: BigNumberish, _gasLimit: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;
        "quoteGasPayment(uint32)"(_destination: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;
        renounceOwnership(overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        "renounceOwnership()"(overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        route(_message: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;
        "route(bytes)"(_message: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;
        routers(_domain: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;
        "routers(uint32)"(_domain: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;
        setHook(_hook: string, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        "setHook(address)"(_hook: string, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        setInterchainSecurityModule(_module: string, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        "setInterchainSecurityModule(address)"(_module: string, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        transferOwnership(newOwner: string, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        "transferOwnership(address)"(newOwner: string, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        unenrollRemoteRouter(_domain: BigNumberish, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        "unenrollRemoteRouter(uint32)"(_domain: BigNumberish, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        unenrollRemoteRouters(_domains: BigNumberish[], overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        "unenrollRemoteRouters(uint32[])"(_domains: BigNumberish[], overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        verify(_metadata: BytesLike, _message: BytesLike, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        "verify(bytes,bytes)"(_metadata: BytesLike, _message: BytesLike, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
    };
    populateTransaction: {
        CCIP_READ_ISM(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        "CCIP_READ_ISM()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        COMMIT_TX_GAS_USAGE(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        "COMMIT_TX_GAS_USAGE()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        PACKAGE_VERSION(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        "PACKAGE_VERSION()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        bytecodeHash(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        "bytecodeHash()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        "callRemote(uint32,(bytes32,uint256,bytes)[],bytes)"(_destination: BigNumberish, _calls: CallLib.CallStruct[], _hookMetadata: BytesLike, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        "callRemote(uint32,(bytes32,uint256,bytes)[])"(_destination: BigNumberish, _calls: CallLib.CallStruct[], overrides?: PayableOverrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        "callRemoteCommitReveal(uint32,bytes32,bytes32,bytes32,bytes,address,bytes32,bytes32)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _ccipReadIsm: BytesLike, _hookMetadata: BytesLike, _hook: string, _salt: BytesLike, _commitment: BytesLike, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        "callRemoteCommitReveal(uint32,bytes32,uint256)"(_destination: BigNumberish, _commitment: BytesLike, _gasLimit: BigNumberish, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        "callRemoteCommitReveal(uint32,bytes32,bytes32,bytes,address,bytes32,bytes32)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _hookMetadata: BytesLike, _hook: string, _salt: BytesLike, _commitment: BytesLike, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes,bytes32)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _calls: CallLib.CallStruct[], _hookMetadata: BytesLike, _userSalt: BytesLike, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[])"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _calls: CallLib.CallStruct[], overrides?: PayableOverrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes32)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _calls: CallLib.CallStruct[], _userSalt: BytesLike, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes,bytes32,address)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _calls: CallLib.CallStruct[], _hookMetadata: BytesLike, _salt: BytesLike, _hook: string, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, _calls: CallLib.CallStruct[], _hookMetadata: BytesLike, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        domains(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        "domains()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        enrollRemoteRouter(_domain: BigNumberish, _router: BytesLike, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        "enrollRemoteRouter(uint32,bytes32)"(_domain: BigNumberish, _router: BytesLike, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        enrollRemoteRouterAndIsm(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        "enrollRemoteRouterAndIsm(uint32,bytes32,bytes32)"(_destination: BigNumberish, _router: BytesLike, _ism: BytesLike, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        enrollRemoteRouterAndIsms(_destinations: BigNumberish[], _routers: BytesLike[], _isms: BytesLike[], overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        "enrollRemoteRouterAndIsms(uint32[],bytes32[],bytes32[])"(_destinations: BigNumberish[], _routers: BytesLike[], _isms: BytesLike[], overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        enrollRemoteRouters(_domains: BigNumberish[], _addresses: BytesLike[], overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        "enrollRemoteRouters(uint32[],bytes32[])"(_domains: BigNumberish[], _addresses: BytesLike[], overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        "getDeployedInterchainAccount(uint32,bytes32,bytes32,address,bytes32)"(_origin: BigNumberish, _owner: BytesLike, _router: BytesLike, _ism: string, _userSalt: BytesLike, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        "getDeployedInterchainAccount(uint32,address,address,address)"(_origin: BigNumberish, _owner: string, _router: string, _ism: string, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        "getDeployedInterchainAccount(uint32,bytes32,bytes32,address)"(_origin: BigNumberish, _owner: BytesLike, _router: BytesLike, _ism: string, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        "getLocalInterchainAccount(uint32,bytes32,bytes32,address,bytes32)"(_origin: BigNumberish, _owner: BytesLike, _router: BytesLike, _ism: string, _userSalt: BytesLike, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        "getLocalInterchainAccount(uint32,address,address,address)"(_origin: BigNumberish, _owner: string, _router: string, _ism: string, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        "getLocalInterchainAccount(uint32,bytes32,bytes32,address)"(_origin: BigNumberish, _owner: BytesLike, _router: BytesLike, _ism: string, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        "getRemoteInterchainAccount(address,address,address,bytes32)"(_owner: string, _router: string, _ism: string, _userSalt: BytesLike, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        "getRemoteInterchainAccount(uint32,address)"(_destination: BigNumberish, _owner: string, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        "getRemoteInterchainAccount(uint32,address,bytes32)"(_destination: BigNumberish, _owner: string, _userSalt: BytesLike, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        "getRemoteInterchainAccount(address,address,address)"(_owner: string, _router: string, _ism: string, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        handle(_origin: BigNumberish, _sender: BytesLike, _message: BytesLike, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        "handle(uint32,bytes32,bytes)"(_origin: BigNumberish, _sender: BytesLike, _message: BytesLike, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        hook(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        "hook()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        implementation(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        "implementation()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        interchainSecurityModule(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        "interchainSecurityModule()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        isms(destinationDomain: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        "isms(uint32)"(destinationDomain: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        localDomain(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        "localDomain()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        mailbox(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        "mailbox()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        moduleType(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        "moduleType()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        quoteGasForCommitReveal(_destination: BigNumberish, gasLimit: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        "quoteGasForCommitReveal(uint32,uint256)"(_destination: BigNumberish, gasLimit: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        "quoteGasPayment(uint32,uint256)"(_destination: BigNumberish, _gasLimit: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        "quoteGasPayment(uint32)"(_destination: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        renounceOwnership(overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        "renounceOwnership()"(overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        route(_message: BytesLike, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        "route(bytes)"(_message: BytesLike, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        routers(_domain: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        "routers(uint32)"(_domain: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        setHook(_hook: string, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        "setHook(address)"(_hook: string, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        setInterchainSecurityModule(_module: string, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        "setInterchainSecurityModule(address)"(_module: string, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        transferOwnership(newOwner: string, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        "transferOwnership(address)"(newOwner: string, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        unenrollRemoteRouter(_domain: BigNumberish, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        "unenrollRemoteRouter(uint32)"(_domain: BigNumberish, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        unenrollRemoteRouters(_domains: BigNumberish[], overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        "unenrollRemoteRouters(uint32[])"(_domains: BigNumberish[], overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        verify(_metadata: BytesLike, _message: BytesLike, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        "verify(bytes,bytes)"(_metadata: BytesLike, _message: BytesLike, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
    };
}
//# sourceMappingURL=InterchainAccountRouter.d.ts.map