import type { BaseContract, BigNumber, BigNumberish, BytesLike, CallOverrides, PopulatedTransaction, Signer, utils } from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "../../../../common.js";
export declare namespace CallLib {
    type CallStruct = {
        to: BytesLike;
        value: BigNumberish;
        data: BytesLike;
    };
    type CallStructOutput = [string, BigNumber, string] & {
        to: string;
        value: BigNumber;
        data: string;
    };
}
export interface CommitmentReadIsmServiceInterface extends utils.Interface {
    functions: {
        "getCallsFromRevealMessage(bytes)": FunctionFragment;
    };
    getFunction(nameOrSignatureOrTopic: "getCallsFromRevealMessage" | "getCallsFromRevealMessage(bytes)"): FunctionFragment;
    encodeFunctionData(functionFragment: "getCallsFromRevealMessage", values: [BytesLike]): string;
    encodeFunctionData(functionFragment: "getCallsFromRevealMessage(bytes)", values: [BytesLike]): string;
    decodeFunctionResult(functionFragment: "getCallsFromRevealMessage", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "getCallsFromRevealMessage(bytes)", data: BytesLike): Result;
    events: {};
}
export interface CommitmentReadIsmService extends BaseContract {
    connect(signerOrProvider: Signer | Provider | string): this;
    attach(addressOrName: string): this;
    deployed(): Promise<this>;
    interface: CommitmentReadIsmServiceInterface;
    queryFilter<TEvent extends TypedEvent>(event: TypedEventFilter<TEvent>, fromBlockOrBlockhash?: string | number | undefined, toBlock?: string | number | undefined): Promise<Array<TEvent>>;
    listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>;
    listeners(eventName?: string): Array<Listener>;
    removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this;
    removeAllListeners(eventName?: string): this;
    off: OnEvent<this>;
    on: OnEvent<this>;
    once: OnEvent<this>;
    removeListener: OnEvent<this>;
    functions: {
        getCallsFromRevealMessage(_message: BytesLike, overrides?: CallOverrides): Promise<[
            string,
            string,
            CallLib.CallStructOutput[]
        ] & {
            ica: string;
            salt: string;
            _calls: CallLib.CallStructOutput[];
        }>;
        "getCallsFromRevealMessage(bytes)"(_message: BytesLike, overrides?: CallOverrides): Promise<[
            string,
            string,
            CallLib.CallStructOutput[]
        ] & {
            ica: string;
            salt: string;
            _calls: CallLib.CallStructOutput[];
        }>;
    };
    getCallsFromRevealMessage(_message: BytesLike, overrides?: CallOverrides): Promise<[
        string,
        string,
        CallLib.CallStructOutput[]
    ] & {
        ica: string;
        salt: string;
        _calls: CallLib.CallStructOutput[];
    }>;
    "getCallsFromRevealMessage(bytes)"(_message: BytesLike, overrides?: CallOverrides): Promise<[
        string,
        string,
        CallLib.CallStructOutput[]
    ] & {
        ica: string;
        salt: string;
        _calls: CallLib.CallStructOutput[];
    }>;
    callStatic: {
        getCallsFromRevealMessage(_message: BytesLike, overrides?: CallOverrides): Promise<[
            string,
            string,
            CallLib.CallStructOutput[]
        ] & {
            ica: string;
            salt: string;
            _calls: CallLib.CallStructOutput[];
        }>;
        "getCallsFromRevealMessage(bytes)"(_message: BytesLike, overrides?: CallOverrides): Promise<[
            string,
            string,
            CallLib.CallStructOutput[]
        ] & {
            ica: string;
            salt: string;
            _calls: CallLib.CallStructOutput[];
        }>;
    };
    filters: {};
    estimateGas: {
        getCallsFromRevealMessage(_message: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;
        "getCallsFromRevealMessage(bytes)"(_message: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;
    };
    populateTransaction: {
        getCallsFromRevealMessage(_message: BytesLike, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        "getCallsFromRevealMessage(bytes)"(_message: BytesLike, overrides?: CallOverrides): Promise<PopulatedTransaction>;
    };
}
//# sourceMappingURL=CommitmentReadIsmService.d.ts.map