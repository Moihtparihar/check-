import type { BaseContract, BigNumber, BigNumberish, BytesLike, CallOverrides, PopulatedTransaction, Signer, utils } from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "../../../../common.js";
export declare namespace IOptimismPortal {
    type WithdrawalTransactionStruct = {
        nonce: BigNumberish;
        sender: string;
        target: string;
        value: BigNumberish;
        gasLimit: BigNumberish;
        data: BytesLike;
    };
    type WithdrawalTransactionStructOutput = [
        BigNumber,
        string,
        string,
        BigNumber,
        BigNumber,
        string
    ] & {
        nonce: BigNumber;
        sender: string;
        target: string;
        value: BigNumber;
        gasLimit: BigNumber;
        data: string;
    };
    type OutputRootProofStruct = {
        version: BytesLike;
        stateRoot: BytesLike;
        messagePasserStorageRoot: BytesLike;
        latestBlockhash: BytesLike;
    };
    type OutputRootProofStructOutput = [string, string, string, string] & {
        version: string;
        stateRoot: string;
        messagePasserStorageRoot: string;
        latestBlockhash: string;
    };
}
export interface OpL2toL1ServiceInterface extends utils.Interface {
    functions: {
        "getFinalizeWithdrawalTx(bytes)": FunctionFragment;
        "getWithdrawalProof(bytes)": FunctionFragment;
    };
    getFunction(nameOrSignatureOrTopic: "getFinalizeWithdrawalTx" | "getFinalizeWithdrawalTx(bytes)" | "getWithdrawalProof" | "getWithdrawalProof(bytes)"): FunctionFragment;
    encodeFunctionData(functionFragment: "getFinalizeWithdrawalTx", values: [BytesLike]): string;
    encodeFunctionData(functionFragment: "getFinalizeWithdrawalTx(bytes)", values: [BytesLike]): string;
    encodeFunctionData(functionFragment: "getWithdrawalProof", values: [BytesLike]): string;
    encodeFunctionData(functionFragment: "getWithdrawalProof(bytes)", values: [BytesLike]): string;
    decodeFunctionResult(functionFragment: "getFinalizeWithdrawalTx", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "getFinalizeWithdrawalTx(bytes)", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "getWithdrawalProof", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "getWithdrawalProof(bytes)", data: BytesLike): Result;
    events: {};
}
export interface OpL2toL1Service extends BaseContract {
    connect(signerOrProvider: Signer | Provider | string): this;
    attach(addressOrName: string): this;
    deployed(): Promise<this>;
    interface: OpL2toL1ServiceInterface;
    queryFilter<TEvent extends TypedEvent>(event: TypedEventFilter<TEvent>, fromBlockOrBlockhash?: string | number | undefined, toBlock?: string | number | undefined): Promise<Array<TEvent>>;
    listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>;
    listeners(eventName?: string): Array<Listener>;
    removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this;
    removeAllListeners(eventName?: string): this;
    off: OnEvent<this>;
    on: OnEvent<this>;
    once: OnEvent<this>;
    removeListener: OnEvent<this>;
    functions: {
        getFinalizeWithdrawalTx(_message: BytesLike, overrides?: CallOverrides): Promise<[
            IOptimismPortal.WithdrawalTransactionStructOutput
        ] & {
            _tx: IOptimismPortal.WithdrawalTransactionStructOutput;
        }>;
        "getFinalizeWithdrawalTx(bytes)"(_message: BytesLike, overrides?: CallOverrides): Promise<[
            IOptimismPortal.WithdrawalTransactionStructOutput
        ] & {
            _tx: IOptimismPortal.WithdrawalTransactionStructOutput;
        }>;
        getWithdrawalProof(_message: BytesLike, overrides?: CallOverrides): Promise<[
            IOptimismPortal.WithdrawalTransactionStructOutput,
            BigNumber,
            IOptimismPortal.OutputRootProofStructOutput,
            string[]
        ] & {
            _tx: IOptimismPortal.WithdrawalTransactionStructOutput;
            _disputeGameIndex: BigNumber;
            _outputRootProof: IOptimismPortal.OutputRootProofStructOutput;
            _withdrawalProof: string[];
        }>;
        "getWithdrawalProof(bytes)"(_message: BytesLike, overrides?: CallOverrides): Promise<[
            IOptimismPortal.WithdrawalTransactionStructOutput,
            BigNumber,
            IOptimismPortal.OutputRootProofStructOutput,
            string[]
        ] & {
            _tx: IOptimismPortal.WithdrawalTransactionStructOutput;
            _disputeGameIndex: BigNumber;
            _outputRootProof: IOptimismPortal.OutputRootProofStructOutput;
            _withdrawalProof: string[];
        }>;
    };
    getFinalizeWithdrawalTx(_message: BytesLike, overrides?: CallOverrides): Promise<IOptimismPortal.WithdrawalTransactionStructOutput>;
    "getFinalizeWithdrawalTx(bytes)"(_message: BytesLike, overrides?: CallOverrides): Promise<IOptimismPortal.WithdrawalTransactionStructOutput>;
    getWithdrawalProof(_message: BytesLike, overrides?: CallOverrides): Promise<[
        IOptimismPortal.WithdrawalTransactionStructOutput,
        BigNumber,
        IOptimismPortal.OutputRootProofStructOutput,
        string[]
    ] & {
        _tx: IOptimismPortal.WithdrawalTransactionStructOutput;
        _disputeGameIndex: BigNumber;
        _outputRootProof: IOptimismPortal.OutputRootProofStructOutput;
        _withdrawalProof: string[];
    }>;
    "getWithdrawalProof(bytes)"(_message: BytesLike, overrides?: CallOverrides): Promise<[
        IOptimismPortal.WithdrawalTransactionStructOutput,
        BigNumber,
        IOptimismPortal.OutputRootProofStructOutput,
        string[]
    ] & {
        _tx: IOptimismPortal.WithdrawalTransactionStructOutput;
        _disputeGameIndex: BigNumber;
        _outputRootProof: IOptimismPortal.OutputRootProofStructOutput;
        _withdrawalProof: string[];
    }>;
    callStatic: {
        getFinalizeWithdrawalTx(_message: BytesLike, overrides?: CallOverrides): Promise<IOptimismPortal.WithdrawalTransactionStructOutput>;
        "getFinalizeWithdrawalTx(bytes)"(_message: BytesLike, overrides?: CallOverrides): Promise<IOptimismPortal.WithdrawalTransactionStructOutput>;
        getWithdrawalProof(_message: BytesLike, overrides?: CallOverrides): Promise<[
            IOptimismPortal.WithdrawalTransactionStructOutput,
            BigNumber,
            IOptimismPortal.OutputRootProofStructOutput,
            string[]
        ] & {
            _tx: IOptimismPortal.WithdrawalTransactionStructOutput;
            _disputeGameIndex: BigNumber;
            _outputRootProof: IOptimismPortal.OutputRootProofStructOutput;
            _withdrawalProof: string[];
        }>;
        "getWithdrawalProof(bytes)"(_message: BytesLike, overrides?: CallOverrides): Promise<[
            IOptimismPortal.WithdrawalTransactionStructOutput,
            BigNumber,
            IOptimismPortal.OutputRootProofStructOutput,
            string[]
        ] & {
            _tx: IOptimismPortal.WithdrawalTransactionStructOutput;
            _disputeGameIndex: BigNumber;
            _outputRootProof: IOptimismPortal.OutputRootProofStructOutput;
            _withdrawalProof: string[];
        }>;
    };
    filters: {};
    estimateGas: {
        getFinalizeWithdrawalTx(_message: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;
        "getFinalizeWithdrawalTx(bytes)"(_message: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;
        getWithdrawalProof(_message: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;
        "getWithdrawalProof(bytes)"(_message: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;
    };
    populateTransaction: {
        getFinalizeWithdrawalTx(_message: BytesLike, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        "getFinalizeWithdrawalTx(bytes)"(_message: BytesLike, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        getWithdrawalProof(_message: BytesLike, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        "getWithdrawalProof(bytes)"(_message: BytesLike, overrides?: CallOverrides): Promise<PopulatedTransaction>;
    };
}
//# sourceMappingURL=OpL2toL1Service.d.ts.map