import { Signer, ContractFactory, BigNumberish, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RateLimited, RateLimitedInterface } from "../../../contracts/libs/RateLimited.js";
type RateLimitedConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class RateLimited__factory extends ContractFactory {
    constructor(...args: RateLimitedConstructorParams);
    deploy(_capacity: BigNumberish, overrides?: Overrides & {
        from?: string;
    }): Promise<RateLimited>;
    getDeployTransaction(_capacity: BigNumberish, overrides?: Overrides & {
        from?: string;
    }): TransactionRequest;
    attach(address: string): RateLimited;
    connect(signer: Signer): RateLimited__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b506040516107d73803806107d783398101604081905261002f916101c3565b620151808110156100965760405162461bcd60e51b815260206004820152602660248201527f4361706163697479206d7573742062652067726561746572207468616e2044556044820152652920aa24a7a760d11b60648201526084015b60405180910390fd5b61009f336100b1565b6100a881610103565b506065556101fe565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600061010d610167565b606654600061011f62015180856101dc565b606681905560408051848152602081018390529192507f120d3d0ec313528ff2b46390b335f973cae83e92345e3431ded6795864543c16910160405180910390a19392505050565b6033546001600160a01b031633146101c15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161008d565b565b6000602082840312156101d557600080fd5b5051919050565b6000826101f957634e487b7160e01b600052601260045260246000fd5b500490565b6105ca8061020d6000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c806380f264ee11610076578063c0bc6d841161005b578063c0bc6d841461013f578063d0b06f5d14610147578063f2fde38b1461015057600080fd5b806380f264ee146101045780638da5cb5b1461011757600080fd5b806349a3e3d0116100a757806349a3e3d0146100e957806359b6a0c9146100f2578063715018a6146100fa57600080fd5b80631be05289146100c3578063435635a1146100e0575b600080fd5b6100cd6201518081565b6040519081526020015b60405180910390f35b6100cd60665481565b6100cd60655481565b6100cd610163565b61010261017b565b005b6100cd610112366004610491565b61018f565b60335460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100d7565b6100cd6101f3565b6100cd60675481565b61010261015e3660046104aa565b6102bb565b6000620151806066546101769190610516565b905090565b610183610372565b61018d60006103f3565b565b6000610199610372565b60665460006101ab6201518085610533565b606681905560408051848152602081018390529192507f120d3d0ec313528ff2b46390b335f973cae83e92345e3431ded6795864543c16910160405180910390a19392505050565b6000806101fe610163565b90506000811161026f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f526174654c696d69744e6f74536574000000000000000000000000000000000060448201526064015b60405180910390fd5b62015180606754610280919061056e565b42111561028c57919050565b600061029661046a565b6065546102a3919061056e565b90508181116102b257806102b4565b815b9250505090565b6102c3610372565b73ffffffffffffffffffffffffffffffffffffffff8116610366576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610266565b61036f816103f3565b50565b60335473ffffffffffffffffffffffffffffffffffffffff16331461018d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610266565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000806067544261047b9190610581565b90506066548161048b9190610516565b91505090565b6000602082840312156104a357600080fd5b5035919050565b6000602082840312156104bc57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146104e057600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808202811582820484141761052d5761052d6104e7565b92915050565b600082610569577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b8082018082111561052d5761052d6104e7565b8181038181111561052d5761052d6104e756fea2646970667358221220c20369388d5a96403ad74c848adab24c49724c4f9d981346f351b0c87f4f558a64736f6c63430008160033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_capacity";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "newLimit";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "targetLimit";
            readonly type: "uint256";
        }];
        readonly name: "RateLimitExceeded";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "filledLevel";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "lastUpdated";
            readonly type: "uint256";
        }];
        readonly name: "ConsumedFilledLevel";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint8";
            readonly name: "version";
            readonly type: "uint8";
        }];
        readonly name: "Initialized";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "_oldCapacity";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "_newCapacity";
            readonly type: "uint256";
        }];
        readonly name: "RateLimitSet";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "DURATION";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "calculateCurrentLevel";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "filledLevel";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "lastUpdated";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "maxCapacity";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "refillRate";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_capacity";
            readonly type: "uint256";
        }];
        readonly name: "setRefillRate";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): RateLimitedInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): RateLimited;
}
export {};
//# sourceMappingURL=RateLimited__factory.d.ts.map