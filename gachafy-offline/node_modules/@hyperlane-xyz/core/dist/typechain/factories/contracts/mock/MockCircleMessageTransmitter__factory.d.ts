import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockCircleMessageTransmitter, MockCircleMessageTransmitterInterface } from "../../../contracts/mock/MockCircleMessageTransmitter.js";
type MockCircleMessageTransmitterConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class MockCircleMessageTransmitter__factory extends ContractFactory {
    constructor(...args: MockCircleMessageTransmitterConstructorParams);
    deploy(_token: string, overrides?: Overrides & {
        from?: string;
    }): Promise<MockCircleMessageTransmitter>;
    getDeployTransaction(_token: string, overrides?: Overrides & {
        from?: string;
    }): TransactionRequest;
    attach(address: string): MockCircleMessageTransmitter;
    connect(signer: Signer): MockCircleMessageTransmitter__factory;
    static readonly bytecode = "0x6080604052600080546001600160401b03191690556002805463ffffffff60c01b1916905534801561003057600080fd5b50604051610a21380380610a2183398101604081905261004f91610074565b600280546001600160a01b0319166001600160a01b03929092169190911790556100a4565b60006020828403121561008657600080fd5b81516001600160a01b038116811461009d57600080fd5b9392505050565b61096e806100b36000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80638d3638f411610081578063f7259a751161005b578063f7259a75146102b0578063fd2b1db3146102c3578063feb61724146102d657600080fd5b80638d3638f41461025d578063affed0e014610289578063b857b7741461029d57600080fd5b806354fd4d50116100b257806354fd4d501461019a57806357ecfd28146101d757806362ddb8e1146101fe57600080fd5b80630ba469bc146100ce57806337e3d6bc146100ff575b600080fd5b6100e16100dc366004610540565b6102e9565b60405167ffffffffffffffff90911681526020015b60405180910390f35b61018c61010d36600461059a565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1660208201527fffffffffffffffff00000000000000000000000000000000000000000000000060c083901b166024820152600090602c0160405160208183030381529060405280519060200120905092915050565b6040519081526020016100f6565b6002546101c29074010000000000000000000000000000000000000000900463ffffffff1681565b60405163ffffffff90911681526020016100f6565b6101ee6101e536600461060d565b50600192915050565b60405190151581526020016100f6565b61025b61020c366004610706565b6002805463ffffffff90921674010000000000000000000000000000000000000000027fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff909216919091179055565b005b6002546101c2907801000000000000000000000000000000000000000000000000900463ffffffff1681565b6000546100e19067ffffffffffffffff1681565b61025b6102ab366004610728565b61036c565b6100e16102be3660046107cb565b6103d2565b61025b6102d1366004610833565b6103ea565b61018c6102e4366004610884565b6104b5565b60007f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b036838360405161031c92919061089d565b60405180910390a160008054819061033d9067ffffffffffffffff166108ea565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790559050949350505050565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4e6f7420696d706c656d656e7465640000000000000000000000000000000000604482015260640160405180910390fd5b60006103e0868685856102e9565b9695505050505050565b60008381526001602081905260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016909117905560025490517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052909116906340c10f1990604401600060405180830381600087803b15801561049857600080fd5b505af11580156104ac573d6000803e3d6000fd5b50505050505050565b60008181526001602052604081205460ff166104d25760006104d5565b60015b60ff1692915050565b803563ffffffff811681146104f257600080fd5b919050565b60008083601f84011261050957600080fd5b50813567ffffffffffffffff81111561052157600080fd5b60208301915083602082850101111561053957600080fd5b9250929050565b6000806000806060858703121561055657600080fd5b61055f856104de565b935060208501359250604085013567ffffffffffffffff81111561058257600080fd5b61058e878288016104f7565b95989497509550505050565b600080604083850312156105ad57600080fd5b6105b6836104de565b9150602083013567ffffffffffffffff811681146105d357600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060006040848603121561062257600080fd5b833567ffffffffffffffff8082111561063a57600080fd5b818601915086601f83011261064e57600080fd5b813581811115610660576106606105de565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156106a6576106a66105de565b816040528281528960208487010111156106bf57600080fd5b8260208601602083013760006020848301015280975050505060208601359150808211156106ec57600080fd5b506106f9868287016104f7565b9497909650939450505050565b60006020828403121561071857600080fd5b610721826104de565b9392505050565b60008060008060008060006080888a03121561074357600080fd5b873567ffffffffffffffff8082111561075b57600080fd5b6107678b838c016104f7565b909950975060208a013591508082111561078057600080fd5b61078c8b838c016104f7565b909750955060408a01359150808211156107a557600080fd5b506107b28a828b016104f7565b989b979a50959894979596606090950135949350505050565b6000806000806000608086880312156107e357600080fd5b6107ec866104de565b94506020860135935060408601359250606086013567ffffffffffffffff81111561081657600080fd5b610822888289016104f7565b969995985093965092949392505050565b60008060006060848603121561084857600080fd5b83359250602084013573ffffffffffffffffffffffffffffffffffffffff8116811461087357600080fd5b929592945050506040919091013590565b60006020828403121561089657600080fd5b5035919050565b60208152816020820152818360408301376000818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101919050565b600067ffffffffffffffff80831681810361092e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600101939250505056fea26469706673582212205311be8aa483f53bfc12725938a08cdb62835a69573b637122500548c3d0bbdb64736f6c63430008160033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract MockToken";
            readonly name: "_token";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "message";
            readonly type: "bytes";
        }];
        readonly name: "MessageSent";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_source";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint64";
            readonly name: "_nonce";
            readonly type: "uint64";
        }];
        readonly name: "hashSourceAndNonce";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "localDomain";
        readonly outputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "nonce";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "";
            readonly type: "uint64";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_nonceId";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "_recipient";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amount";
            readonly type: "uint256";
        }];
        readonly name: "process";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "receiveMessage";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "success";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "originalMessage";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "originalAttestation";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "newMessageBody";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes32";
            readonly name: "newDestinationCaller";
            readonly type: "bytes32";
        }];
        readonly name: "replaceMessage";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "destinationDomain";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "recipient";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "messageBody";
            readonly type: "bytes";
        }];
        readonly name: "sendMessage";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "";
            readonly type: "uint64";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "destinationDomain";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "recipient";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "destinationCaller";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "messageBody";
            readonly type: "bytes";
        }];
        readonly name: "sendMessageWithCaller";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "";
            readonly type: "uint64";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_version";
            readonly type: "uint32";
        }];
        readonly name: "setVersion";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_nonceId";
            readonly type: "bytes32";
        }];
        readonly name: "usedNonces";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "version";
        readonly outputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): MockCircleMessageTransmitterInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): MockCircleMessageTransmitter;
}
export {};
//# sourceMappingURL=MockCircleMessageTransmitter__factory.d.ts.map