import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { StorageGasOracle, StorageGasOracleInterface } from "../../../../contracts/hooks/igp/StorageGasOracle.js";
type StorageGasOracleConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class StorageGasOracle__factory extends ContractFactory {
    constructor(...args: StorageGasOracleConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string;
    }): Promise<StorageGasOracle>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string;
    }): TransactionRequest;
    attach(address: string): StorageGasOracle;
    connect(signer: Signer): StorageGasOracle__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6107658061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806393c448471161005b57806393c4484714610166578063b08e56d0146101af578063f2fde38b146101f9578063f3a1495f1461020c57600080fd5b806360fcef7c1461008d578063698faffc14610121578063715018a6146101365780638da5cb5b1461013e575b600080fd5b6100f361009b366004610571565b63ffffffff166000908152600160209081526040918290208251808401909352546fffffffffffffffffffffffffffffffff808216808552700100000000000000000000000000000000909204169290910182905291565b604080516fffffffffffffffffffffffffffffffff9384168152929091166020830152015b60405180910390f35b61013461012f36600461059e565b61021f565b005b610134610261565b60005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610118565b6101a26040518060400160405280600581526020017f392e302e3900000000000000000000000000000000000000000000000000000081525081565b6040516101189190610613565b6100f36101bd366004610571565b6001602052600090815260409020546fffffffffffffffffffffffffffffffff8082169170010000000000000000000000000000000090041682565b610134610207366004610680565b610275565b61013461021a3660046106b6565b610331565b610227610342565b8060005b8181101561025b57610253848483818110610248576102486106ce565b9050606002016103c3565b60010161022b565b50505050565b610269610342565b61027360006104fc565b565b61027d610342565b73ffffffffffffffffffffffffffffffffffffffff8116610325576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61032e816104fc565b50565b610339610342565b61032e816103c3565b60005473ffffffffffffffffffffffffffffffffffffffff163314610273576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161031c565b60405180604001604052808260200160208101906103e191906106fd565b6fffffffffffffffffffffffffffffffff16815260200161040860608401604085016106fd565b6fffffffffffffffffffffffffffffffff1690526001600061042d6020850185610571565b63ffffffff1681526020808201929092526040016000208251928201516fffffffffffffffffffffffffffffffff9081167001000000000000000000000000000000000293169290921790915561048690820182610571565b63ffffffff167fb48c1cb713397fc0c0649596c221270fec0b3de3f85ccf6a734411a2fe57a6946104bd60408401602085016106fd565b6104cd60608501604086016106fd565b604080516fffffffffffffffffffffffffffffffff93841681529290911660208301520160405180910390a250565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561058357600080fd5b813563ffffffff8116811461059757600080fd5b9392505050565b600080602083850312156105b157600080fd5b823567ffffffffffffffff808211156105c957600080fd5b818501915085601f8301126105dd57600080fd5b8135818111156105ec57600080fd5b86602060608302850101111561060157600080fd5b60209290920196919550909350505050565b60006020808352835180602085015260005b8181101561064157858101830151858201604001528201610625565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b60006020828403121561069257600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461059757600080fd5b6000606082840312156106c857600080fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561070f57600080fd5b81356fffffffffffffffffffffffffffffffff8116811461059757600080fdfea2646970667358221220431c97b5368b512e3f63194c4e762f4843cbbd3cc81a0e98b7638f8447e94b0764736f6c63430008160033";
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint32";
            readonly name: "remoteDomain";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint128";
            readonly name: "tokenExchangeRate";
            readonly type: "uint128";
        }, {
            readonly indexed: false;
            readonly internalType: "uint128";
            readonly name: "gasPrice";
            readonly type: "uint128";
        }];
        readonly name: "RemoteGasDataSet";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "PACKAGE_VERSION";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_destinationDomain";
            readonly type: "uint32";
        }];
        readonly name: "getExchangeRateAndGasPrice";
        readonly outputs: readonly [{
            readonly internalType: "uint128";
            readonly name: "tokenExchangeRate";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "gasPrice";
            readonly type: "uint128";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "remoteDomain";
            readonly type: "uint32";
        }];
        readonly name: "remoteGasData";
        readonly outputs: readonly [{
            readonly internalType: "uint128";
            readonly name: "tokenExchangeRate";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "gasPrice";
            readonly type: "uint128";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint32";
                readonly name: "remoteDomain";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "tokenExchangeRate";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "gasPrice";
                readonly type: "uint128";
            }];
            readonly internalType: "struct StorageGasOracle.RemoteGasDataConfig";
            readonly name: "_config";
            readonly type: "tuple";
        }];
        readonly name: "setRemoteGasData";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint32";
                readonly name: "remoteDomain";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "tokenExchangeRate";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "gasPrice";
                readonly type: "uint128";
            }];
            readonly internalType: "struct StorageGasOracle.RemoteGasDataConfig[]";
            readonly name: "_configs";
            readonly type: "tuple[]";
        }];
        readonly name: "setRemoteGasDataConfigs";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): StorageGasOracleInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): StorageGasOracle;
}
export {};
//# sourceMappingURL=StorageGasOracle__factory.d.ts.map