/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_mailbox",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "_hook",
                type: "address",
            },
        ],
        name: "HookSet",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "_ism",
                type: "address",
            },
        ],
        name: "IsmSet",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "validator",
                type: "address",
            },
            {
                indexed: false,
                internalType: "string",
                name: "storageLocation",
                type: "string",
            },
        ],
        name: "ValidatorAnnouncement",
        type: "event",
    },
    {
        inputs: [],
        name: "PACKAGE_VERSION",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_validator",
                type: "address",
            },
            {
                internalType: "string",
                name: "_storageLocation",
                type: "string",
            },
            {
                internalType: "bytes",
                name: "_signature",
                type: "bytes",
            },
        ],
        name: "announce",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "_validators",
                type: "address[]",
            },
        ],
        name: "getAnnouncedStorageLocations",
        outputs: [
            {
                internalType: "string[][]",
                name: "",
                type: "string[][]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getAnnouncedValidators",
        outputs: [
            {
                internalType: "address[]",
                name: "",
                type: "address[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "_storageLocation",
                type: "string",
            },
        ],
        name: "getAnnouncementDigest",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "hook",
        outputs: [
            {
                internalType: "contract IPostDispatchHook",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "interchainSecurityModule",
        outputs: [
            {
                internalType: "contract IInterchainSecurityModule",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "localDomain",
        outputs: [
            {
                internalType: "uint32",
                name: "",
                type: "uint32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "mailbox",
        outputs: [
            {
                internalType: "contract IMailbox",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_hook",
                type: "address",
            },
        ],
        name: "setHook",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_module",
                type: "address",
            },
        ],
        name: "setInterchainSecurityModule",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60c06040523480156200001157600080fd5b5060405162001a5538038062001a55833981016040819052620000349162000172565b80806001600160a01b0381163b620000925760405162461bcd60e51b815260206004820152601e60248201527f4d61696c626f78436c69656e743a20696e76616c6964206d61696c626f780000604482015260640160405180910390fd5b6001600160a01b03821660808190526040805163234d8e3d60e21b81529051638d3638f4916004808201926020929091908290030181865afa158015620000dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001039190620001a4565b63ffffffff1660a052620001173362000120565b505050620001cc565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200018557600080fd5b81516001600160a01b03811681146200019d57600080fd5b9392505050565b600060208284031215620001b757600080fd5b815163ffffffff811681146200019d57600080fd5b60805160a05161185562000200600039600081816101c60152610a3101526000818161028a0152610a6701526118556000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638d3638f41161008c578063b91e6a5111610066578063b91e6a5114610264578063d5438eae14610285578063de523cf3146102ac578063f2fde38b146102ca57600080fd5b80638d3638f4146101c15780638da5cb5b146101fd57806393c448471461021b57600080fd5b806351abe7cc116100c857806351abe7cc1461013f578063690cb7861461015f578063715018a6146101745780637f5a7c7b1461017c57600080fd5b80630e72cc06146100ef57806321f71781146101045780633dfd38731461012c575b600080fd5b6101026100fd366004611142565b6102dd565b005b61011761011236600461119f565b61042b565b60405190151581526020015b60405180910390f35b61010261013a366004611142565b6106fd565b61015261014d366004611220565b61083e565b6040516101239190611303565b610167610a00565b60405161012391906113e5565b610102610a11565b60655461019c9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610123565b6101e87f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610123565b60335473ffffffffffffffffffffffffffffffffffffffff1661019c565b6102576040518060400160405280600581526020017f392e302e3900000000000000000000000000000000000000000000000000000081525081565b604051610123919061143f565b610277610272366004611481565b610a25565b604051908152602001610123565b61019c7f000000000000000000000000000000000000000000000000000000000000000081565b60665473ffffffffffffffffffffffffffffffffffffffff1661019c565b6101026102d8366004611142565b610b5b565b8073ffffffffffffffffffffffffffffffffffffffff81163b151580610317575073ffffffffffffffffffffffffffffffffffffffff8116155b6103a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e670000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6103b0610c12565b606680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091556040519081527fc47cbcc588c67679e52261c45cc315e56562f8d0ccaba16facb9093ff9498799906020015b60405180910390a15050565b60008086868660405160200161044393929190611550565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291815281516020928301206000818152609a90935291205490915060ff16156104f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f7265706c61790000000000000000000000000000000000000000000000000000604482015260640161039f565b6000818152609a6020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558051601f8901839004830281018301909152878152610566918990899081908401838280828437600092019190915250610a2592505050565b905060006105aa8287878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610c9392505050565b90508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610641576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f217369676e617475726500000000000000000000000000000000000000000000604482015260640161039f565b61064c60978a610caf565b61065d5761065b60978a610ce1565b505b73ffffffffffffffffffffffffffffffffffffffff891660009081526099602090815260408220805460018101825590835291200161069d888a83611633565b508873ffffffffffffffffffffffffffffffffffffffff167f78066d8adb677a1353d1fc8be28cf03e2a8de7157bbab979953587d78076c11e89896040516106e692919061174e565b60405180910390a250600198975050505050505050565b8073ffffffffffffffffffffffffffffffffffffffff81163b151580610737575073ffffffffffffffffffffffffffffffffffffffff8116155b6107c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e6700000000000000000000000000000000000000000000000000606482015260840161039f565b6107cb610c12565b606580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091556040519081527f4eab7b127c764308788622363ad3e9532de3dfba7845bd4f84c125a22544255a9060200161041f565b606060008267ffffffffffffffff81111561085b5761085b611452565b60405190808252806020026020018201604052801561088e57816020015b60608152602001906001900390816108795790505b50905060005b838110156109f657609960008686848181106108b2576108b261179b565b90506020020160208101906108c79190611142565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156109cd5783829060005260206000200180546109409061158f565b80601f016020809104026020016040519081016040528092919081815260200182805461096c9061158f565b80156109b95780601f1061098e576101008083540402835291602001916109b9565b820191906000526020600020905b81548152906001019060200180831161099c57829003601f168201915b505050505081526020019060010190610921565b505050508282815181106109e3576109e361179b565b6020908102919091010152600101610894565b5090505b92915050565b6060610a0c6097610d03565b905090565b610a19610c12565b610a236000610d10565b565b60006109fa610b0060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001660405160e09290921b7fffffffff0000000000000000000000000000000000000000000000000000000016602083015260248201527f48595045524c414e455f414e4e4f554e43454d454e54000000000000000000006044820152605a0160405160208183030381529060405280519060200120905090565b83604051602001610b129291906117ca565b604051602081830303815290604052805190602001207f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b610b63610c12565b73ffffffffffffffffffffffffffffffffffffffff8116610c06576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161039f565b610c0f81610d10565b50565b60335473ffffffffffffffffffffffffffffffffffffffff163314610a23576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161039f565b6000806000610ca28585610d87565b915091506109f681610dcc565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260018301602052604081205415155b9392505050565b6000610cda8373ffffffffffffffffffffffffffffffffffffffff8416610f7f565b60606000610cda83610fce565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000808251604103610dbd5760208301516040840151606085015160001a610db18782858561102a565b94509450505050610dc5565b506000905060025b9250929050565b6000816004811115610de057610de06117f0565b03610de85750565b6001816004811115610dfc57610dfc6117f0565b03610e63576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161039f565b6002816004811115610e7757610e776117f0565b03610ede576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161039f565b6003816004811115610ef257610ef26117f0565b03610c0f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015260840161039f565b6000818152600183016020526040812054610fc6575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556109fa565b5060006109fa565b60608160000180548060200260200160405190810160405280929190818152602001828054801561101e57602002820191906000526020600020905b81548152602001906001019080831161100a575b50505050509050919050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156110615750600090506003611110565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156110b5573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811661110957600060019250925050611110565b9150600090505b94509492505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461113d57600080fd5b919050565b60006020828403121561115457600080fd5b610cda82611119565b60008083601f84011261116f57600080fd5b50813567ffffffffffffffff81111561118757600080fd5b602083019150836020828501011115610dc557600080fd5b6000806000806000606086880312156111b757600080fd5b6111c086611119565b9450602086013567ffffffffffffffff808211156111dd57600080fd5b6111e989838a0161115d565b9096509450604088013591508082111561120257600080fd5b5061120f8882890161115d565b969995985093965092949392505050565b6000806020838503121561123357600080fd5b823567ffffffffffffffff8082111561124b57600080fd5b818501915085601f83011261125f57600080fd5b81358181111561126e57600080fd5b8660208260051b850101111561128357600080fd5b60209290920196919550909350505050565b60005b838110156112b0578181015183820152602001611298565b50506000910152565b600081518084526112d1816020860160208601611295565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600060208083018184528085518083526040860191506005925060408160051b8701018488016000805b848110156113d6578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0018652825180518086529089019089860190808a1b87018b01855b828110156113c0577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08983030184526113ae8286516112b9565b948d0194938d01939150600101611374565b50988b019896505050928801925060010161132d565b50919998505050505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561143357835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101611401565b50909695505050505050565b602081526000610cda60208301846112b9565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561149357600080fd5b813567ffffffffffffffff808211156114ab57600080fd5b818401915084601f8301126114bf57600080fd5b8135818111156114d1576114d1611452565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561151757611517611452565b8160405282815287602084870101111561153057600080fd5b826020860160208301376000928101602001929092525095945050505050565b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008460601b168152818360148301376000910160140190815292915050565b600181811c908216806115a357607f821691505b6020821081036115dc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f82111561162e576000816000526020600020601f850160051c8101602086101561160b5750805b601f850160051c820191505b8181101561162a57828155600101611617565b5050505b505050565b67ffffffffffffffff83111561164b5761164b611452565b61165f83611659835461158f565b836115e2565b6000601f8411600181146116b1576000851561167b5750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b178355611747565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b8281101561170057868501358255602094850194600190920191016116e0565b508682101561173b577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60208152816020820152818360408301376000818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b828152600082516117e2816020850160208701611295565b919091016020019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea264697066735822122042d10f23fdebff296c9250d43035ac2046be136566e40b9550f948c9381ddf3f64736f6c63430008160033";
const isSuperArgs = (xs) => xs.length > 1;
export class ValidatorAnnounce__factory extends ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_mailbox, overrides) {
        return super.deploy(_mailbox, overrides || {});
    }
    getDeployTransaction(_mailbox, overrides) {
        return super.getDeployTransaction(_mailbox, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
//# sourceMappingURL=ValidatorAnnounce__factory.js.map