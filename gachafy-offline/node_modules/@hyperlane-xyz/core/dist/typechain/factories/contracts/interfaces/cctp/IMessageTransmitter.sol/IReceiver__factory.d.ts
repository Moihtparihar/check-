import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IReceiver, IReceiverInterface } from "../../../../../contracts/interfaces/cctp/IMessageTransmitter.sol/IReceiver.js";
export declare class IReceiver__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "message";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "signature";
            readonly type: "bytes";
        }];
        readonly name: "receiveMessage";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "success";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): IReceiverInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): IReceiver;
}
//# sourceMappingURL=IReceiver__factory.d.ts.map