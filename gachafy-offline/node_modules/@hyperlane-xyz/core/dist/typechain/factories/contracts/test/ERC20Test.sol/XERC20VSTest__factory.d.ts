import { Signer, ContractFactory, BigNumberish, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { XERC20VSTest, XERC20VSTestInterface } from "../../../../contracts/test/ERC20Test.sol/XERC20VSTest.js";
type XERC20VSTestConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class XERC20VSTest__factory extends ContractFactory {
    constructor(...args: XERC20VSTestConstructorParams);
    deploy(name: string, symbol: string, totalSupply: BigNumberish, __decimals: BigNumberish, overrides?: Overrides & {
        from?: string;
    }): Promise<XERC20VSTest>;
    getDeployTransaction(name: string, symbol: string, totalSupply: BigNumberish, __decimals: BigNumberish, overrides?: Overrides & {
        from?: string;
    }): TransactionRequest;
    attach(address: string): XERC20VSTest;
    connect(signer: Signer): XERC20VSTest__factory;
    static readonly bytecode = "0x60a06040523480156200001157600080fd5b506040516200202438038062002024833981016040819052620000349162000289565b8383838383836003620000488382620003a6565b506004620000578282620003a6565b50505060ff81166080526200006d3383620000a0565b505050506200008b620000856200016660201b60201c565b6200016a565b62000096336200016a565b505050506200049a565b6001600160a01b038216620000fb5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200010f919062000472565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001e957600080fd5b81516001600160401b0380821115620002065762000206620001c1565b604051601f8301601f19908116603f01168101908282118183101715620002315762000231620001c1565b81604052838152602092508660208588010111156200024f57600080fd5b600091505b8382101562000273578582018301518183018401529082019062000254565b6000602085830101528094505050505092915050565b60008060008060808587031215620002a057600080fd5b84516001600160401b0380821115620002b857600080fd5b620002c688838901620001d7565b95506020870151915080821115620002dd57600080fd5b50620002ec87828801620001d7565b93505060408501519150606085015160ff811681146200030b57600080fd5b939692955090935050565b600181811c908216806200032b57607f821691505b6020821081036200034c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001bc576000816000526020600020601f850160051c810160208610156200037d5750805b601f850160051c820191505b818110156200039e5782815560010162000389565b505050505050565b81516001600160401b03811115620003c257620003c2620001c1565b620003da81620003d3845462000316565b8462000352565b602080601f831160018114620004125760008415620003f95750858301515b600019600386901b1c1916600185901b1785556200039e565b600085815260208120601f198616915b82811015620004435788860151825594840194600190910190840162000422565b5085821015620004625787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200049457634e487b7160e01b600052601160045260246000fd5b92915050565b608051611b67620004bd6000396000818161035101526103880152611b676000f3fe608060405234801561001057600080fd5b50600436106102265760003560e01c8063715018a61161012a578063a0712d68116100bd578063bae2c8491161008c578063dd62ed3e11610071578063dd62ed3e146106b1578063f2fde38b146106f7578063f6b87b72146102cc57600080fd5b8063bae2c849146106a3578063c1eb7137146102cc57600080fd5b8063a0712d6814610657578063a457c2d71461066a578063a9059cbb1461067d578063b0595c5c1461069057600080fd5b80638da5cb5b116100f95780638da5cb5b1461063457806395d89b411461063c578063998955d3146106445780639dc29fac146104b657600080fd5b8063715018a6146104ae57806379cc6790146104b65780637a14c7d2146104c95780638129fc1c1461062c57600080fd5b806339509351116101bd5780635a69558d1161018c578063651fd26811610171578063651fd2681461043d57806366cc57021461045057806370a082311461047857600080fd5b80635a69558d146103e257806363dbf73b146103f557600080fd5b806339509351146103aa57806340c10f19146103bd5780634499eb15146103d0578063449a52f8146103bd57600080fd5b806318160ddd116101f957806318160ddd1461033457806323b872dd1461033c578063313ce5671461034f57806332424aa31461038357600080fd5b806304df017d1461022b57806306fdde031461028b578063095ea7b3146102a95780630c05f82c146102cc575b600080fd5b6102896102393660046117f2565b73ffffffffffffffffffffffffffffffffffffffff16600090815260066020526040812080547fffff00000000000000000000000000000000000000000000000000000000000016815560010155565b005b61029361070a565b6040516102a0919061180d565b60405180910390f35b6102bc6102b736600461187a565b61079c565b60405190151581526020016102a0565b6103266102da3660046117f2565b73ffffffffffffffffffffffffffffffffffffffff1660009081526006602052604090205470010000000000000000000000000000000090046dffffffffffffffffffffffffffff1690565b6040519081526020016102a0565b600254610326565b6102bc61034a3660046118a4565b6107b6565b7f00000000000000000000000000000000000000000000000000000000000000005b60405160ff90911681526020016102a0565b6103717f000000000000000000000000000000000000000000000000000000000000000081565b6102bc6103b836600461187a565b6107da565b6102896103cb36600461187a565b610826565b6102896103de36600461187a565b5050565b6102896103f0366004611900565b610830565b6103266104033660046117f2565b73ffffffffffffffffffffffffffffffffffffffff166000908152600660205260409020546fffffffffffffffffffffffffffffffff1690565b61032661044b3660046117f2565b610a57565b60005b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102a0565b6103266104863660046117f2565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b610289610a85565b6102896104c436600461187a565b610a99565b6105ba6104d73660046117f2565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091525073ffffffffffffffffffffffffffffffffffffffff16600090815260066020908152604091829020825160a08101845281546fffffffffffffffffffffffffffffffff811682526dffffffffffffffffffffffffffff70010000000000000000000000000000000090910481169382019390935260019091015463ffffffff811693820193909352640100000000830482166060820152720100000000000000000000000000000000000090920416608082015290565b6040516102a09190600060a0820190506fffffffffffffffffffffffffffffffff835116825260208301516dffffffffffffffffffffffffffff808216602085015263ffffffff6040860151166040850152806060860151166060850152806080860151166080850152505092915050565b610289610aa3565b610453610aac565b610293610ad2565b6103266106523660046117f2565b610ae1565b6102896106653660046119a8565b610b63565b6102bc61067836600461187a565b610b70565b6102bc61068b36600461187a565b610c46565b61028961069e36600461187a565b610c54565b6102896103de3660046119c1565b6103266106bf3660046119f4565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6102896107053660046117f2565b610c5c565b60606003805461071990611a1e565b80601f016020809104026020016040519081016040528092919081815260200182805461074590611a1e565b80156107925780601f1061076757610100808354040283529160200191610792565b820191906000526020600020905b81548152906001019060200180831161077557829003601f168201915b5050505050905090565b6000336107aa818585610d10565b60019150505b92915050565b6000336107c4858285610ec4565b6107cf858585610f9b565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906107aa9082908690610821908790611aa0565b610d10565b6103de828261120a565b6108386112fd565b6040518060a0016040528082602001516fffffffffffffffffffffffffffffffff16815260200182600001516dffffffffffffffffffffffffffff1681526020014263ffffffff168152602001600283600001516108969190611ab3565b6dffffffffffffffffffffffffffff168152602001600283600001516108bc9190611ab3565b6dffffffffffffffffffffffffffff9081169091526040808401805173ffffffffffffffffffffffffffffffffffffffff9081166000908152600660209081529084902086518154888401518816700100000000000000000000000000000000027fffff0000000000000000000000000000000000000000000000000000000000009091166fffffffffffffffffffffffffffffffff9092169190911717815586850151600190910180546060890151608090990151881672010000000000000000000000000000000000000271ffffffffffffffffffffffffffffffffffff99909816640100000000027fffffffffffffffffffffffffffff00000000000000000000000000000000000090911663ffffffff909316929092179190911796909616949094179094555184519285015191519316927fb4ff6a860e04455b1ce16833b74cde19765c95e55c5e7e4f5a69e9707d8cc96d92610a4c9290916dffffffffffffffffffffffffffff9290921682526fffffffffffffffffffffffffffffffff16602082015260400190565b60405180910390a250565b73ffffffffffffffffffffffffffffffffffffffff811660009081526006602052604081206107b090611383565b610a8d6112fd565b610a97600061157e565b565b6103de82826115f5565b610a973361157e565b6000610acd60055473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b60606004805461071990611a1e565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600660205260408120610b0f90611383565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600660205260409020546107b0919070010000000000000000000000000000000090046dffffffffffffffffffffffffffff16611b07565b610b6d338261120a565b50565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919083811015610c39576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6107cf8286868403610d10565b6000336107aa818585610f9b565b6108266112fd565b610c646112fd565b73ffffffffffffffffffffffffffffffffffffffff8116610d07576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610c30565b610b6d8161157e565b73ffffffffffffffffffffffffffffffffffffffff8316610db2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610c30565b73ffffffffffffffffffffffffffffffffffffffff8216610e55576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610c30565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610f955781811015610f88576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610c30565b610f958484848403610d10565b50505050565b73ffffffffffffffffffffffffffffffffffffffff831661103e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610c30565b73ffffffffffffffffffffffffffffffffffffffff82166110e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610c30565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015611197576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610c30565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610f95565b73ffffffffffffffffffffffffffffffffffffffff8216611287576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610c30565b80600260008282546112999190611aa0565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b33611306610aac565b73ffffffffffffffffffffffffffffffffffffffff1614610a97576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610c30565b6001810154815460009163ffffffff9081164203169082906113b89083906fffffffffffffffffffffffffffffffff16611b1a565b60018501549091506dffffffffffffffffffffffffffff72010000000000000000000000000000000000008204811664010000000090920416101561145b5760018401546114539061142390839064010000000090046dffffffffffffffffffffffffffff16611aa0565b6001860154720100000000000000000000000000000000000090046dffffffffffffffffffffffffffff166117b1565b949350505050565b60018401546dffffffffffffffffffffffffffff72010000000000000000000000000000000000008204811664010000000090920416111561155c57600184015464010000000090046dffffffffffffffffffffffffffff168111806114ff575060018401546dffffffffffffffffffffffffffff720100000000000000000000000000000000000082048116916114fd918491640100000000900416611b07565b105b156115345750505060010154720100000000000000000000000000000000000090046dffffffffffffffffffffffffffff1690565b600184015461145390829064010000000090046dffffffffffffffffffffffffffff16611b07565b5050506001015464010000000090046dffffffffffffffffffffffffffff1690565b6005805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b73ffffffffffffffffffffffffffffffffffffffff8216611698576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610c30565b73ffffffffffffffffffffffffffffffffffffffff82166000908152602081905260409020548181101561174e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610c30565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610eb7565b60008183106117c057816117c2565b825b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146117ed57600080fd5b919050565b60006020828403121561180457600080fd5b6117c2826117c9565b60006020808352835180602085015260005b8181101561183b5785810183015185820160400152820161181f565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b6000806040838503121561188d57600080fd5b611896836117c9565b946020939093013593505050565b6000806000606084860312156118b957600080fd5b6118c2846117c9565b92506118d0602085016117c9565b9150604084013590509250925092565b80356fffffffffffffffffffffffffffffffff811681146117ed57600080fd5b60006060828403121561191257600080fd5b6040516060810181811067ffffffffffffffff8211171561195c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405282356dffffffffffffffffffffffffffff8116811461197d57600080fd5b815261198b602084016118e0565b602082015261199c604084016117c9565b60408201529392505050565b6000602082840312156119ba57600080fd5b5035919050565b600080604083850312156119d457600080fd5b6119dd836117c9565b91506119eb602084016118e0565b90509250929050565b60008060408385031215611a0757600080fd5b611a10836117c9565b91506119eb602084016117c9565b600181811c90821680611a3257607f821691505b602082108103611a6b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156107b0576107b0611a71565b60006dffffffffffffffffffffffffffff80841680611afb577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b92169190910492915050565b818103818111156107b0576107b0611a71565b80820281158282048414176107b0576107b0611a7156fea2646970667358221220f15e514a4c56a35dddeef955bdaff4ac391719398615abc78c0ec22cb4f56d0a64736f6c63430008160033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "name";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "symbol";
            readonly type: "string";
        }, {
            readonly internalType: "uint256";
            readonly name: "totalSupply";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint8";
            readonly name: "__decimals";
            readonly type: "uint8";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "_bridge";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "_bufferCap";
            readonly type: "uint256";
        }];
        readonly name: "BridgeLimitsSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "bridge";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint112";
            readonly name: "bufferCap";
            readonly type: "uint112";
        }, {
            readonly indexed: false;
            readonly internalType: "uint128";
            readonly name: "rateLimitPerSecond";
            readonly type: "uint128";
        }];
        readonly name: "ConfigurationChanged";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "_decimals";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint112";
                readonly name: "bufferCap";
                readonly type: "uint112";
            }, {
                readonly internalType: "uint128";
                readonly name: "rateLimitPerSecond";
                readonly type: "uint128";
            }, {
                readonly internalType: "address";
                readonly name: "bridge";
                readonly type: "address";
            }];
            readonly internalType: "struct IXERC20VS.RateLimitMidPointInfo";
            readonly name: "rateLimit";
            readonly type: "tuple";
        }];
        readonly name: "addBridge";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }];
        readonly name: "allowance";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }];
        readonly name: "bufferCap";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "burn";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "burnFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_bridge";
            readonly type: "address";
        }];
        readonly name: "burningCurrentLimitOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_bridge";
            readonly type: "address";
        }];
        readonly name: "burningMaxLimitOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "decimals";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "subtractedValue";
            readonly type: "uint256";
        }];
        readonly name: "decreaseAllowance";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "addedValue";
            readonly type: "uint256";
        }];
        readonly name: "increaseAllowance";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "initialize";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "lockbox";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "mint";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "mint";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "mintOnlyOwner";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "mintTo";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_bridge";
            readonly type: "address";
        }];
        readonly name: "mintingCurrentLimitOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_bridge";
            readonly type: "address";
        }];
        readonly name: "mintingMaxLimitOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }];
        readonly name: "rateLimitPerSecond";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_bridge";
            readonly type: "address";
        }];
        readonly name: "rateLimits";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint128";
                readonly name: "rateLimitPerSecond";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint112";
                readonly name: "bufferCap";
                readonly type: "uint112";
            }, {
                readonly internalType: "uint32";
                readonly name: "lastBufferUsedTime";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint112";
                readonly name: "bufferStored";
                readonly type: "uint112";
            }, {
                readonly internalType: "uint112";
                readonly name: "midPoint";
                readonly type: "uint112";
            }];
            readonly internalType: "struct RateLimitMidPoint";
            readonly name: "_rateLimit";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_bridge";
            readonly type: "address";
        }];
        readonly name: "removeBridge";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_bridge";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_newBufferCap";
            readonly type: "uint256";
        }];
        readonly name: "setBufferCap";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_bridge";
            readonly type: "address";
        }, {
            readonly internalType: "uint128";
            readonly name: "_newRateLimitPerSecond";
            readonly type: "uint128";
        }];
        readonly name: "setRateLimitPerSecond";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "totalSupply";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "transfer";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): XERC20VSTestInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): XERC20VSTest;
}
export {};
//# sourceMappingURL=XERC20VSTest__factory.d.ts.map