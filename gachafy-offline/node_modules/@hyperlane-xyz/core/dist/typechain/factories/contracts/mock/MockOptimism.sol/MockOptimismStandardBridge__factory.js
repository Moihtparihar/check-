/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "localToken",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "remoteToken",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
            },
        ],
        name: "ERC20BridgeFinalized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "localToken",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "remoteToken",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
            },
        ],
        name: "ERC20BridgeInitiated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
            },
        ],
        name: "ETHBridgeFinalized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
            },
        ],
        name: "ETHBridgeInitiated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        inputs: [],
        name: "MESSENGER",
        outputs: [
            {
                internalType: "contract ICrossDomainMessenger",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "OTHER_BRIDGE",
        outputs: [
            {
                internalType: "contract IStandardBridge",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "__constructor__",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_localToken",
                type: "address",
            },
            {
                internalType: "address",
                name: "_remoteToken",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
            {
                internalType: "uint32",
                name: "_minGasLimit",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "_extraData",
                type: "bytes",
            },
        ],
        name: "bridgeERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_localToken",
                type: "address",
            },
            {
                internalType: "address",
                name: "_remoteToken",
                type: "address",
            },
            {
                internalType: "address",
                name: "_to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
            {
                internalType: "uint32",
                name: "_minGasLimit",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "_extraData",
                type: "bytes",
            },
        ],
        name: "bridgeERC20To",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "_minGasLimit",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "_extraData",
                type: "bytes",
            },
        ],
        name: "bridgeETH",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_to",
                type: "address",
            },
            {
                internalType: "uint32",
                name: "_minGasLimit",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "_extraData",
                type: "bytes",
            },
        ],
        name: "bridgeETHTo",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "deposits",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_localToken",
                type: "address",
            },
            {
                internalType: "address",
                name: "_remoteToken",
                type: "address",
            },
            {
                internalType: "address",
                name: "_from",
                type: "address",
            },
            {
                internalType: "address",
                name: "_to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "_extraData",
                type: "bytes",
            },
        ],
        name: "finalizeBridgeERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_from",
                type: "address",
            },
            {
                internalType: "address",
                name: "_to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "_extraData",
                type: "bytes",
            },
        ],
        name: "finalizeBridgeETH",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [],
        name: "messenger",
        outputs: [
            {
                internalType: "contract ICrossDomainMessenger",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "otherBridge",
        outputs: [
            {
                internalType: "contract IStandardBridge",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "paused",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        stateMutability: "payable",
        type: "receive",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610675806100206000396000f3fe6080604052600436106100d65760003560e01c80635c975abb1161007f5780638f601f66116100595780638f601f6614610206578063927ede2d14610237578063c89701a2146101bd578063e11013dd1461025e57600080fd5b80635c975abb146101a15780637f46ddb2146101bd57806387087623146101e457600080fd5b80631c0082a3116100b05780631c0082a31461012d5780633cb747bf14610139578063540abf731461018657600080fd5b80630166a07a146100e257806309fc8843146101075780631635f5fd1461011957600080fd5b366100dd57005b600080fd5b3480156100ee57600080fd5b506101056100fd366004610374565b505050505050565b005b610105610115366004610410565b5050565b61010561012736600461045e565b50505050565b34801561010557600080fd5b34801561014557600080fd5b507342000000000000000000000000000000000000075b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561019257600080fd5b506101056100fd3660046104c6565b3480156101ad57600080fd5b506040516000815260200161017d565b3480156101c957600080fd5b5073fbb0621e0b23b5478b630bd55a5f21f67730b0f161015c565b3480156101f057600080fd5b506101056101ff366004610535565b5050505050565b34801561021257600080fd5b506102296102213660046105ae565b600092915050565b60405190815260200161017d565b34801561024357600080fd5b5073420000000000000000000000000000000000000761015c565b61010561026c3660046105e1565b505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461029557600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126102da57600080fd5b813567ffffffffffffffff808211156102f5576102f561029a565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561033b5761033b61029a565b8160405283815286602085880101111561035457600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060c0878903121561038d57600080fd5b61039687610271565b95506103a460208801610271565b94506103b260408801610271565b93506103c060608801610271565b92506080870135915060a087013567ffffffffffffffff8111156103e357600080fd5b6103ef89828a016102c9565b9150509295509295509295565b803563ffffffff8116811461029557600080fd5b6000806040838503121561042357600080fd5b61042c836103fc565b9150602083013567ffffffffffffffff81111561044857600080fd5b610454858286016102c9565b9150509250929050565b6000806000806080858703121561047457600080fd5b61047d85610271565b935061048b60208601610271565b925060408501359150606085013567ffffffffffffffff8111156104ae57600080fd5b6104ba878288016102c9565b91505092959194509250565b60008060008060008060c087890312156104df57600080fd5b6104e887610271565b95506104f660208801610271565b945061050460408801610271565b935060608701359250610519608088016103fc565b915060a087013567ffffffffffffffff8111156103e357600080fd5b600080600080600060a0868803121561054d57600080fd5b61055686610271565b945061056460208701610271565b935060408601359250610579606087016103fc565b9150608086013567ffffffffffffffff81111561059557600080fd5b6105a1888289016102c9565b9150509295509295909350565b600080604083850312156105c157600080fd5b6105ca83610271565b91506105d860208401610271565b90509250929050565b6000806000606084860312156105f657600080fd5b6105ff84610271565b925061060d602085016103fc565b9150604084013567ffffffffffffffff81111561062957600080fd5b610635868287016102c9565b915050925092509256fea2646970667358221220a6e8a88ffe8fc14ef82fd31607454039b6fb616ef6000d2205dcd60c99fad2ae64736f6c63430008160033";
const isSuperArgs = (xs) => xs.length > 1;
export class MockOptimismStandardBridge__factory extends ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
//# sourceMappingURL=MockOptimismStandardBridge__factory.js.map