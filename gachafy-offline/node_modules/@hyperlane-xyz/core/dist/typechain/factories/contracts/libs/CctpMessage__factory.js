/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "addr",
                type: "address",
            },
        ],
        name: "addressToBytes32",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_buf",
                type: "bytes32",
            },
        ],
        name: "bytes32ToAddress",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x61013461003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610603d5760003560e01c80635ced058e14604257806382c947b714607a575b600080fd5b6050604d36600460ab565b90565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b609e608536600460c3565b73ffffffffffffffffffffffffffffffffffffffff1690565b6040519081526020016071565b60006020828403121560bc57600080fd5b5035919050565b60006020828403121560d457600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811460f757600080fd5b939250505056fea2646970667358221220de88d98cdd3c336c93de3f302ab4be71238371c3ff14b2bac00b9e02d81b20ac64736f6c63430008160033";
const isSuperArgs = (xs) => xs.length > 1;
export class CctpMessage__factory extends ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
//# sourceMappingURL=CctpMessage__factory.js.map