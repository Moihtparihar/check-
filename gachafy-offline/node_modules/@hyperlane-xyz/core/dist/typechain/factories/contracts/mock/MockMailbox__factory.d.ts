import { Signer, ContractFactory, BigNumberish, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockMailbox, MockMailboxInterface } from "../../../contracts/mock/MockMailbox.js";
type MockMailboxConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class MockMailbox__factory extends ContractFactory {
    constructor(...args: MockMailboxConstructorParams);
    deploy(_domain: BigNumberish, overrides?: Overrides & {
        from?: string;
    }): Promise<MockMailbox>;
    getDeployTransaction(_domain: BigNumberish, overrides?: Overrides & {
        from?: string;
    }): TransactionRequest;
    attach(address: string): MockMailbox;
    connect(signer: Signer): MockMailbox__factory;
    static readonly bytecode = "0x60c0604052606b80546001600160401b03191690553480156200002157600080fd5b506040516200372238038062003722833981016040819052620000449162000248565b4360805263ffffffff811660a05260405160009062000063906200022c565b604051809103906000f08015801562000080573d6000803e3d6000fd5b50606780546001600160a01b0319166001600160a01b038316179055604051909150600090620000b0906200023a565b604051809103906000f080158015620000cd573d6000803e3d6000fd5b50606880546001600160a01b0383166001600160a01b031991821681179092556069805490911690911790559050620001063362000119565b620001106200016b565b50505062000277565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1615620001d85760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146200022a576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b61022580620030a583390190565b61045880620032ca83390190565b6000602082840312156200025b57600080fd5b815163ffffffff811681146200027057600080fd5b9392505050565b60805160a051612dfa620002ab600039600081816105a401528181610ee70152611b76015260006105700152612dfa6000f3fe60806040526004361061026a5760003560e01c80638d3638f411610153578063d12164e4116100cb578063f794687a1161007f578063f8c8765e11610064578063f8c8765e1461084b578063fa31de011461086b578063ffa1ad741461087e57600080fd5b8063f794687a1461080b578063f7ccd3211461082b57600080fd5b8063e495f1d4116100b0578063e495f1d41461076c578063e70f48ac146107cb578063f2fde38b146107eb57600080fd5b8063d12164e41461071a578063d6d08a091461073f57600080fd5b806399b0480911610122578063a3b4919f11610107578063a3b4919f1461069a578063affed0e0146106dd578063bf031eae146106fa57600080fd5b806399b048091461065a5780639c42bd181461067a57600080fd5b80638d3638f4146105925780638da5cb5b146105c657806392d28b3d146105f157806393c448471461061157600080fd5b806359b3f6e0116101e65780637a5f1d4a116101b557806381d2ea951161019a57806381d2ea951461050c5780638209d3121461052c57806382ea7bfe1461055e57600080fd5b80637a5f1d4a146104cc5780637c39d130146104f957600080fd5b806359b3f6e0146103d15780635d1fe5a9146104475780636e5f516e1461048a578063715018a6146104b757600080fd5b80631426b7f41161023d5780633288990c116102225780633288990c1461034c5780633d1250b71461036c57806348aee8d4146103be57600080fd5b80631426b7f4146103245780631605c3061461034457600080fd5b806307a2fda11461026f5780630a2ee402146102d857806310b83dc0146102ed578063134fbb4f1461030e575b600080fd5b34801561027b57600080fd5b506102bc61028a366004612253565b6000908152606a602052604090205474010000000000000000000000000000000000000000900465ffffffffffff1690565b60405165ffffffffffff90911681526020015b60405180910390f35b6102eb6102e6366004612285565b6108a5565b005b6103006102fb366004612304565b610a63565b6040519081526020016102cf565b34801561031a57600080fd5b5061030060665481565b34801561033057600080fd5b506102eb61033f3660046123a2565b610bb3565b6102eb610cce565b34801561035857600080fd5b506102eb6103673660046123bf565b610d27565b34801561037857600080fd5b506068546103999073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102cf565b6103006103cc366004612401565b610d83565b3480156103dd57600080fd5b506102eb6103ec36600461248b565b63ffffffff919091166000908152606c6020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b34801561045357600080fd5b50610399610462366004612253565b6000908152606a602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b34801561049657600080fd5b506067546103999073ffffffffffffffffffffffffffffffffffffffff1681565b3480156104c357600080fd5b506102eb610dc1565b3480156104d857600080fd5b506104ec6104e7366004612253565b610dd5565b6040516102cf9190612530565b6102eb610507366004612543565b610e6f565b34801561051857600080fd5b50610300610527366004612304565b611311565b34801561053857600080fd5b50606b546105499063ffffffff1681565b60405163ffffffff90911681526020016102cf565b34801561056a57600080fd5b506103007f000000000000000000000000000000000000000000000000000000000000000081565b34801561059e57600080fd5b506105497f000000000000000000000000000000000000000000000000000000000000000081565b3480156105d257600080fd5b5060335473ffffffffffffffffffffffffffffffffffffffff16610399565b3480156105fd57600080fd5b506104ec61060c366004612253565b6114a4565b34801561061d57600080fd5b506104ec6040518060400160405280600581526020017f392e302e3900000000000000000000000000000000000000000000000000000081525081565b34801561066657600080fd5b506102eb6106753660046123a2565b6114bd565b34801561068657600080fd5b506103006106953660046125af565b6115d8565b3480156106a657600080fd5b506103996106b5366004612285565b606c6020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b3480156106e957600080fd5b506065546105499063ffffffff1681565b34801561070657600080fd5b506102eb61071536600461262c565b611614565b34801561072657600080fd5b50606b5461054990640100000000900463ffffffff1681565b34801561074b57600080fd5b506069546103999073ffffffffffffffffffffffffffffffffffffffff1681565b34801561077857600080fd5b506107bb610787366004612253565b6000908152606a602052604090205474010000000000000000000000000000000000000000900465ffffffffffff16151590565b60405190151581526020016102cf565b3480156107d757600080fd5b506103996107e63660046123a2565b611638565b3480156107f757600080fd5b506102eb6108063660046123a2565b61176f565b34801561081757600080fd5b506102eb6108263660046123a2565b611826565b34801561083757600080fd5b50610300610846366004612401565b611941565b34801561085757600080fd5b506102eb61086636600461270c565b611974565b6103006108793660046125af565b611b2e565b34801561088a57600080fd5b50610893600381565b60405160ff90911681526020016102cf565b63ffffffff81166000908152606d6020526040812080546108c590612768565b80601f01602080910402602001604051908101604052809291908181526020018280546108f190612768565b801561093e5780601f106109135761010080835404028352916020019161093e565b820191906000526020600020905b81548152906001019060200180831161092157829003601f168201915b505050505090506000606e60008463ffffffff168152602001908152602001600020805461096b90612768565b80601f016020809104026020016040519081016040528092919081815260200182805461099790612768565b80156109e45780601f106109b9576101008083540402835291602001916109e4565b820191906000526020600020905b8154815290600101906020018083116109c757829003601f168201915b50506040517f7c39d1300000000000000000000000000000000000000000000000000000000081529394503093637c39d1309350349250610a2c9150859087906004016127bb565b6000604051808303818588803b158015610a4557600080fd5b505af1158015610a59573d6000803e3d6000fd5b5050505050505050565b600080610a7289898989611b61565b90506000610a858a8a8a8a8a8a8a611b9f565b63ffffffff8b166000908152606c602052604090205490915073ffffffffffffffffffffffffffffffffffffffff1680610b20576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4d697373696e672072656d6f7465206d61696c626f780000000000000000000060448201526064015b60405180910390fd5b6040517f3288990c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821690633288990c90610b72908690600401612530565b600060405180830381600087803b158015610b8c57600080fd5b505af1158015610ba0573d6000803e3d6000fd5b50939d9c50505050505050505050505050565b610bbb611e73565b73ffffffffffffffffffffffffffffffffffffffff81163b610c5f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4d61696c626f783a20726571756972656420686f6f6b206e6f7420636f6e747260448201527f61637400000000000000000000000000000000000000000000000000000000006064820152608401610b17565b606980547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f329ec8e2438a73828ecf31a6568d7a91d7b1d79e342b0692914fd053d1a002b190600090a250565b606b54610ce890640100000000900463ffffffff166108a5565b606b8054640100000000900463ffffffff16906004610d068361280f565b91906101000a81548163ffffffff021916908363ffffffff16021790555050565b606b5463ffffffff166000908152606d60205260409020610d49828483612882565b50606b805463ffffffff16906000610d608361280f565b91906101000a81548163ffffffff021916908363ffffffff160217905550505050565b6000610db6878787878787606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610a63565b979650505050505050565b610dc9611e73565b610dd36000611ef4565b565b606e6020526000908152604090208054610dee90612768565b80601f0160208091040260200160405190810160405280929190818152602001828054610e1a90612768565b8015610e675780601f10610e3c57610100808354040283529160200191610e67565b820191906000526020600020905b815481529060010190602001808311610e4a57829003601f168201915b505050505081565b6003610e7b8383611f6b565b60ff1614610ee5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4d61696c626f783a206261642076657273696f6e0000000000000000000000006044820152606401610b17565b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff16610f168383611f8f565b63ffffffff1614610f83576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4d61696c626f783a20756e65787065637465642064657374696e6174696f6e006044820152606401610b17565b6000610fc483838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611fb292505050565b6000818152606a602052604090205490915074010000000000000000000000000000000000000000900465ffffffffffff161561105d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4d61696c626f783a20616c72656164792064656c6976657265640000000000006044820152606401610b17565b60006110698484611fbd565b9050600061107682611638565b60408051808201825233815265ffffffffffff43811660208084019182526000898152606a9091529390932091518254935190911674010000000000000000000000000000000000000000027fffffffffffff000000000000000000000000000000000000000000000000000090931673ffffffffffffffffffffffffffffffffffffffff9182161792909217905590915082166111148686611fd8565b61111e8787611ff1565b63ffffffff167f0d381c2a574ae8f04e213db7cfb4df8df712cdbd427d9868ffef380660ca657460405160405180910390a460405183907f1cae38cdd3d3919489272725a5ae62a4f48b2989b0dae843d3c279fee18073a990600090a26040517ff7e83aee00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82169063f7e83aee906111d3908a908a908a908a906004016129e5565b6020604051808303816000875af11580156111f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112169190612a0c565b61127c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4d61696c626f783a2049534d20766572696669636174696f6e206661696c65646044820152606401610b17565b8173ffffffffffffffffffffffffffffffffffffffff166356d5d475346112a38888611ff1565b6112ad8989611fd8565b6112b78a8a612001565b6040518663ffffffff1660e01b81526004016112d69493929190612a2e565b6000604051808303818588803b1580156112ef57600080fd5b505af1158015611303573d6000803e3d6000fd5b505050505050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff821661134a5760685473ffffffffffffffffffffffffffffffffffffffff1691505b600061135889898989611b61565b6040517faaccd23000000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff84169063aaccd230906113b190889088908690600401612a5e565b602060405180830381865afa1580156113ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f29190612a84565b6069546040517faaccd23000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063aaccd2309061144c90899089908790600401612a5e565b602060405180830381865afa158015611469573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148d9190612a84565b6114979190612a9d565b9998505050505050505050565b606d6020526000908152604090208054610dee90612768565b6114c5611e73565b73ffffffffffffffffffffffffffffffffffffffff81163b611569576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4d61696c626f783a2064656661756c7420686f6f6b206e6f7420636f6e74726160448201527f63740000000000000000000000000000000000000000000000000000000000006064820152608401610b17565b606880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f65a63e5066ee2fcdf9d32a7f1bf7ce71c76066f19d0609dddccd334ab87237d790600090a250565b600061160b858585856115ed86808385612ab0565b60685473ffffffffffffffffffffffffffffffffffffffff16611311565b95945050505050565b63ffffffff82166000908152606e602052604090206116338282612ada565b505050565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fde523cf30000000000000000000000000000000000000000000000000000000017905290516000918291829173ffffffffffffffffffffffffffffffffffffffff8616916116b99190612bf4565b600060405180830381855afa9150503d80600081146116f4576040519150601f19603f3d011682016040523d82523d6000602084013e6116f9565b606091505b509150915081801561170b5750805115155b1561174e576000818060200190518101906117269190612c10565b905073ffffffffffffffffffffffffffffffffffffffff81161561174c57949350505050565b505b505060675473ffffffffffffffffffffffffffffffffffffffff1692915050565b611777611e73565b73ffffffffffffffffffffffffffffffffffffffff811661181a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610b17565b61182381611ef4565b50565b61182e611e73565b73ffffffffffffffffffffffffffffffffffffffff81163b6118d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4d61696c626f783a2064656661756c742049534d206e6f7420636f6e7472616360448201527f74000000000000000000000000000000000000000000000000000000000000006064820152608401610b17565b606780547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517fa76ad0adbf45318f8633aa0210f711273d50fbb6fef76ed95bbae97082c75daa90600090a250565b6000610db6878787878787606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611311565b600054610100900460ff16158080156119945750600054600160ff909116105b806119ae5750303b1580156119ae575060005460ff166001145b611a3a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610b17565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015611a9857600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b611aa061201d565b611aa984611826565b611ab2836114bd565b611abb82610bb3565b611ac48561176f565b8015611b2757600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b600061160b85858585611b4386808385612ab0565b60685473ffffffffffffffffffffffffffffffffffffffff16610a63565b60655460609061160b9060039063ffffffff167f000000000000000000000000000000000000000000000000000000000000000033898989896120bc565b600073ffffffffffffffffffffffffffffffffffffffff8216611bd85760685473ffffffffffffffffffffffffffffffffffffffff1691505b6000611be689898989611b61565b80516020820120606681905560658054929350909160019190600090611c1390849063ffffffff16612c2d565b92506101000a81548163ffffffff021916908363ffffffff160217905550888a63ffffffff163373ffffffffffffffffffffffffffffffffffffffff167f769f711d20c679153d382254f59892613b58a97cc876b249134ac25c80f9c81485604051611c7f9190612530565b60405180910390a460405181907f788dbc1b7152732178210e7f4d9d010ef016f9eafbe66786bd7169f56e0c353a90600090a26069546040517faaccd23000000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff169063aaccd23090611d0d908a908a908890600401612a5e565b602060405180830381865afa158015611d2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d4e9190612a84565b905080341015611d5b5750345b6069546040517f086011b900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063086011b9908390611db7908b908b908990600401612a5e565b6000604051808303818588803b158015611dd057600080fd5b505af1158015611de4573d6000803e3d6000fd5b50505050508473ffffffffffffffffffffffffffffffffffffffff1663086011b98234611e119190612c51565b8989876040518563ffffffff1660e01b8152600401611e3293929190612a5e565b6000604051808303818588803b158015611e4b57600080fd5b505af1158015611e5f573d6000803e3d6000fd5b50949e9d5050505050505050505050505050565b60335473ffffffffffffffffffffffffffffffffffffffff163314610dd3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b17565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000611f7a6001828486612ab0565b611f8391612c64565b60f81c90505b92915050565b6000611f9f602d60298486612ab0565b611fa891612cac565b60e01c9392505050565b805160209091012090565b6000611fd1611fcc84846120fa565b61210a565b9392505050565b6000611fe8602960098486612ab0565b611fd191612cf2565b6000611f9f600960058486612ab0565b36600061201183604d8187612ab0565b915091505b9250929050565b600054610100900460ff166120b4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610b17565b610dd36121b3565b606088888888888888886040516020016120dd989796959493929190612d2e565b604051602081830303815290604052905098975050505050505050565b6000611fe8604d602d8486612ab0565b600073ffffffffffffffffffffffffffffffffffffffff8211156121af576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f5479706543617374733a2062797465733332546f41646472657373206f76657260448201527f666c6f77000000000000000000000000000000000000000000000000000000006064820152608401610b17565b5090565b600054610100900460ff1661224a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610b17565b610dd333611ef4565b60006020828403121561226557600080fd5b5035919050565b803563ffffffff8116811461228057600080fd5b919050565b60006020828403121561229757600080fd5b611fd18261226c565b60008083601f8401126122b257600080fd5b50813567ffffffffffffffff8111156122ca57600080fd5b60208301915083602082850101111561201657600080fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461182357600080fd5b600080600080600080600060a0888a03121561231f57600080fd5b6123288861226c565b965060208801359550604088013567ffffffffffffffff8082111561234c57600080fd5b6123588b838c016122a0565b909750955060608a013591508082111561237157600080fd5b5061237e8a828b016122a0565b9094509250506080880135612392816122e2565b8091505092959891949750929550565b6000602082840312156123b457600080fd5b8135611fd1816122e2565b600080602083850312156123d257600080fd5b823567ffffffffffffffff8111156123e957600080fd5b6123f5858286016122a0565b90969095509350505050565b6000806000806000806080878903121561241a57600080fd5b6124238761226c565b955060208701359450604087013567ffffffffffffffff8082111561244757600080fd5b6124538a838b016122a0565b9096509450606089013591508082111561246c57600080fd5b5061247989828a016122a0565b979a9699509497509295939492505050565b6000806040838503121561249e57600080fd5b6124a78361226c565b915060208301356124b7816122e2565b809150509250929050565b60005b838110156124dd5781810151838201526020016124c5565b50506000910152565b600081518084526124fe8160208601602086016124c2565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000611fd160208301846124e6565b6000806000806040858703121561255957600080fd5b843567ffffffffffffffff8082111561257157600080fd5b61257d888389016122a0565b9096509450602087013591508082111561259657600080fd5b506125a3878288016122a0565b95989497509550505050565b600080600080606085870312156125c557600080fd5b6125ce8561226c565b935060208501359250604085013567ffffffffffffffff8111156125f157600080fd5b6125a3878288016122a0565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806040838503121561263f57600080fd5b6126488361226c565b9150602083013567ffffffffffffffff8082111561266557600080fd5b818501915085601f83011261267957600080fd5b81358181111561268b5761268b6125fd565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156126d1576126d16125fd565b816040528281528860208487010111156126ea57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000806000806080858703121561272257600080fd5b843561272d816122e2565b9350602085013561273d816122e2565b9250604085013561274d816122e2565b9150606085013561275d816122e2565b939692955090935050565b600181811c9082168061277c57607f821691505b6020821081036127b5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6040815260006127ce60408301856124e6565b828103602084015261160b81856124e6565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600063ffffffff808316818103612828576128286127e0565b6001019392505050565b601f821115611633576000816000526020600020601f850160051c8101602086101561285b5750805b601f850160051c820191505b8181101561287a57828155600101612867565b505050505050565b67ffffffffffffffff83111561289a5761289a6125fd565b6128ae836128a88354612768565b83612832565b6000601f84116001811461290057600085156128ca5750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b178355611b27565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b8281101561294f578685013582556020948501946001909201910161292f565b508682101561298a577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555050505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b6040815260006129f960408301868861299c565b8281036020840152610db681858761299c565b600060208284031215612a1e57600080fd5b81518015158114611fd157600080fd5b63ffffffff85168152836020820152606060408201526000612a5460608301848661299c565b9695505050505050565b604081526000612a7260408301858761299c565b8281036020840152612a5481856124e6565b600060208284031215612a9657600080fd5b5051919050565b80820180821115611f8957611f896127e0565b60008085851115612ac057600080fd5b83861115612acd57600080fd5b5050820193919092039150565b815167ffffffffffffffff811115612af457612af46125fd565b612b0881612b028454612768565b84612832565b602080601f831160018114612b5b5760008415612b255750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b17855561287a565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015612ba857888601518255948401946001909101908401612b89565b5085821015612be457878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b60008251612c068184602087016124c2565b9190910192915050565b600060208284031215612c2257600080fd5b8151611fd1816122e2565b63ffffffff818116838216019080821115612c4a57612c4a6127e0565b5092915050565b81810381811115611f8957611f896127e0565b7fff000000000000000000000000000000000000000000000000000000000000008135818116916001851015612ca45780818660010360031b1b83161692505b505092915050565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015612ca45760049490940360031b84901b1690921692915050565b80356020831015611f89577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b7fff000000000000000000000000000000000000000000000000000000000000008960f81b16815260007fffffffff00000000000000000000000000000000000000000000000000000000808a60e01b166001840152808960e01b166005840152876009840152808760e01b1660298401525084602d8301528284604d8401375060009101604d0190815297965050505050505056fea26469706673582212209b4caa2728acfe3010e25ff9895ecd8376f43c5539bcd73e9e41651a52e5a21664736f6c6343000816003360806040526000805461ffff191661010617905534801561001f57600080fd5b506101f68061002f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80636465e69f14610046578063951a291f1461006a578063f7e83aee146100b1575b600080fd5b6000546100539060ff1681565b60405160ff90911681526020015b60405180910390f35b6100af6100783660046100e2565b60008054911515610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909216919091179055565b005b6100d26100bf366004610154565b5050600054610100900460ff1692915050565b6040519015158152602001610061565b6000602082840312156100f457600080fd5b8135801515811461010457600080fd5b9392505050565b60008083601f84011261011d57600080fd5b50813567ffffffffffffffff81111561013557600080fd5b60208301915083602082850101111561014d57600080fd5b9250929050565b6000806000806040858703121561016a57600080fd5b843567ffffffffffffffff8082111561018257600080fd5b61018e8883890161010b565b909650945060208701359150808211156101a757600080fd5b506101b48782880161010b565b9598949750955050505056fea2646970667358221220819733c099e51c47f2ab1bfb0a8c25fc5546b5d715de6aee84959e82cdf9b48164736f6c6343000816003360806040526000805534801561001457600080fd5b50610434806100246000396000f3fe60806040526004361061007b5760003560e01c8063ddca3f431161004e578063ddca3f4314610148578063e445e7dd1461015e578063e5320bb91461017a578063f667ee91146101ad57600080fd5b8063086011b91461008057806369fe0e2d1461009557806393c44847146100b5578063aaccd23014610114575b600080fd5b61009361008e3660046102ca565b6101dd565b005b3480156100a157600080fd5b506100936100b0366004610336565b600055565b3480156100c157600080fd5b506100fe6040518060400160405280600581526020017f392e302e3900000000000000000000000000000000000000000000000000000081525081565b60405161010b919061034f565b60405180910390f35b34801561012057600080fd5b5061013a61012f3660046102ca565b505060005492915050565b60405190815260200161010b565b34801561015457600080fd5b5061013a60005481565b34801561016a57600080fd5b506040516000815260200161010b565b34801561018657600080fd5b5061019d6101953660046103bc565b600192915050565b604051901515815260200161010b565b3480156101b957600080fd5b5061019d6101c8366004610336565b60016020526000908152604090205460ff1681565b6101e9848484846101ef565b50505050565b600180600061023385858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061027692505050565b8152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905550505050565b805160209091012090565b60008083601f84011261029357600080fd5b50813567ffffffffffffffff8111156102ab57600080fd5b6020830191508360208285010111156102c357600080fd5b9250929050565b600080600080604085870312156102e057600080fd5b843567ffffffffffffffff808211156102f857600080fd5b61030488838901610281565b9096509450602087013591508082111561031d57600080fd5b5061032a87828801610281565b95989497509550505050565b60006020828403121561034857600080fd5b5035919050565b60006020808352835180602085015260005b8181101561037d57858101830151858201604001528201610361565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b600080602083850312156103cf57600080fd5b823567ffffffffffffffff8111156103e657600080fd5b6103f285828601610281565b9096909550935050505056fea2646970667358221220f717704d0516cd75abb6e75694a6cf47709163a498980cb44a5290afca26cf3964736f6c63430008160033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_domain";
            readonly type: "uint32";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "hook";
            readonly type: "address";
        }];
        readonly name: "DefaultHookSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "module";
            readonly type: "address";
        }];
        readonly name: "DefaultIsmSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint32";
            readonly name: "destination";
            readonly type: "uint32";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "recipient";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "message";
            readonly type: "bytes";
        }];
        readonly name: "Dispatch";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "messageId";
            readonly type: "bytes32";
        }];
        readonly name: "DispatchId";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint8";
            readonly name: "version";
            readonly type: "uint8";
        }];
        readonly name: "Initialized";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint32";
            readonly name: "origin";
            readonly type: "uint32";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "sender";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }];
        readonly name: "Process";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "messageId";
            readonly type: "bytes32";
        }];
        readonly name: "ProcessId";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "hook";
            readonly type: "address";
        }];
        readonly name: "RequiredHookSet";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "PACKAGE_VERSION";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "VERSION";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "message";
            readonly type: "bytes";
        }];
        readonly name: "addInboundMessage";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_nonce";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes";
            readonly name: "metadata";
            readonly type: "bytes";
        }];
        readonly name: "addInboundMetadata";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_domain";
            readonly type: "uint32";
        }, {
            readonly internalType: "contract MockMailbox";
            readonly name: "_mailbox";
            readonly type: "address";
        }];
        readonly name: "addRemoteMailbox";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "defaultHook";
        readonly outputs: readonly [{
            readonly internalType: "contract IPostDispatchHook";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "defaultIsm";
        readonly outputs: readonly [{
            readonly internalType: "contract IInterchainSecurityModule";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_id";
            readonly type: "bytes32";
        }];
        readonly name: "delivered";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "deployedBlock";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "destinationDomain";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "recipientAddress";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "messageBody";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "metadata";
            readonly type: "bytes";
        }, {
            readonly internalType: "contract IPostDispatchHook";
            readonly name: "hook";
            readonly type: "address";
        }];
        readonly name: "dispatch";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "destinationDomain";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "recipientAddress";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "messageBody";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "hookMetadata";
            readonly type: "bytes";
        }];
        readonly name: "dispatch";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_destinationDomain";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_recipientAddress";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "_messageBody";
            readonly type: "bytes";
        }];
        readonly name: "dispatch";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "nonce";
            readonly type: "uint256";
        }];
        readonly name: "inboundMessages";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "message";
            readonly type: "bytes";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "nonce";
            readonly type: "uint256";
        }];
        readonly name: "inboundMetadata";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "metadata";
            readonly type: "bytes";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "inboundProcessedNonce";
        readonly outputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "inboundUnprocessedNonce";
        readonly outputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_owner";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_defaultIsm";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_defaultHook";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_requiredHook";
            readonly type: "address";
        }];
        readonly name: "initialize";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "latestDispatchedId";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "localDomain";
        readonly outputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "nonce";
        readonly outputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "_metadata";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "_message";
            readonly type: "bytes";
        }];
        readonly name: "process";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_nonce";
            readonly type: "uint32";
        }];
        readonly name: "processInboundMessage";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "processNextInboundMessage";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_id";
            readonly type: "bytes32";
        }];
        readonly name: "processedAt";
        readonly outputs: readonly [{
            readonly internalType: "uint48";
            readonly name: "";
            readonly type: "uint48";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_id";
            readonly type: "bytes32";
        }];
        readonly name: "processor";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "destinationDomain";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "recipientAddress";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "messageBody";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "metadata";
            readonly type: "bytes";
        }, {
            readonly internalType: "contract IPostDispatchHook";
            readonly name: "hook";
            readonly type: "address";
        }];
        readonly name: "quoteDispatch";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "fee";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "destinationDomain";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "recipientAddress";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "messageBody";
            readonly type: "bytes";
        }];
        readonly name: "quoteDispatch";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "fee";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "destinationDomain";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "recipientAddress";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "messageBody";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "defaultHookMetadata";
            readonly type: "bytes";
        }];
        readonly name: "quoteDispatch";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "fee";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_recipient";
            readonly type: "address";
        }];
        readonly name: "recipientIsm";
        readonly outputs: readonly [{
            readonly internalType: "contract IInterchainSecurityModule";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly name: "remoteMailboxes";
        readonly outputs: readonly [{
            readonly internalType: "contract MockMailbox";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "requiredHook";
        readonly outputs: readonly [{
            readonly internalType: "contract IPostDispatchHook";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_hook";
            readonly type: "address";
        }];
        readonly name: "setDefaultHook";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_module";
            readonly type: "address";
        }];
        readonly name: "setDefaultIsm";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_hook";
            readonly type: "address";
        }];
        readonly name: "setRequiredHook";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): MockMailboxInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): MockMailbox;
}
export {};
//# sourceMappingURL=MockMailbox__factory.d.ts.map