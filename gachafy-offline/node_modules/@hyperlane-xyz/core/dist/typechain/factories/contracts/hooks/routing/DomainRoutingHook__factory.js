/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_mailbox",
                type: "address",
            },
            {
                internalType: "address",
                name: "_owner",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "_hook",
                type: "address",
            },
        ],
        name: "HookSet",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "_ism",
                type: "address",
            },
        ],
        name: "IsmSet",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        inputs: [],
        name: "PACKAGE_VERSION",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "hook",
        outputs: [
            {
                internalType: "contract IPostDispatchHook",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "hookType",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "destinationDomain",
                type: "uint32",
            },
        ],
        name: "hooks",
        outputs: [
            {
                internalType: "contract IPostDispatchHook",
                name: "hook",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "interchainSecurityModule",
        outputs: [
            {
                internalType: "contract IInterchainSecurityModule",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "localDomain",
        outputs: [
            {
                internalType: "uint32",
                name: "",
                type: "uint32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "mailbox",
        outputs: [
            {
                internalType: "contract IMailbox",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "metadata",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "message",
                type: "bytes",
            },
        ],
        name: "postDispatch",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "metadata",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "message",
                type: "bytes",
            },
        ],
        name: "quoteDispatch",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_hook",
                type: "address",
            },
        ],
        name: "setHook",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "_destination",
                type: "uint32",
            },
            {
                internalType: "address",
                name: "_hook",
                type: "address",
            },
        ],
        name: "setHook",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint32",
                        name: "destination",
                        type: "uint32",
                    },
                    {
                        internalType: "address",
                        name: "hook",
                        type: "address",
                    },
                ],
                internalType: "struct DomainRoutingHook.HookConfig[]",
                name: "configs",
                type: "tuple[]",
            },
        ],
        name: "setHooks",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_module",
                type: "address",
            },
        ],
        name: "setInterchainSecurityModule",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        name: "supportsMetadata",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60c06040523480156200001157600080fd5b50604051620014f7380380620014f783398101604081905262000034916200019c565b81806001600160a01b0381163b620000925760405162461bcd60e51b815260206004820152601e60248201527f4d61696c626f78436c69656e743a20696e76616c6964206d61696c626f780000604482015260640160405180910390fd5b6001600160a01b03821660808190526040805163234d8e3d60e21b81529051638d3638f4916004808201926020929091908290030181865afa158015620000dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001039190620001d4565b63ffffffff1660a05262000117336200012d565b50620001259050816200012d565b505062000203565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200019757600080fd5b919050565b60008060408385031215620001b057600080fd5b620001bb836200017f565b9150620001cb602084016200017f565b90509250929050565b600060208284031215620001e757600080fd5b815163ffffffff81168114620001fc57600080fd5b9392505050565b60805160a0516112ce6200022960003960006102260152600061036101526112ce6000f3fe60806040526004361061010e5760003560e01c80638da5cb5b116100a5578063d5438eae11610074578063e445e7dd11610059578063e445e7dd146103ae578063e5320bb9146103ca578063f2fde38b146103fa57600080fd5b8063d5438eae1461034f578063de523cf31461038357600080fd5b80638da5cb5b1461025d57806393c4484714610288578063aaccd230146102de578063b646f64c1461030c57600080fd5b806376f9d6c7116100e157806376f9d6c71461017d5780637f5a7c7b1461019d578063843cb363146101f45780638d3638f41461021457600080fd5b8063086011b9146101135780630e72cc06146101285780633dfd387314610148578063715018a614610168575b600080fd5b610126610121366004610e84565b61041a565b005b34801561013457600080fd5b50610126610143366004610f19565b6104c7565b34801561015457600080fd5b50610126610163366004610f19565b610610565b34801561017457600080fd5b50610126610751565b34801561018957600080fd5b50610126610198366004610f4f565b610765565b3480156101a957600080fd5b506065546101ca9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561020057600080fd5b5061012661020f366004610f82565b6107c8565b34801561022057600080fd5b506102487f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016101eb565b34801561026957600080fd5b5060335473ffffffffffffffffffffffffffffffffffffffff166101ca565b34801561029457600080fd5b506102d16040518060400160405280600581526020017f392e302e3900000000000000000000000000000000000000000000000000000081525081565b6040516101eb919061101b565b3480156102ea57600080fd5b506102fe6102f9366004610e84565b61083d565b6040519081526020016101eb565b34801561031857600080fd5b506101ca61032736600461106c565b60976020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b34801561035b57600080fd5b506101ca7f000000000000000000000000000000000000000000000000000000000000000081565b34801561038f57600080fd5b5060665473ffffffffffffffffffffffffffffffffffffffff166101ca565b3480156103ba57600080fd5b50604051600181526020016101eb565b3480156103d657600080fd5b506103ea6103e5366004611087565b6108ea565b60405190151581526020016101eb565b34801561040657600080fd5b50610126610415366004610f19565b6108f3565b61042484846108ea565b6104b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4162737472616374506f73744469737061746368486f6f6b3a20696e76616c6960448201527f64206d657461646174612076617269616e74000000000000000000000000000060648201526084015b60405180910390fd5b6104c1848484846109aa565b50505050565b8073ffffffffffffffffffffffffffffffffffffffff81163b151580610501575073ffffffffffffffffffffffffffffffffffffffff8116155b61058d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e670000000000000000000000000000000000000000000000000060648201526084016104ac565b610595610a2b565b606680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091556040519081527fc47cbcc588c67679e52261c45cc315e56562f8d0ccaba16facb9093ff9498799906020015b60405180910390a15050565b8073ffffffffffffffffffffffffffffffffffffffff81163b15158061064a575073ffffffffffffffffffffffffffffffffffffffff8116155b6106d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e670000000000000000000000000000000000000000000000000060648201526084016104ac565b6106de610a2b565b606580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091556040519081527f4eab7b127c764308788622363ad3e9532de3dfba7845bd4f84c125a22544255a90602001610604565b610759610a2b565b6107636000610aac565b565b61076d610a2b565b63ffffffff91909116600090815260976020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b6107d0610a2b565b60005b81811015610838576108308383838181106107f0576107f06110c9565b610806926020604090920201908101915061106c565b848484818110610818576108186110c9565b90506040020160200160208101906101989190610f19565b6001016107d3565b505050565b600061084985856108ea565b6108d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4162737472616374506f73744469737061746368486f6f6b3a20696e76616c6960448201527f64206d657461646174612076617269616e74000000000000000000000000000060648201526084016104ac565b6108e185858585610b23565b95945050505050565b60015b92915050565b6108fb610a2b565b73ffffffffffffffffffffffffffffffffffffffff811661099e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104ac565b6109a781610aac565b50565b6109b48282610bae565b73ffffffffffffffffffffffffffffffffffffffff1663086011b934868686866040518663ffffffff1660e01b81526004016109f39493929190611141565b6000604051808303818588803b158015610a0c57600080fd5b505af1158015610a20573d6000803e3d6000fd5b505050505050505050565b60335473ffffffffffffffffffffffffffffffffffffffff163314610763576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104ac565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000610b2f8383610bae565b73ffffffffffffffffffffffffffffffffffffffff1663aaccd230868686866040518563ffffffff1660e01b8152600401610b6d9493929190611141565b602060405180830381865afa158015610b8a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e19190611173565b600060976000610bbe8585610c78565b63ffffffff16815260208101919091526040016000205473ffffffffffffffffffffffffffffffffffffffff169050806108ed57610c0a610bff8484610c78565b63ffffffff16610c9b565b604051602001610c1a919061118c565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a00000000000000000000000000000000000000000000000000000000082526104ac9160040161101b565b6000610c88602d602984866111f7565b610c9191611221565b60e01c9392505050565b60606000610ca883610d59565b600101905060008167ffffffffffffffff811115610cc857610cc8611269565b6040519080825280601f01601f191660200182016040528015610cf2576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084610cfc57509392505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610da2577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310610dce576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610dec57662386f26fc10000830492506010015b6305f5e1008310610e04576305f5e100830492506008015b6127108310610e1857612710830492506004015b60648310610e2a576064830492506002015b600a83106108ed5760010192915050565b60008083601f840112610e4d57600080fd5b50813567ffffffffffffffff811115610e6557600080fd5b602083019150836020828501011115610e7d57600080fd5b9250929050565b60008060008060408587031215610e9a57600080fd5b843567ffffffffffffffff80821115610eb257600080fd5b610ebe88838901610e3b565b90965094506020870135915080821115610ed757600080fd5b50610ee487828801610e3b565b95989497509550505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610f1457600080fd5b919050565b600060208284031215610f2b57600080fd5b610f3482610ef0565b9392505050565b803563ffffffff81168114610f1457600080fd5b60008060408385031215610f6257600080fd5b610f6b83610f3b565b9150610f7960208401610ef0565b90509250929050565b60008060208385031215610f9557600080fd5b823567ffffffffffffffff80821115610fad57600080fd5b818501915085601f830112610fc157600080fd5b813581811115610fd057600080fd5b8660208260061b8501011115610fe557600080fd5b60209290920196919550909350505050565b60005b83811015611012578181015183820152602001610ffa565b50506000910152565b602081526000825180602084015261103a816040850160208701610ff7565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60006020828403121561107e57600080fd5b610f3482610f3b565b6000806020838503121561109a57600080fd5b823567ffffffffffffffff8111156110b157600080fd5b6110bd85828601610e3b565b90969095509350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b6040815260006111556040830186886110f8565b82810360208401526111688185876110f8565b979650505050505050565b60006020828403121561118557600080fd5b5051919050565b7f4e6f20686f6f6b20636f6e6669677572656420666f722064657374696e61746981527f6f6e3a20000000000000000000000000000000000000000000000000000000006020820152600082516111ea816024850160208701610ff7565b9190910160240192915050565b6000808585111561120757600080fd5b8386111561121457600080fd5b5050820193919092039150565b7fffffffff0000000000000000000000000000000000000000000000000000000081358181169160048510156112615780818660040360031b1b83161692505b505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea26469706673582212200b11341ede10a0bcce91f02b3a1e4692d012397731039c9eea2aad98c33de68e64736f6c63430008160033";
const isSuperArgs = (xs) => xs.length > 1;
export class DomainRoutingHook__factory extends ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_mailbox, _owner, overrides) {
        return super.deploy(_mailbox, _owner, overrides || {});
    }
    getDeployTransaction(_mailbox, _owner, overrides) {
        return super.getDeployTransaction(_mailbox, _owner, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
//# sourceMappingURL=DomainRoutingHook__factory.js.map