/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory, } from "ethers";
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_lowerIsm",
                type: "address",
            },
            {
                internalType: "address",
                name: "_upperIsm",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_threshold",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "PACKAGE_VERSION",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "lower",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "moduleType",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "_message",
                type: "bytes",
            },
        ],
        name: "route",
        outputs: [
            {
                internalType: "contract IInterchainSecurityModule",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "threshold",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "upper",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "_metadata",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "_message",
                type: "bytes",
            },
        ],
        name: "verify",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60e060405234801561001057600080fd5b5060405161079d38038061079d83398101604081905261002f916100fa565b8282826001600160a01b0383163b1515801561005457506001600160a01b0382163b15155b6100bf5760405162461bcd60e51b815260206004820152603260248201527f416d6f756e74506172746974696f6e3a206c6f77657220616e64207570706572604482015271206d75737420626520636f6e74726163747360701b606482015260840160405180910390fd5b6001600160a01b03928316608052911660a05260c05250610136915050565b80516001600160a01b03811681146100f557600080fd5b919050565b60008060006060848603121561010f57600080fd5b610118846100de565b9250610126602085016100de565b9150604084015190509250925092565b60805160a05160c0516106256101786000396000818160c4015261028c01526000818160f901526102b301526000818161018301526102dc01526106256000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80636465e69f1161005b5780636465e69f1461011b57806393c4484714610135578063b951486d1461017e578063f7e83aee146101a557600080fd5b806315ce45a21461008257806342cde4e8146100bf5780634bdf4a6d146100f4575b600080fd5b61009561009036600461038a565b6101c8565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100e67f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100b6565b6100957f000000000000000000000000000000000000000000000000000000000000000081565b610123600181565b60405160ff90911681526020016100b6565b6101716040518060400160405280600581526020017f392e302e3900000000000000000000000000000000000000000000000000000081525081565b6040516100b691906103cc565b6100957f000000000000000000000000000000000000000000000000000000000000000081565b6101b86101b3366004610439565b6101dd565b60405190151581526020016100b6565b60006101d48383610273565b90505b92915050565b60006101e983836101c8565b73ffffffffffffffffffffffffffffffffffffffff1663f7e83aee868686866040518563ffffffff1660e01b815260040161022794939291906104ee565b6020604051808303816000875af1158015610246573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026a9190610520565b95945050505050565b6000806102886102838585610303565b61031f565b90507f000000000000000000000000000000000000000000000000000000000000000081106102da577f00000000000000000000000000000000000000000000000000000000000000009150506101d7565b7f00000000000000000000000000000000000000000000000000000000000000009150506101d7565b36600061031383604d8187610549565b915091505b9250929050565b60008260208361032f8280610573565b60ff169261033f93929190610549565b6101d4916105b3565b60008083601f84011261035a57600080fd5b50813567ffffffffffffffff81111561037257600080fd5b60208301915083602082850101111561031857600080fd5b6000806020838503121561039d57600080fd5b823567ffffffffffffffff8111156103b457600080fd5b6103c085828601610348565b90969095509350505050565b60006020808352835180602085015260005b818110156103fa578581018301518582016040015282016103de565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b6000806000806040858703121561044f57600080fd5b843567ffffffffffffffff8082111561046757600080fd5b61047388838901610348565b9096509450602087013591508082111561048c57600080fd5b5061049987828801610348565b95989497509550505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b6040815260006105026040830186886104a5565b82810360208401526105158185876104a5565b979650505050505050565b60006020828403121561053257600080fd5b8151801515811461054257600080fd5b9392505050565b6000808585111561055957600080fd5b8386111561056657600080fd5b5050820193919092039150565b60ff81811683821601908111156101d7577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b803560208310156101d7577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b169291505056fea2646970667358221220e4ea1e1e8e31ca68ffc21f9e1bdb68b1676f75e9cd8251fc9e611b5a7881ae2364736f6c63430008160033";
const isSuperArgs = (xs) => xs.length > 1;
export class AmountRoutingIsm__factory extends ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_lowerIsm, _upperIsm, _threshold, overrides) {
        return super.deploy(_lowerIsm, _upperIsm, _threshold, overrides || {});
    }
    getDeployTransaction(_lowerIsm, _upperIsm, _threshold, overrides) {
        return super.getDeployTransaction(_lowerIsm, _upperIsm, _threshold, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
//# sourceMappingURL=AmountRoutingIsm__factory.js.map