import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IOptimismPortal2, IOptimismPortal2Interface } from "../../../../contracts/interfaces/optimism/IOptimismPortal2.js";
export declare class IOptimismPortal2__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "withdrawalHash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "msgSender";
            readonly type: "address";
        }];
        readonly name: "provenWithdrawals";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "disputeGameProxy";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "timestamp";
                readonly type: "uint64";
            }];
            readonly internalType: "struct IOptimismPortal2.ProvenWithdrawal";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): IOptimismPortal2Interface;
    static connect(address: string, signerOrProvider: Signer | Provider): IOptimismPortal2;
}
//# sourceMappingURL=IOptimismPortal2__factory.d.ts.map