import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockValueTransferBridge, MockValueTransferBridgeInterface } from "../../../contracts/mock/MockValueTransferBridge.js";
type MockValueTransferBridgeConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class MockValueTransferBridge__factory extends ContractFactory {
    constructor(...args: MockValueTransferBridgeConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string;
    }): Promise<MockValueTransferBridge>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string;
    }): TransactionRequest;
    attach(address: string): MockValueTransferBridge;
    connect(signer: Signer): MockValueTransferBridge__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b50610293806100206000396000f3fe6080604052600436106100295760003560e01c806381b4e8b41461002e5780638bd90b8214610054575b600080fd5b61004161003c36600461018b565b610081565b6040519081526020015b60405180910390f35b34801561006057600080fd5b5061007461006f36600461018b565b6100f4565b60405161004b91906101c9565b6000828463ffffffff164663ffffffff167f0bb09a061acc36dd2681a1f77f045e28a199a1fed63d1a0795751ada60d2de4a856040516100c391815260200190565b60405180910390a4507f71aecc29878cd2099fd025fceeaf0a7aab1f9632585cbac522fa539125cc76d99392505050565b60408051600180825281830190925260609160009190816020015b604080518082019091526000808252602082015281526020019060019003908161010f5790505090506040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016001815250816000815181106101785761017861022e565b6020908102919091010152949350505050565b6000806000606084860312156101a057600080fd5b833563ffffffff811681146101b457600080fd5b95602085013595506040909401359392505050565b602080825282518282018190526000919060409081850190868401855b82811015610221578151805173ffffffffffffffffffffffffffffffffffffffff1685528601518685015292840192908501906001016101e6565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212202e8ac29683ecf743a49ca07397b892c4f8a3acb54acd129c0002b451fd74bd2d64736f6c63430008160033";
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint32";
            readonly name: "origin";
            readonly type: "uint32";
        }, {
            readonly indexed: true;
            readonly internalType: "uint32";
            readonly name: "destination";
            readonly type: "uint32";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "recipient";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "SentTransferRemote";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "quoteTransferRemote";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }];
            readonly internalType: "struct Quote[]";
            readonly name: "";
            readonly type: "tuple[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_destinationDomain";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_recipient";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amountOut";
            readonly type: "uint256";
        }];
        readonly name: "transferRemote";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "transferId";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }];
    static createInterface(): MockValueTransferBridgeInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): MockValueTransferBridge;
}
export {};
//# sourceMappingURL=MockValueTransferBridge__factory.d.ts.map