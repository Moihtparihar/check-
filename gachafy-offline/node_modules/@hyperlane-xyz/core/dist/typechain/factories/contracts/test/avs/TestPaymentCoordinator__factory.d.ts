import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestPaymentCoordinator, TestPaymentCoordinatorInterface } from "../../../../contracts/test/avs/TestPaymentCoordinator.js";
type TestPaymentCoordinatorConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class TestPaymentCoordinator__factory extends ContractFactory {
    constructor(...args: TestPaymentCoordinatorConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string;
    }): Promise<TestPaymentCoordinator>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string;
    }): TransactionRequest;
    attach(address: string): TestPaymentCoordinator;
    connect(signer: Signer): TestPaymentCoordinator__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b50610699806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806342b5c01014610030575b600080fd5b61004361003e36600461049b565b610045565b005b60005b818110156100d8576100d0333085858581811061006757610067610510565b9050602002810190610079919061053f565b6040013586868681811061008f5761008f610510565b90506020028101906100a1919061053f565b6100b290604081019060200161057d565b73ffffffffffffffffffffffffffffffffffffffff169291906100dd565b600101610048565b505050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052610172908590610178565b50505050565b60006101da826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661028c9092919063ffffffff16565b90508051600014806101fb5750808060200190518101906101fb91906105ba565b6100d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b606061029b84846000856102a3565b949350505050565b606082471015610335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610283565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161035e9190610600565b60006040518083038185875af1925050503d806000811461039b576040519150601f19603f3d011682016040523d82523d6000602084013e6103a0565b606091505b50915091506103b1878383876103bc565b979650505050505050565b6060831561045257825160000361044b5773ffffffffffffffffffffffffffffffffffffffff85163b61044b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610283565b508161029b565b61029b83838151156104675781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102839190610612565b600080602083850312156104ae57600080fd5b823567ffffffffffffffff808211156104c657600080fd5b818501915085601f8301126104da57600080fd5b8135818111156104e957600080fd5b8660208260051b85010111156104fe57600080fd5b60209290920196919550909350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6183360301811261057357600080fd5b9190910192915050565b60006020828403121561058f57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146105b357600080fd5b9392505050565b6000602082840312156105cc57600080fd5b815180151581146105b357600080fd5b60005b838110156105f75781810151838201526020016105df565b50506000910152565b600082516105738184602087016105dc565b60208152600082518060208401526106318160408501602087016105dc565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea2646970667358221220c76aa1ab4de0fbaf2e327e219a298b2392719e0d45b0b84aac6033bd6426b8a664736f6c63430008160033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IStrategy";
                    readonly name: "strategy";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint96";
                    readonly name: "multiplier";
                    readonly type: "uint96";
                }];
                readonly internalType: "struct IPaymentCoordinator.StrategyAndMultiplier[]";
                readonly name: "strategiesAndMultipliers";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTimestamp";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "duration";
                readonly type: "uint64";
            }];
            readonly internalType: "struct IPaymentCoordinator.RangePayment[]";
            readonly name: "rangePayments";
            readonly type: "tuple[]";
        }];
        readonly name: "payForRange";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): TestPaymentCoordinatorInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): TestPaymentCoordinator;
}
export {};
//# sourceMappingURL=TestPaymentCoordinator__factory.d.ts.map