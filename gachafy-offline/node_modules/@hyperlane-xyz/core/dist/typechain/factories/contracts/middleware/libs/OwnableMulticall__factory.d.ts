import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OwnableMulticall, OwnableMulticallInterface } from "../../../../contracts/middleware/libs/OwnableMulticall.js";
type OwnableMulticallConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class OwnableMulticall__factory extends ContractFactory {
    constructor(...args: OwnableMulticallConstructorParams);
    deploy(_owner: string, overrides?: Overrides & {
        from?: string;
    }): Promise<OwnableMulticall>;
    getDeployTransaction(_owner: string, overrides?: Overrides & {
        from?: string;
    }): TransactionRequest;
    attach(address: string): OwnableMulticall;
    connect(signer: Signer): OwnableMulticall__factory;
    static readonly bytecode = "0x60a060405234801561001057600080fd5b50604051610ec4380380610ec483398101604081905261002f9161009a565b6001600160a01b0381166100895760405162461bcd60e51b815260206004820152601f60248201527f4f776e61626c654d756c746963616c6c3a20696e76616c6964206f776e657200604482015260640160405180910390fd5b6001600160a01b03166080526100ca565b6000602082840312156100ac57600080fd5b81516001600160a01b03811681146100c357600080fd5b9392505050565b608051610dd26100f26000396000818160f70152818161017601526103a60152610dd26000f3fe60806040526004361061005e5760003560e01c8063839df94511610043578063839df945146100a55780638da5cb5b146100e5578063abe200321461013e57600080fd5b806365604f831461006a57806374c00f9f1461007f57600080fd5b3661006557005b600080fd5b61007d6100783660046108b0565b61015e565b005b61009261008d3660046108f2565b610218565b6040519081526020015b60405180910390f35b3480156100b157600080fd5b506100d56100c036600461093e565b60006020819052908152604090205460ff1681565b604051901515815260200161009c565b3480156100f157600080fd5b506101197f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161009c565b34801561014a57600080fd5b5061007d61015936600461093e565b61038e565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610202576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f216f776e6572000000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b61021461020f82846109fe565b61052d565b5050565b60008082858560405160200161022f929190610b34565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261026b9291602001610cb1565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152918152815160209283012060008181529283905291205490915060ff16610319576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4943413a20496e76616c69642052657665616c0000000000000000000000000060448201526064016101f9565b60008181526020819052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905551919250829182917fd51d38a373f01d7ff784e6983dc84e96dc02bedcf7705b292eebc427255e0ca591a261038661020f85876109fe565b509392505050565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461042d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f216f776e6572000000000000000000000000000000000000000000000000000060448201526064016101f9565b60008181526020819052604090205460ff16156104cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f4943413a2050726576696f757320636f6d6d69746d656e742070656e64696e6760448201527f20657865637574696f6e0000000000000000000000000000000000000000000060648201526084016101f9565b60008181526020819052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555182917f3f09b472466bcbbb9c7336754868e482b43fabaa73806dcbf50079f2a68d0ec591a250565b80516000905b808210156105695761055d83838151811061055057610550610cd7565b602002602001015161056e565b50816001019150610533565b505050565b606061058f6105808360000151610595565b8360400151846020015161063e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82111561063a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f5479706543617374733a2062797465733332546f41646472657373206f76657260448201527f666c6f770000000000000000000000000000000000000000000000000000000060648201526084016101f9565b5090565b6060610664848484604051806060016040528060298152602001610d746029913961066c565b949350505050565b6060824710156106fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016101f9565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516107279190610d06565b60006040518083038185875af1925050503d8060008114610764576040519150601f19603f3d011682016040523d82523d6000602084013e610769565b606091505b509150915061077a87838387610785565b979650505050505050565b6060831561081b5782516000036108145773ffffffffffffffffffffffffffffffffffffffff85163b610814576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101f9565b5081610664565b61066483838151156108305781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f99190610d22565b60008083601f84011261087657600080fd5b50813567ffffffffffffffff81111561088e57600080fd5b6020830191508360208260051b85010111156108a957600080fd5b9250929050565b600080602083850312156108c357600080fd5b823567ffffffffffffffff8111156108da57600080fd5b6108e685828601610864565b90969095509350505050565b60008060006040848603121561090757600080fd5b833567ffffffffffffffff81111561091e57600080fd5b61092a86828701610864565b909790965060209590950135949350505050565b60006020828403121561095057600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156109a9576109a9610957565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156109f6576109f6610957565b604052919050565b600067ffffffffffffffff80841115610a1957610a19610957565b8360051b6020610a2a8183016109af565b868152918501918181019036841115610a4257600080fd5b865b84811015610b2857803586811115610a5c5760008081fd5b88016060368290031215610a705760008081fd5b610a78610986565b81358152858201358682015260408083013589811115610a985760008081fd5b9290920191601f3681850112610aae5760008081fd5b83358a811115610ac057610ac0610957565b610aef897fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084840116016109af565b91508082523689828701011115610b065760008081fd5b808986018a840137600090820189015290820152845250918301918301610a44565b50979650505050505050565b60208082528181018390526000906040808401600586901b8501820187855b88811015610c7f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa18b3603018112610bb457600080fd5b8a01803584528681013587850152606086820135368390037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1018112610bf957600080fd5b90910187810191903567ffffffffffffffff811115610c1757600080fd5b803603831315610c2657600080fd5b8188870152808287015260809150808383880137600086820183015295880195601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016909401909301925090850190600101610b53565b509098975050505050505050565b60005b83811015610ca8578181015183820152602001610c90565b50506000910152565b82815260008251610cc9816020850160208701610c8d565b919091016020019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008251610d18818460208701610c8d565b9190910192915050565b6020815260008251806020840152610d41816040850160208701610c8d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564a264697066735822122069b7ef2511abdbdd988d031b0ff798c7dee23caf54428aadf16b214523d516ae64736f6c63430008160033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_owner";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "commitmentHash";
            readonly type: "bytes32";
        }];
        readonly name: "CommitmentExecuted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "commitmentHash";
            readonly type: "bytes32";
        }];
        readonly name: "CommitmentSet";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "commitmentHash";
            readonly type: "bytes32";
        }];
        readonly name: "commitments";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "isPendingExecution";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "to";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "value";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly internalType: "struct CallLib.Call[]";
            readonly name: "calls";
            readonly type: "tuple[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "to";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "value";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly internalType: "struct CallLib.Call[]";
            readonly name: "calls";
            readonly type: "tuple[]";
        }, {
            readonly internalType: "bytes32";
            readonly name: "salt";
            readonly type: "bytes32";
        }];
        readonly name: "revealAndExecute";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "executedCommitment";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_commitment";
            readonly type: "bytes32";
        }];
        readonly name: "setCommitment";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly stateMutability: "payable";
        readonly type: "receive";
    }];
    static createInterface(): OwnableMulticallInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): OwnableMulticall;
}
export {};
//# sourceMappingURL=OwnableMulticall__factory.d.ts.map