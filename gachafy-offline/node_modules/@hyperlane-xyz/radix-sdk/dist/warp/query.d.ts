import { GatewayApiClient } from '@radixdlt/babylon-gateway-api-sdk';
import { RadixBase } from '../utils/base.js';
export declare class RadixWarpQuery {
    protected networkId: number;
    protected gateway: GatewayApiClient;
    protected base: RadixBase;
    constructor(networkId: number, gateway: GatewayApiClient, base: RadixBase);
    getToken({ token }: {
        token: string;
    }): Promise<{
        address: string;
        owner: string;
        token_type: 'Collateral' | 'Synthetic';
        mailbox: string;
        ism: string;
        origin_denom: string;
        name: string;
        symbol: string;
        description: string;
        divisibility: number;
    }>;
    getRemoteRouters({ token }: {
        token: string;
    }): Promise<{
        address: string;
        remote_routers: {
            receiver_domain: string;
            receiver_contract: string;
            gas: string;
        }[];
    }>;
    getBridgedSupply({ token }: {
        token: string;
    }): Promise<bigint>;
    quoteRemoteTransfer({ token, destination_domain, }: {
        token: string;
        destination_domain: number;
    }): Promise<{
        resource: string;
        amount: bigint;
    }>;
}
//# sourceMappingURL=query.d.ts.map