import { GatewayApiClient } from '@radixdlt/babylon-gateway-api-sdk';
import { RadixBase } from '../utils/base.js';
import { Isms, MultisigIsms } from '../utils/types.js';
export declare class RadixCoreQuery {
    protected networkId: number;
    protected gateway: GatewayApiClient;
    protected base: RadixBase;
    constructor(networkId: number, gateway: GatewayApiClient, base: RadixBase);
    getMailbox({ mailbox }: {
        mailbox: string;
    }): Promise<{
        address: string;
        owner: string;
        local_domain: number;
        nonce: number;
        default_ism: string;
        default_hook: string;
        required_hook: string;
    }>;
    getIsmType({ ism }: {
        ism: string;
    }): Promise<Isms>;
    getMultisigIsm({ ism }: {
        ism: string;
    }): Promise<{
        address: string;
        type: MultisigIsms;
        threshold: number;
        validators: string[];
    }>;
    getRoutingIsm({ ism }: {
        ism: string;
    }): Promise<{
        address: string;
        owner: string;
        routes: {
            domain: number;
            ism: string;
        }[];
    }>;
    getIgpHook({ hook }: {
        hook: string;
    }): Promise<{
        address: string;
        owner: string;
        destination_gas_configs: {
            [domain_id: string]: {
                gas_oracle: {
                    token_exchange_rate: string;
                    gas_price: string;
                };
                gas_overhead: string;
            };
        };
    }>;
    getMerkleTreeHook({ hook }: {
        hook: string;
    }): Promise<{
        address: string;
    }>;
}
//# sourceMappingURL=query.d.ts.map