import { GatewayApiClient } from '@radixdlt/babylon-gateway-api-sdk';
import { NetworkId } from '@radixdlt/radix-engine-toolkit';
import { RadixCorePopulate } from './core/populate.js';
import { RadixCoreQuery } from './core/query.js';
import { RadixCoreTx } from './core/tx.js';
import { RadixBase } from './utils/base.js';
import { RadixSigner } from './utils/signer.js';
import { RadixSDKOptions } from './utils/types.js';
import { RadixWarpPopulate } from './warp/populate.js';
import { RadixWarpQuery } from './warp/query.js';
import { RadixWarpTx } from './warp/tx.js';
export { NetworkId };
export declare const DEFAULT_GAS_MULTIPLIER = 1.2;
export declare class RadixSDK {
    protected networkId: number;
    protected gateway: GatewayApiClient;
    applicationName: string;
    packageAddress: string;
    base: RadixBase;
    query: {
        core: RadixCoreQuery;
        warp: RadixWarpQuery;
    };
    populate: {
        core: RadixCorePopulate;
        warp: RadixWarpPopulate;
    };
    constructor(options?: RadixSDKOptions);
    getNetworkId(): number;
}
export declare class RadixSigningSDK extends RadixSDK {
    private account;
    tx: {
        core: RadixCoreTx;
        warp: RadixWarpTx;
    };
    signer: RadixSigner;
    private constructor();
    getAddress(): string;
    static fromRandomPrivateKey(options?: RadixSDKOptions): Promise<RadixSigningSDK>;
    static fromPrivateKey(privateKey: string, options?: RadixSDKOptions): Promise<RadixSigningSDK>;
}
//# sourceMappingURL=index.d.ts.map