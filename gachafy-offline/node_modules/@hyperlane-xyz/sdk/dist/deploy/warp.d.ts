import { Address } from '@hyperlane-xyz/utils';
import { MultiProvider } from '../providers/MultiProvider.js';
import { WarpRouteDeployConfigMailboxRequired } from '../token/types.js';
import { ChainMap, IMultiProtocolSignerManager } from '../types.js';
type ChainAddresses = Record<string, string>;
export declare function executeWarpDeploy(warpDeployConfig: WarpRouteDeployConfigMailboxRequired, multiProvider: MultiProvider, multiProtocolSigner: IMultiProtocolSignerManager, registryAddresses: ChainMap<ChainAddresses>, apiKeys: ChainMap<string>): Promise<ChainMap<Address>>;
export declare function enrollCrossChainRouters({ multiProvider, multiProtocolSigner, registryAddresses, warpDeployConfig, }: {
    multiProvider: MultiProvider;
    multiProtocolSigner: IMultiProtocolSignerManager;
    registryAddresses: ChainMap<ChainAddresses>;
    warpDeployConfig: WarpRouteDeployConfigMailboxRequired;
}, deployedContracts: ChainMap<Address>): Promise<void>;
export {};
//# sourceMappingURL=warp.d.ts.map