import { HyperlaneCore } from '../../core/HyperlaneCore.js';
import { MultiProvider } from '../../providers/MultiProvider.js';
import { AggregationMetadataBuilder } from './aggregation.js';
import { ArbL2ToL1MetadataBuilder } from './arbL2ToL1.js';
import { OffchainLookupMetadataBuilder } from './ccipread.js';
import { MultisigMetadataBuilder } from './multisig.js';
import { NullMetadataBuilder } from './null.js';
import { DynamicRoutingMetadataBuilder } from './routing.js';
import type { MetadataBuilder, MetadataContext, StructuredMetadata } from './types.js';
export declare class BaseMetadataBuilder implements MetadataBuilder {
    nullMetadataBuilder: NullMetadataBuilder;
    multisigMetadataBuilder: MultisigMetadataBuilder;
    aggregationMetadataBuilder: AggregationMetadataBuilder;
    routingMetadataBuilder: DynamicRoutingMetadataBuilder;
    arbL2ToL1MetadataBuilder: ArbL2ToL1MetadataBuilder;
    ccipReadMetadataBuilder: OffchainLookupMetadataBuilder;
    multiProvider: MultiProvider;
    protected logger: import("pino").default.Logger<never>;
    constructor(core: HyperlaneCore);
    build(context: MetadataContext, maxDepth?: number): Promise<string>;
    static decode(metadata: string, context: MetadataContext): StructuredMetadata;
}
//# sourceMappingURL=builder.d.ts.map