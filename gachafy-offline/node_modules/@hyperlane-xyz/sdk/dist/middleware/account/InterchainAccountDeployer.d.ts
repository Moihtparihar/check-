import { Router } from '@hyperlane-xyz/core';
import { HyperlaneContracts } from '../../contracts/types.js';
import { ContractVerifier } from '../../deploy/verify/ContractVerifier.js';
import { IcaRouterConfig as InterchainAccountConfig } from '../../ica/types.js';
import { MultiProvider } from '../../providers/MultiProvider.js';
import { HyperlaneRouterDeployer } from '../../router/HyperlaneRouterDeployer.js';
import { ChainName } from '../../types.js';
import { InterchainAccountFactories } from './contracts.js';
export declare class InterchainAccountDeployer extends HyperlaneRouterDeployer<InterchainAccountConfig, InterchainAccountFactories> {
    constructor(multiProvider: MultiProvider, contractVerifier?: ContractVerifier, concurrentDeploy?: boolean);
    router(contracts: HyperlaneContracts<InterchainAccountFactories>): Router;
    deployContracts(chain: ChainName, config: InterchainAccountConfig): Promise<HyperlaneContracts<InterchainAccountFactories>>;
}
//# sourceMappingURL=InterchainAccountDeployer.d.ts.map