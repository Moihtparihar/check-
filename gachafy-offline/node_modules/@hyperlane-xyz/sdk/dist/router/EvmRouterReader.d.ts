import { Address } from '@hyperlane-xyz/utils';
import { EvmHookReader } from '../hook/EvmHookReader.js';
import { EvmIsmReader } from '../ism/EvmIsmReader.js';
import { MultiProvider } from '../providers/MultiProvider.js';
import { ChainNameOrId } from '../types.js';
import { HyperlaneReader } from '../utils/HyperlaneReader.js';
import { DerivedMailboxClientConfig, DerivedRouterConfig, RemoteRouters } from './types.js';
export declare class EvmRouterReader extends HyperlaneReader {
    protected readonly concurrency: number;
    protected readonly logger: import("pino").default.Logger<never>;
    protected evmHookReader: EvmHookReader;
    protected evmIsmReader: EvmIsmReader;
    constructor(multiProvider: MultiProvider, chain: ChainNameOrId, concurrency?: number);
    readRouterConfig(address: Address): Promise<DerivedRouterConfig>;
    fetchMailboxClientConfig(routerAddress: Address): Promise<DerivedMailboxClientConfig>;
    fetchRemoteRouters(routerAddress: Address): Promise<RemoteRouters>;
}
//# sourceMappingURL=EvmRouterReader.d.ts.map