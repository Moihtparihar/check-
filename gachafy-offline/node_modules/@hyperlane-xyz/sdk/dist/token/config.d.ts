export declare enum TokenType {
    synthetic = "synthetic",
    syntheticRebase = "syntheticRebase",
    syntheticUri = "syntheticUri",
    collateral = "collateral",
    collateralVault = "collateralVault",
    collateralVaultRebase = "collateralVaultRebase",
    XERC20 = "xERC20",
    XERC20Lockbox = "xERC20Lockbox",
    collateralFiat = "collateralFiat",
    collateralUri = "collateralUri",
    collateralCctp = "collateralCctp",
    native = "native",
    nativeOpL2 = "nativeOpL2",
    nativeOpL1 = "nativeOpL1",
    nativeScaled = "nativeScaled"
}
declare const isMovableCollateralTokenTypeMap: {
    readonly xERC20: false;
    readonly xERC20Lockbox: false;
    readonly collateral: true;
    readonly collateralCctp: false;
    readonly collateralFiat: false;
    readonly collateralUri: false;
    readonly collateralVault: true;
    readonly collateralVaultRebase: true;
    readonly native: true;
    readonly nativeOpL1: false;
    readonly nativeOpL2: false;
    readonly nativeScaled: true;
    readonly synthetic: false;
    readonly syntheticRebase: false;
    readonly syntheticUri: false;
};
export type MovableTokenType = {
    [K in keyof typeof isMovableCollateralTokenTypeMap]: (typeof isMovableCollateralTokenTypeMap)[K] extends true ? K : never;
}[keyof typeof isMovableCollateralTokenTypeMap];
export declare function isMovableCollateralTokenType(type: TokenType): boolean;
export declare const gasOverhead: (tokenType: TokenType) => number;
export declare const NON_ZERO_SENDER_ADDRESS = "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266";
export {};
//# sourceMappingURL=config.d.ts.map