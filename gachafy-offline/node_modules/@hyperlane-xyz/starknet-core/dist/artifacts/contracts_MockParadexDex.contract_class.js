export const contracts_MockParadexDex = {"sierra_program":[],"contract_class_version":"0.1.0","entry_points_by_type":{"EXTERNAL":[{"selector":"0x56878e39e16b42520b0d7936d3fd3498f86ceda4dbad50f6ff717644c95ed6","function_idx":1},{"selector":"0x2c4fac3c01a1444ca77c648e58a0840f4965c884cf47895d4fa3b614d47f938","function_idx":0},{"selector":"0x3aedf5a9ebf05d3ec07fc2068e867f59856e666d1f351881b0c0afff432b2b9","function_idx":2}],"L1_HANDLER":[],"CONSTRUCTOR":[{"selector":"0x28ffe4ff0f226a9107253e17a904099aa4f63a02a5621de0576e5aa71bc5194","function_idx":3}]},"abi":[{"type":"impl","name":"IMockParadexDexImpl","interface_name":"mocks::mock_paradex_dex::IMockParadexDex"},{"type":"interface","name":"mocks::mock_paradex_dex::IMockParadexDex","items":[{"type":"function","name":"deposit_on_behalf_of","inputs":[{"name":"recipient","type":"core::starknet::contract_address::ContractAddress"},{"name":"token_address","type":"core::starknet::contract_address::ContractAddress"},{"name":"amount","type":"core::felt252"}],"outputs":[{"type":"core::felt252"}],"state_mutability":"external"},{"type":"function","name":"set_hyperlane_token","inputs":[{"name":"token_address","type":"core::starknet::contract_address::ContractAddress"}],"outputs":[],"state_mutability":"external"},{"type":"function","name":"get_token_asset_balance","inputs":[{"name":"account","type":"core::starknet::contract_address::ContractAddress"},{"name":"token_address","type":"core::starknet::contract_address::ContractAddress"}],"outputs":[{"type":"core::felt252"}],"state_mutability":"view"}]},{"type":"constructor","name":"constructor","inputs":[]},{"type":"struct","name":"core::integer::u256","members":[{"name":"low","type":"core::integer::u128"},{"name":"high","type":"core::integer::u128"}]},{"type":"event","name":"mocks::mock_paradex_dex::MockParadexDex::DepositSuccess","kind":"struct","members":[{"name":"token","type":"core::starknet::contract_address::ContractAddress","kind":"data"},{"name":"recipient","type":"core::starknet::contract_address::ContractAddress","kind":"data"},{"name":"amount","type":"core::integer::u256","kind":"data"}]},{"type":"event","name":"mocks::mock_paradex_dex::MockParadexDex::Event","kind":"enum","variants":[{"name":"DepositSuccess","type":"mocks::mock_paradex_dex::MockParadexDex::DepositSuccess","kind":"nested"}]}]};