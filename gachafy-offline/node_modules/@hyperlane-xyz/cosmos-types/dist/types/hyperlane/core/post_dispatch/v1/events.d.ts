import _m0 from 'protobufjs/minimal.js';
export declare const protobufPackage = "hyperlane.core.post_dispatch.v1";
/** EventCreateMerkleTreeHook ... */
export interface EventCreateMerkleTreeHook {
    /** id ... */
    merkle_tree_hook_id: string;
    /** mailbox_id ... */
    mailbox_id: string;
    owner: string;
}
/** EventInsertedIntoTree ... */
export interface EventInsertedIntoTree {
    /** message_id ... */
    message_id: string;
    /** index ... */
    index: number;
    /** merkle_tree_hook_id ... */
    merkle_tree_hook_id: string;
}
/** EventGasPayment ... */
export interface EventGasPayment {
    /** message_id ... */
    message_id: string;
    /** destination ... */
    destination: number;
    /** gas_amount ... */
    gas_amount: string;
    /** payment ... */
    payment: string;
    /** igp_id ... */
    igp_id: string;
}
/** EventCreateNoopHook ... */
export interface EventCreateNoopHook {
    /** id ... */
    noop_hook_id: string;
    /** owner ... */
    owner: string;
}
/** EventCreateIgp ... */
export interface EventCreateIgp {
    igp_id: string;
    owner: string;
    denom: string;
}
/** EventSetIgp ... */
export interface EventSetIgp {
    igp_id: string;
    owner: string;
    new_owner: string;
    renounce_ownership: boolean;
}
/** EventSetDestinationGasConfig ... */
export interface EventSetDestinationGasConfig {
    igp_id: string;
    owner: string;
    remote_domain: number;
    gas_overhead: string;
    gas_price: string;
    token_exchange_rate: string;
}
/** EventClaimIgp ... */
export interface EventClaimIgp {
    igp_id: string;
    owner: string;
    amount: string;
}
export declare const EventCreateMerkleTreeHook: {
    encode(message: EventCreateMerkleTreeHook, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): EventCreateMerkleTreeHook;
    fromJSON(object: any): EventCreateMerkleTreeHook;
    toJSON(message: EventCreateMerkleTreeHook): unknown;
    create<I extends {
        merkle_tree_hook_id?: string | undefined;
        mailbox_id?: string | undefined;
        owner?: string | undefined;
    } & {
        merkle_tree_hook_id?: string | undefined;
        mailbox_id?: string | undefined;
        owner?: string | undefined;
    } & { [K in Exclude<keyof I, keyof EventCreateMerkleTreeHook>]: never; }>(base?: I | undefined): EventCreateMerkleTreeHook;
    fromPartial<I_1 extends {
        merkle_tree_hook_id?: string | undefined;
        mailbox_id?: string | undefined;
        owner?: string | undefined;
    } & {
        merkle_tree_hook_id?: string | undefined;
        mailbox_id?: string | undefined;
        owner?: string | undefined;
    } & { [K_1 in Exclude<keyof I_1, keyof EventCreateMerkleTreeHook>]: never; }>(object: I_1): EventCreateMerkleTreeHook;
};
export declare const EventInsertedIntoTree: {
    encode(message: EventInsertedIntoTree, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): EventInsertedIntoTree;
    fromJSON(object: any): EventInsertedIntoTree;
    toJSON(message: EventInsertedIntoTree): unknown;
    create<I extends {
        message_id?: string | undefined;
        index?: number | undefined;
        merkle_tree_hook_id?: string | undefined;
    } & {
        message_id?: string | undefined;
        index?: number | undefined;
        merkle_tree_hook_id?: string | undefined;
    } & { [K in Exclude<keyof I, keyof EventInsertedIntoTree>]: never; }>(base?: I | undefined): EventInsertedIntoTree;
    fromPartial<I_1 extends {
        message_id?: string | undefined;
        index?: number | undefined;
        merkle_tree_hook_id?: string | undefined;
    } & {
        message_id?: string | undefined;
        index?: number | undefined;
        merkle_tree_hook_id?: string | undefined;
    } & { [K_1 in Exclude<keyof I_1, keyof EventInsertedIntoTree>]: never; }>(object: I_1): EventInsertedIntoTree;
};
export declare const EventGasPayment: {
    encode(message: EventGasPayment, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): EventGasPayment;
    fromJSON(object: any): EventGasPayment;
    toJSON(message: EventGasPayment): unknown;
    create<I extends {
        message_id?: string | undefined;
        destination?: number | undefined;
        gas_amount?: string | undefined;
        payment?: string | undefined;
        igp_id?: string | undefined;
    } & {
        message_id?: string | undefined;
        destination?: number | undefined;
        gas_amount?: string | undefined;
        payment?: string | undefined;
        igp_id?: string | undefined;
    } & { [K in Exclude<keyof I, keyof EventGasPayment>]: never; }>(base?: I | undefined): EventGasPayment;
    fromPartial<I_1 extends {
        message_id?: string | undefined;
        destination?: number | undefined;
        gas_amount?: string | undefined;
        payment?: string | undefined;
        igp_id?: string | undefined;
    } & {
        message_id?: string | undefined;
        destination?: number | undefined;
        gas_amount?: string | undefined;
        payment?: string | undefined;
        igp_id?: string | undefined;
    } & { [K_1 in Exclude<keyof I_1, keyof EventGasPayment>]: never; }>(object: I_1): EventGasPayment;
};
export declare const EventCreateNoopHook: {
    encode(message: EventCreateNoopHook, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): EventCreateNoopHook;
    fromJSON(object: any): EventCreateNoopHook;
    toJSON(message: EventCreateNoopHook): unknown;
    create<I extends {
        noop_hook_id?: string | undefined;
        owner?: string | undefined;
    } & {
        noop_hook_id?: string | undefined;
        owner?: string | undefined;
    } & { [K in Exclude<keyof I, keyof EventCreateNoopHook>]: never; }>(base?: I | undefined): EventCreateNoopHook;
    fromPartial<I_1 extends {
        noop_hook_id?: string | undefined;
        owner?: string | undefined;
    } & {
        noop_hook_id?: string | undefined;
        owner?: string | undefined;
    } & { [K_1 in Exclude<keyof I_1, keyof EventCreateNoopHook>]: never; }>(object: I_1): EventCreateNoopHook;
};
export declare const EventCreateIgp: {
    encode(message: EventCreateIgp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): EventCreateIgp;
    fromJSON(object: any): EventCreateIgp;
    toJSON(message: EventCreateIgp): unknown;
    create<I extends {
        igp_id?: string | undefined;
        owner?: string | undefined;
        denom?: string | undefined;
    } & {
        igp_id?: string | undefined;
        owner?: string | undefined;
        denom?: string | undefined;
    } & { [K in Exclude<keyof I, keyof EventCreateIgp>]: never; }>(base?: I | undefined): EventCreateIgp;
    fromPartial<I_1 extends {
        igp_id?: string | undefined;
        owner?: string | undefined;
        denom?: string | undefined;
    } & {
        igp_id?: string | undefined;
        owner?: string | undefined;
        denom?: string | undefined;
    } & { [K_1 in Exclude<keyof I_1, keyof EventCreateIgp>]: never; }>(object: I_1): EventCreateIgp;
};
export declare const EventSetIgp: {
    encode(message: EventSetIgp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): EventSetIgp;
    fromJSON(object: any): EventSetIgp;
    toJSON(message: EventSetIgp): unknown;
    create<I extends {
        igp_id?: string | undefined;
        owner?: string | undefined;
        new_owner?: string | undefined;
        renounce_ownership?: boolean | undefined;
    } & {
        igp_id?: string | undefined;
        owner?: string | undefined;
        new_owner?: string | undefined;
        renounce_ownership?: boolean | undefined;
    } & { [K in Exclude<keyof I, keyof EventSetIgp>]: never; }>(base?: I | undefined): EventSetIgp;
    fromPartial<I_1 extends {
        igp_id?: string | undefined;
        owner?: string | undefined;
        new_owner?: string | undefined;
        renounce_ownership?: boolean | undefined;
    } & {
        igp_id?: string | undefined;
        owner?: string | undefined;
        new_owner?: string | undefined;
        renounce_ownership?: boolean | undefined;
    } & { [K_1 in Exclude<keyof I_1, keyof EventSetIgp>]: never; }>(object: I_1): EventSetIgp;
};
export declare const EventSetDestinationGasConfig: {
    encode(message: EventSetDestinationGasConfig, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): EventSetDestinationGasConfig;
    fromJSON(object: any): EventSetDestinationGasConfig;
    toJSON(message: EventSetDestinationGasConfig): unknown;
    create<I extends {
        igp_id?: string | undefined;
        owner?: string | undefined;
        remote_domain?: number | undefined;
        gas_overhead?: string | undefined;
        gas_price?: string | undefined;
        token_exchange_rate?: string | undefined;
    } & {
        igp_id?: string | undefined;
        owner?: string | undefined;
        remote_domain?: number | undefined;
        gas_overhead?: string | undefined;
        gas_price?: string | undefined;
        token_exchange_rate?: string | undefined;
    } & { [K in Exclude<keyof I, keyof EventSetDestinationGasConfig>]: never; }>(base?: I | undefined): EventSetDestinationGasConfig;
    fromPartial<I_1 extends {
        igp_id?: string | undefined;
        owner?: string | undefined;
        remote_domain?: number | undefined;
        gas_overhead?: string | undefined;
        gas_price?: string | undefined;
        token_exchange_rate?: string | undefined;
    } & {
        igp_id?: string | undefined;
        owner?: string | undefined;
        remote_domain?: number | undefined;
        gas_overhead?: string | undefined;
        gas_price?: string | undefined;
        token_exchange_rate?: string | undefined;
    } & { [K_1 in Exclude<keyof I_1, keyof EventSetDestinationGasConfig>]: never; }>(object: I_1): EventSetDestinationGasConfig;
};
export declare const EventClaimIgp: {
    encode(message: EventClaimIgp, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): EventClaimIgp;
    fromJSON(object: any): EventClaimIgp;
    toJSON(message: EventClaimIgp): unknown;
    create<I extends {
        igp_id?: string | undefined;
        owner?: string | undefined;
        amount?: string | undefined;
    } & {
        igp_id?: string | undefined;
        owner?: string | undefined;
        amount?: string | undefined;
    } & { [K in Exclude<keyof I, keyof EventClaimIgp>]: never; }>(base?: I | undefined): EventClaimIgp;
    fromPartial<I_1 extends {
        igp_id?: string | undefined;
        owner?: string | undefined;
        amount?: string | undefined;
    } & {
        igp_id?: string | undefined;
        owner?: string | undefined;
        amount?: string | undefined;
    } & { [K_1 in Exclude<keyof I_1, keyof EventClaimIgp>]: never; }>(object: I_1): EventClaimIgp;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & {
    [K in Exclude<keyof I, KeysOfUnion<P>>]: never;
};
export {};
//# sourceMappingURL=events.d.ts.map